-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2019.1 (lin64) Build 2552052 Fri May 24 14:47:09 MDT 2019
-- Date        : Sat Dec 14 20:13:57 2019
-- Host        : ThinkStation-C20 running 64-bit Ubuntu 18.04.3 LTS
-- Command     : write_vhdl -force -mode synth_stub -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
--               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ zed_myFuncAccel4_1_if_0_stub.vhdl
-- Design      : zed_myFuncAccel4_1_if_0
-- Purpose     : Stub declaration of top-level module interface
-- Device      : xc7z020clg484-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
  Port ( 
    s_axi_aclk : in STD_LOGIC;
    s_axi_aresetn : in STD_LOGIC;
    S_AXI_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_AWVALID : in STD_LOGIC;
    S_AXI_AWREADY : out STD_LOGIC;
    S_AXI_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_WVALID : in STD_LOGIC;
    S_AXI_WREADY : out STD_LOGIC;
    S_AXI_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_BVALID : out STD_LOGIC;
    S_AXI_BREADY : in STD_LOGIC;
    S_AXI_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_ARVALID : in STD_LOGIC;
    S_AXI_ARREADY : out STD_LOGIC;
    S_AXI_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S_AXI_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_RVALID : out STD_LOGIC;
    S_AXI_RREADY : in STD_LOGIC;
    acc_aclk : in STD_LOGIC;
    acc_aresetn : in STD_LOGIC;
    ap_resetn : out STD_LOGIC;
    ap_clk : out STD_LOGIC;
    ap_start : out STD_LOGIC;
    ap_idle : in STD_LOGIC;
    ap_done : in STD_LOGIC;
    ap_ready : in STD_LOGIC;
    ap_continue : out STD_LOGIC;
    ap_iscalar_0_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ap_iscalar_1_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ap_iscalar_2_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ap_iscalar_3_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ap_iscalar_4_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ap_iscalar_5_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_0_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_0_AWLEN : in STD_LOGIC_VECTOR ( 7 downto 0 );
    AP_AXIMM_0_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_0_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_0_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_0_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_0_AWREGION : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_AWVALID : in STD_LOGIC;
    AP_AXIMM_0_AWREADY : out STD_LOGIC;
    AP_AXIMM_0_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_0_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_WLAST : in STD_LOGIC;
    AP_AXIMM_0_WVALID : in STD_LOGIC;
    AP_AXIMM_0_WREADY : out STD_LOGIC;
    AP_AXIMM_0_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_0_BVALID : out STD_LOGIC;
    AP_AXIMM_0_BREADY : in STD_LOGIC;
    AP_AXIMM_0_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_0_ARLEN : in STD_LOGIC_VECTOR ( 7 downto 0 );
    AP_AXIMM_0_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_0_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_0_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_0_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_0_ARREGION : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_0_ARVALID : in STD_LOGIC;
    AP_AXIMM_0_ARREADY : out STD_LOGIC;
    AP_AXIMM_0_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_0_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_0_RLAST : out STD_LOGIC;
    AP_AXIMM_0_RVALID : out STD_LOGIC;
    AP_AXIMM_0_RREADY : in STD_LOGIC;
    M_AXIMM_0_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_0_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXIMM_0_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_0_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_0_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_0_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_0_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_AWVALID : out STD_LOGIC;
    M_AXIMM_0_AWREADY : in STD_LOGIC;
    M_AXIMM_0_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_0_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_WLAST : out STD_LOGIC;
    M_AXIMM_0_WVALID : out STD_LOGIC;
    M_AXIMM_0_WREADY : in STD_LOGIC;
    M_AXIMM_0_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_0_BVALID : in STD_LOGIC;
    M_AXIMM_0_BREADY : out STD_LOGIC;
    M_AXIMM_0_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_0_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXIMM_0_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_0_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_0_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_0_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_0_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_0_ARVALID : out STD_LOGIC;
    M_AXIMM_0_ARREADY : in STD_LOGIC;
    M_AXIMM_0_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_0_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_0_RLAST : in STD_LOGIC;
    M_AXIMM_0_RVALID : in STD_LOGIC;
    M_AXIMM_0_RREADY : out STD_LOGIC;
    AP_AXIMM_1_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_1_AWLEN : in STD_LOGIC_VECTOR ( 7 downto 0 );
    AP_AXIMM_1_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_1_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_1_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_1_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_1_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_1_AWREGION : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_1_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_1_AWVALID : in STD_LOGIC;
    AP_AXIMM_1_AWREADY : out STD_LOGIC;
    AP_AXIMM_1_WDATA : in STD_LOGIC_VECTOR ( 127 downto 0 );
    AP_AXIMM_1_WSTRB : in STD_LOGIC_VECTOR ( 15 downto 0 );
    AP_AXIMM_1_WLAST : in STD_LOGIC;
    AP_AXIMM_1_WVALID : in STD_LOGIC;
    AP_AXIMM_1_WREADY : out STD_LOGIC;
    AP_AXIMM_1_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_1_BVALID : out STD_LOGIC;
    AP_AXIMM_1_BREADY : in STD_LOGIC;
    AP_AXIMM_1_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_1_ARLEN : in STD_LOGIC_VECTOR ( 7 downto 0 );
    AP_AXIMM_1_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_1_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_1_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_1_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_1_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_1_ARREGION : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_1_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_1_ARVALID : in STD_LOGIC;
    AP_AXIMM_1_ARREADY : out STD_LOGIC;
    AP_AXIMM_1_RDATA : out STD_LOGIC_VECTOR ( 127 downto 0 );
    AP_AXIMM_1_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_1_RLAST : out STD_LOGIC;
    AP_AXIMM_1_RVALID : out STD_LOGIC;
    AP_AXIMM_1_RREADY : in STD_LOGIC;
    M_AXIMM_1_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_1_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXIMM_1_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_1_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_1_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_1_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_1_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_1_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_1_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_1_AWVALID : out STD_LOGIC;
    M_AXIMM_1_AWREADY : in STD_LOGIC;
    M_AXIMM_1_WDATA : out STD_LOGIC_VECTOR ( 127 downto 0 );
    M_AXIMM_1_WSTRB : out STD_LOGIC_VECTOR ( 15 downto 0 );
    M_AXIMM_1_WLAST : out STD_LOGIC;
    M_AXIMM_1_WVALID : out STD_LOGIC;
    M_AXIMM_1_WREADY : in STD_LOGIC;
    M_AXIMM_1_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_1_BVALID : in STD_LOGIC;
    M_AXIMM_1_BREADY : out STD_LOGIC;
    M_AXIMM_1_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_1_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXIMM_1_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_1_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_1_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_1_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_1_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_1_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_1_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_1_ARVALID : out STD_LOGIC;
    M_AXIMM_1_ARREADY : in STD_LOGIC;
    M_AXIMM_1_RDATA : in STD_LOGIC_VECTOR ( 127 downto 0 );
    M_AXIMM_1_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_1_RLAST : in STD_LOGIC;
    M_AXIMM_1_RVALID : in STD_LOGIC;
    M_AXIMM_1_RREADY : out STD_LOGIC;
    AP_AXIMM_2_AWADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_2_AWLEN : in STD_LOGIC_VECTOR ( 7 downto 0 );
    AP_AXIMM_2_AWSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_2_AWBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_2_AWLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_2_AWCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_2_AWPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_2_AWREGION : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_2_AWQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_2_AWVALID : in STD_LOGIC;
    AP_AXIMM_2_AWREADY : out STD_LOGIC;
    AP_AXIMM_2_WDATA : in STD_LOGIC_VECTOR ( 127 downto 0 );
    AP_AXIMM_2_WSTRB : in STD_LOGIC_VECTOR ( 15 downto 0 );
    AP_AXIMM_2_WLAST : in STD_LOGIC;
    AP_AXIMM_2_WVALID : in STD_LOGIC;
    AP_AXIMM_2_WREADY : out STD_LOGIC;
    AP_AXIMM_2_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_2_BVALID : out STD_LOGIC;
    AP_AXIMM_2_BREADY : in STD_LOGIC;
    AP_AXIMM_2_ARADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    AP_AXIMM_2_ARLEN : in STD_LOGIC_VECTOR ( 7 downto 0 );
    AP_AXIMM_2_ARSIZE : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_2_ARBURST : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_2_ARLOCK : in STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_2_ARCACHE : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_2_ARPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    AP_AXIMM_2_ARREGION : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_2_ARQOS : in STD_LOGIC_VECTOR ( 3 downto 0 );
    AP_AXIMM_2_ARVALID : in STD_LOGIC;
    AP_AXIMM_2_ARREADY : out STD_LOGIC;
    AP_AXIMM_2_RDATA : out STD_LOGIC_VECTOR ( 127 downto 0 );
    AP_AXIMM_2_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    AP_AXIMM_2_RLAST : out STD_LOGIC;
    AP_AXIMM_2_RVALID : out STD_LOGIC;
    AP_AXIMM_2_RREADY : in STD_LOGIC;
    M_AXIMM_2_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_2_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXIMM_2_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_2_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_2_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_2_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_2_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_2_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_2_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_2_AWVALID : out STD_LOGIC;
    M_AXIMM_2_AWREADY : in STD_LOGIC;
    M_AXIMM_2_WDATA : out STD_LOGIC_VECTOR ( 127 downto 0 );
    M_AXIMM_2_WSTRB : out STD_LOGIC_VECTOR ( 15 downto 0 );
    M_AXIMM_2_WLAST : out STD_LOGIC;
    M_AXIMM_2_WVALID : out STD_LOGIC;
    M_AXIMM_2_WREADY : in STD_LOGIC;
    M_AXIMM_2_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_2_BVALID : in STD_LOGIC;
    M_AXIMM_2_BREADY : out STD_LOGIC;
    M_AXIMM_2_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXIMM_2_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXIMM_2_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_2_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_2_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_2_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_2_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXIMM_2_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_2_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXIMM_2_ARVALID : out STD_LOGIC;
    M_AXIMM_2_ARREADY : in STD_LOGIC;
    M_AXIMM_2_RDATA : in STD_LOGIC_VECTOR ( 127 downto 0 );
    M_AXIMM_2_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXIMM_2_RLAST : in STD_LOGIC;
    M_AXIMM_2_RVALID : in STD_LOGIC;
    M_AXIMM_2_RREADY : out STD_LOGIC;
    ap_done_irq : out STD_LOGIC
  );

end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix;

architecture stub of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
attribute syn_black_box : boolean;
attribute black_box_pad_pin : string;
attribute syn_black_box of stub : architecture is true;
attribute black_box_pad_pin of stub : architecture is "s_axi_aclk,s_axi_aresetn,S_AXI_AWADDR[31:0],S_AXI_AWPROT[2:0],S_AXI_AWVALID,S_AXI_AWREADY,S_AXI_WDATA[31:0],S_AXI_WSTRB[3:0],S_AXI_WVALID,S_AXI_WREADY,S_AXI_BRESP[1:0],S_AXI_BVALID,S_AXI_BREADY,S_AXI_ARADDR[31:0],S_AXI_ARPROT[2:0],S_AXI_ARVALID,S_AXI_ARREADY,S_AXI_RDATA[31:0],S_AXI_RRESP[1:0],S_AXI_RVALID,S_AXI_RREADY,acc_aclk,acc_aresetn,ap_resetn,ap_clk,ap_start,ap_idle,ap_done,ap_ready,ap_continue,ap_iscalar_0_dout[31:0],ap_iscalar_1_dout[31:0],ap_iscalar_2_dout[31:0],ap_iscalar_3_dout[31:0],ap_iscalar_4_dout[31:0],ap_iscalar_5_dout[31:0],AP_AXIMM_0_AWADDR[31:0],AP_AXIMM_0_AWLEN[7:0],AP_AXIMM_0_AWSIZE[2:0],AP_AXIMM_0_AWBURST[1:0],AP_AXIMM_0_AWLOCK[1:0],AP_AXIMM_0_AWCACHE[3:0],AP_AXIMM_0_AWPROT[2:0],AP_AXIMM_0_AWREGION[3:0],AP_AXIMM_0_AWQOS[3:0],AP_AXIMM_0_AWVALID,AP_AXIMM_0_AWREADY,AP_AXIMM_0_WDATA[31:0],AP_AXIMM_0_WSTRB[3:0],AP_AXIMM_0_WLAST,AP_AXIMM_0_WVALID,AP_AXIMM_0_WREADY,AP_AXIMM_0_BRESP[1:0],AP_AXIMM_0_BVALID,AP_AXIMM_0_BREADY,AP_AXIMM_0_ARADDR[31:0],AP_AXIMM_0_ARLEN[7:0],AP_AXIMM_0_ARSIZE[2:0],AP_AXIMM_0_ARBURST[1:0],AP_AXIMM_0_ARLOCK[1:0],AP_AXIMM_0_ARCACHE[3:0],AP_AXIMM_0_ARPROT[2:0],AP_AXIMM_0_ARREGION[3:0],AP_AXIMM_0_ARQOS[3:0],AP_AXIMM_0_ARVALID,AP_AXIMM_0_ARREADY,AP_AXIMM_0_RDATA[31:0],AP_AXIMM_0_RRESP[1:0],AP_AXIMM_0_RLAST,AP_AXIMM_0_RVALID,AP_AXIMM_0_RREADY,M_AXIMM_0_AWADDR[31:0],M_AXIMM_0_AWLEN[7:0],M_AXIMM_0_AWSIZE[2:0],M_AXIMM_0_AWBURST[1:0],M_AXIMM_0_AWLOCK[1:0],M_AXIMM_0_AWCACHE[3:0],M_AXIMM_0_AWPROT[2:0],M_AXIMM_0_AWREGION[3:0],M_AXIMM_0_AWQOS[3:0],M_AXIMM_0_AWVALID,M_AXIMM_0_AWREADY,M_AXIMM_0_WDATA[31:0],M_AXIMM_0_WSTRB[3:0],M_AXIMM_0_WLAST,M_AXIMM_0_WVALID,M_AXIMM_0_WREADY,M_AXIMM_0_BRESP[1:0],M_AXIMM_0_BVALID,M_AXIMM_0_BREADY,M_AXIMM_0_ARADDR[31:0],M_AXIMM_0_ARLEN[7:0],M_AXIMM_0_ARSIZE[2:0],M_AXIMM_0_ARBURST[1:0],M_AXIMM_0_ARLOCK[1:0],M_AXIMM_0_ARCACHE[3:0],M_AXIMM_0_ARPROT[2:0],M_AXIMM_0_ARREGION[3:0],M_AXIMM_0_ARQOS[3:0],M_AXIMM_0_ARVALID,M_AXIMM_0_ARREADY,M_AXIMM_0_RDATA[31:0],M_AXIMM_0_RRESP[1:0],M_AXIMM_0_RLAST,M_AXIMM_0_RVALID,M_AXIMM_0_RREADY,AP_AXIMM_1_AWADDR[31:0],AP_AXIMM_1_AWLEN[7:0],AP_AXIMM_1_AWSIZE[2:0],AP_AXIMM_1_AWBURST[1:0],AP_AXIMM_1_AWLOCK[1:0],AP_AXIMM_1_AWCACHE[3:0],AP_AXIMM_1_AWPROT[2:0],AP_AXIMM_1_AWREGION[3:0],AP_AXIMM_1_AWQOS[3:0],AP_AXIMM_1_AWVALID,AP_AXIMM_1_AWREADY,AP_AXIMM_1_WDATA[127:0],AP_AXIMM_1_WSTRB[15:0],AP_AXIMM_1_WLAST,AP_AXIMM_1_WVALID,AP_AXIMM_1_WREADY,AP_AXIMM_1_BRESP[1:0],AP_AXIMM_1_BVALID,AP_AXIMM_1_BREADY,AP_AXIMM_1_ARADDR[31:0],AP_AXIMM_1_ARLEN[7:0],AP_AXIMM_1_ARSIZE[2:0],AP_AXIMM_1_ARBURST[1:0],AP_AXIMM_1_ARLOCK[1:0],AP_AXIMM_1_ARCACHE[3:0],AP_AXIMM_1_ARPROT[2:0],AP_AXIMM_1_ARREGION[3:0],AP_AXIMM_1_ARQOS[3:0],AP_AXIMM_1_ARVALID,AP_AXIMM_1_ARREADY,AP_AXIMM_1_RDATA[127:0],AP_AXIMM_1_RRESP[1:0],AP_AXIMM_1_RLAST,AP_AXIMM_1_RVALID,AP_AXIMM_1_RREADY,M_AXIMM_1_AWADDR[31:0],M_AXIMM_1_AWLEN[7:0],M_AXIMM_1_AWSIZE[2:0],M_AXIMM_1_AWBURST[1:0],M_AXIMM_1_AWLOCK[1:0],M_AXIMM_1_AWCACHE[3:0],M_AXIMM_1_AWPROT[2:0],M_AXIMM_1_AWREGION[3:0],M_AXIMM_1_AWQOS[3:0],M_AXIMM_1_AWVALID,M_AXIMM_1_AWREADY,M_AXIMM_1_WDATA[127:0],M_AXIMM_1_WSTRB[15:0],M_AXIMM_1_WLAST,M_AXIMM_1_WVALID,M_AXIMM_1_WREADY,M_AXIMM_1_BRESP[1:0],M_AXIMM_1_BVALID,M_AXIMM_1_BREADY,M_AXIMM_1_ARADDR[31:0],M_AXIMM_1_ARLEN[7:0],M_AXIMM_1_ARSIZE[2:0],M_AXIMM_1_ARBURST[1:0],M_AXIMM_1_ARLOCK[1:0],M_AXIMM_1_ARCACHE[3:0],M_AXIMM_1_ARPROT[2:0],M_AXIMM_1_ARREGION[3:0],M_AXIMM_1_ARQOS[3:0],M_AXIMM_1_ARVALID,M_AXIMM_1_ARREADY,M_AXIMM_1_RDATA[127:0],M_AXIMM_1_RRESP[1:0],M_AXIMM_1_RLAST,M_AXIMM_1_RVALID,M_AXIMM_1_RREADY,AP_AXIMM_2_AWADDR[31:0],AP_AXIMM_2_AWLEN[7:0],AP_AXIMM_2_AWSIZE[2:0],AP_AXIMM_2_AWBURST[1:0],AP_AXIMM_2_AWLOCK[1:0],AP_AXIMM_2_AWCACHE[3:0],AP_AXIMM_2_AWPROT[2:0],AP_AXIMM_2_AWREGION[3:0],AP_AXIMM_2_AWQOS[3:0],AP_AXIMM_2_AWVALID,AP_AXIMM_2_AWREADY,AP_AXIMM_2_WDATA[127:0],AP_AXIMM_2_WSTRB[15:0],AP_AXIMM_2_WLAST,AP_AXIMM_2_WVALID,AP_AXIMM_2_WREADY,AP_AXIMM_2_BRESP[1:0],AP_AXIMM_2_BVALID,AP_AXIMM_2_BREADY,AP_AXIMM_2_ARADDR[31:0],AP_AXIMM_2_ARLEN[7:0],AP_AXIMM_2_ARSIZE[2:0],AP_AXIMM_2_ARBURST[1:0],AP_AXIMM_2_ARLOCK[1:0],AP_AXIMM_2_ARCACHE[3:0],AP_AXIMM_2_ARPROT[2:0],AP_AXIMM_2_ARREGION[3:0],AP_AXIMM_2_ARQOS[3:0],AP_AXIMM_2_ARVALID,AP_AXIMM_2_ARREADY,AP_AXIMM_2_RDATA[127:0],AP_AXIMM_2_RRESP[1:0],AP_AXIMM_2_RLAST,AP_AXIMM_2_RVALID,AP_AXIMM_2_RREADY,M_AXIMM_2_AWADDR[31:0],M_AXIMM_2_AWLEN[7:0],M_AXIMM_2_AWSIZE[2:0],M_AXIMM_2_AWBURST[1:0],M_AXIMM_2_AWLOCK[1:0],M_AXIMM_2_AWCACHE[3:0],M_AXIMM_2_AWPROT[2:0],M_AXIMM_2_AWREGION[3:0],M_AXIMM_2_AWQOS[3:0],M_AXIMM_2_AWVALID,M_AXIMM_2_AWREADY,M_AXIMM_2_WDATA[127:0],M_AXIMM_2_WSTRB[15:0],M_AXIMM_2_WLAST,M_AXIMM_2_WVALID,M_AXIMM_2_WREADY,M_AXIMM_2_BRESP[1:0],M_AXIMM_2_BVALID,M_AXIMM_2_BREADY,M_AXIMM_2_ARADDR[31:0],M_AXIMM_2_ARLEN[7:0],M_AXIMM_2_ARSIZE[2:0],M_AXIMM_2_ARBURST[1:0],M_AXIMM_2_ARLOCK[1:0],M_AXIMM_2_ARCACHE[3:0],M_AXIMM_2_ARPROT[2:0],M_AXIMM_2_ARREGION[3:0],M_AXIMM_2_ARQOS[3:0],M_AXIMM_2_ARVALID,M_AXIMM_2_ARREADY,M_AXIMM_2_RDATA[127:0],M_AXIMM_2_RRESP[1:0],M_AXIMM_2_RLAST,M_AXIMM_2_RVALID,M_AXIMM_2_RREADY,ap_done_irq";
attribute X_CORE_INFO : string;
attribute X_CORE_INFO of stub : architecture is "top,Vivado 2019.1";
begin
end;
