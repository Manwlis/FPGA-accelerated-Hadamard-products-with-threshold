// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myFuncAccel4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myFuncAccel4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myFuncAccel4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> myFuncAccel4::ap_ST_fsm_state1 = "1";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_state40 = "100000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myFuncAccel4::ap_const_boolean_1 = true;
const sc_lv<32> myFuncAccel4::ap_const_lv32_1 = "1";
const sc_lv<1> myFuncAccel4::ap_const_lv1_0 = "0";
const bool myFuncAccel4::ap_const_boolean_0 = false;
const sc_lv<32> myFuncAccel4::ap_const_lv32_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_4 = "100";
const sc_lv<32> myFuncAccel4::ap_const_lv32_3 = "11";
const sc_lv<1> myFuncAccel4::ap_const_lv1_1 = "1";
const sc_lv<23> myFuncAccel4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_17 = "10111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1E = "11110";
const sc_lv<8> myFuncAccel4::ap_const_lv8_FF = "11111111";
const sc_lv<3> myFuncAccel4::ap_const_lv3_4 = "100";
const sc_lv<5> myFuncAccel4::ap_const_lv5_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_5 = "101";

myFuncAccel4::myFuncAccel4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din0(grp_fu_253_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din1(grp_fu_253_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->ce(grp_fu_253_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_253_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din0(grp_fu_258_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din1(grp_fu_258_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->ce(grp_fu_258_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_258_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->reset(ap_rst);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din0(grp_fu_263_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din1(grp_fu_263_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->ce(grp_fu_263_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->dout(grp_fu_263_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->reset(ap_rst);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din0(grp_fu_268_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din1(grp_fu_268_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->ce(grp_fu_268_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->dout(grp_fu_268_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->reset(ap_rst);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->din0(grp_fu_273_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->din1(grp_fu_273_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->ce(grp_fu_273_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->dout(grp_fu_273_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->reset(ap_rst);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->din0(grp_fu_277_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->din1(grp_fu_277_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->ce(grp_fu_277_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->dout(grp_fu_277_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->reset(ap_rst);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->din0(grp_fu_281_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->din1(grp_fu_281_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->ce(grp_fu_281_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->dout(grp_fu_281_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->reset(ap_rst);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->din0(grp_fu_285_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->din1(grp_fu_285_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->ce(grp_fu_285_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->dout(grp_fu_285_p2);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->reset(ap_rst);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->din0(grp_fu_289_p0);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->ce(grp_fu_289_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->opcode(ap_var_for_const0);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->dout(grp_fu_289_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln51_1_fu_563_p2);
    sensitive << ( zext_ln49_2_fu_503_p1 );
    sensitive << ( zext_ln51_fu_553_p1 );

    SC_METHOD(thread_add_ln51_2_fu_575_p2);
    sensitive << ( zext_ln51_2_fu_572_p1 );
    sensitive << ( zext_ln51_1_fu_569_p1 );

    SC_METHOD(thread_add_ln51_fu_557_p2);
    sensitive << ( zext_ln49_1_fu_454_p1 );
    sensitive << ( zext_ln49_fu_405_p1 );

    SC_METHOD(thread_and_ln51_1_fu_400_p2);
    sensitive << ( tmp_5_reg_948 );
    sensitive << ( and_ln51_fu_395_p2 );

    SC_METHOD(thread_and_ln51_2_fu_444_p2);
    sensitive << ( or_ln51_1_fu_339_p2 );
    sensitive << ( or_ln51_2_fu_438_p2 );

    SC_METHOD(thread_and_ln51_3_fu_449_p2);
    sensitive << ( tmp_8_reg_953 );
    sensitive << ( and_ln51_2_fu_444_p2 );

    SC_METHOD(thread_and_ln51_4_fu_493_p2);
    sensitive << ( or_ln51_1_fu_339_p2 );
    sensitive << ( or_ln51_3_fu_487_p2 );

    SC_METHOD(thread_and_ln51_5_fu_498_p2);
    sensitive << ( tmp_s_reg_958 );
    sensitive << ( and_ln51_4_fu_493_p2 );

    SC_METHOD(thread_and_ln51_6_fu_542_p2);
    sensitive << ( or_ln51_1_fu_339_p2 );
    sensitive << ( or_ln51_4_fu_536_p2 );

    SC_METHOD(thread_and_ln51_7_fu_547_p2);
    sensitive << ( grp_fu_289_p2 );
    sensitive << ( and_ln51_6_fu_542_p2 );

    SC_METHOD(thread_and_ln51_fu_395_p2);
    sensitive << ( or_ln51_1_fu_339_p2 );
    sensitive << ( or_ln51_fu_389_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_00001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_00001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_00001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state16_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state17_pp0_stage3_iter3);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter4);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state23_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state24_pp0_stage2_iter5);

    SC_METHOD(thread_ap_block_state25_pp0_stage3_iter5);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state27_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state28_pp0_stage2_iter6);

    SC_METHOD(thread_ap_block_state29_pp0_stage3_iter6);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state31_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state32_pp0_stage2_iter7);

    SC_METHOD(thread_ap_block_state33_pp0_stage3_iter7);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state35_pp0_stage1_iter8);

    SC_METHOD(thread_ap_block_state36_pp0_stage2_iter8);
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state37_pp0_stage3_iter8);
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state38_pp0_stage0_iter9);
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state39_pp0_stage1_iter9);
    sensitive << ( data_out_req_full_n );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( icmp_ln32_reg_715 );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( icmp_ln32_reg_715 );

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state8_pp0_stage2_iter1);
    sensitive << ( data1_rsp_empty_n );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state9_pp0_stage3_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln32_fu_307_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_246_p4);
    sensitive << ( i_1_reg_242 );
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( i_reg_719 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_bitcast_ln51_1_fu_293_p1);
    sensitive << ( threshold );

    SC_METHOD(thread_bitcast_ln51_2_fu_409_p1);
    sensitive << ( tmp_3_1_3_reg_927_pp0_iter7_reg );

    SC_METHOD(thread_bitcast_ln51_3_fu_458_p1);
    sensitive << ( tmp_3_2_3_reg_934_pp0_iter7_reg );

    SC_METHOD(thread_bitcast_ln51_4_fu_507_p1);
    sensitive << ( tmp_3_3_3_reg_941_pp0_iter7_reg );

    SC_METHOD(thread_bitcast_ln51_fu_360_p1);
    sensitive << ( tmp_3_0_3_reg_920_pp0_iter7_reg );

    SC_METHOD(thread_data1_address);
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( zext_ln40_fu_344_p1 );

    SC_METHOD(thread_data1_dataout);

    SC_METHOD(thread_data1_req_din);
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_data1_req_write);
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_data1_rsp_read);
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_data1_size);
    sensitive << ( icmp_ln32_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_data_out_address);
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( data_out_addr_reg_743_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_data_out_dataout);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( p_tmp_3_0_3_reg_973 );
    sensitive << ( p_tmp_3_1_3_reg_978 );
    sensitive << ( p_tmp_3_2_3_reg_983 );
    sensitive << ( p_tmp_3_3_3_reg_988 );

    SC_METHOD(thread_data_out_req_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_data_out_req_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter9_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_data_out_rsp_read);

    SC_METHOD(thread_data_out_size);
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_253_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_253_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_2_reg_780 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_860 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_0_1_reg_880 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_0_2_reg_900 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_253_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_0_1_reg_800_pp0_iter3_reg );
    sensitive << ( tmp_2_0_2_reg_820_pp0_iter4_reg );
    sensitive << ( tmp_2_0_3_reg_840_pp0_iter5_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_258_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_258_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_2_1_reg_785 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_1_reg_865 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_1_1_reg_885 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_3_1_2_reg_905 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_258_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_1_1_reg_805_pp0_iter3_reg );
    sensitive << ( tmp_2_1_2_reg_825_pp0_iter4_reg );
    sensitive << ( tmp_2_1_3_reg_845_pp0_iter5_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_263_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_263_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_2_2_reg_790 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_2_reg_870 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_2_1_reg_890 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_3_2_2_reg_910 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_263_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_2_1_reg_810_pp0_iter3_reg );
    sensitive << ( tmp_2_2_2_reg_830_pp0_iter4_reg );
    sensitive << ( tmp_2_2_3_reg_850_pp0_iter5_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_268_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_268_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_2_3_reg_795 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_3_reg_875 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_3_1_reg_895 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( tmp_3_3_2_reg_915 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_268_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_3_1_reg_815_pp0_iter3_reg );
    sensitive << ( tmp_2_3_2_reg_835_pp0_iter4_reg );
    sensitive << ( tmp_2_3_3_reg_855_pp0_iter5_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_273_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_273_p0);
    sensitive << ( data0_0 );
    sensitive << ( data0_1 );
    sensitive << ( data0_2 );
    sensitive << ( data0_3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_273_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( data1_addr_read_reg_748 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( data1_addr_read_1_reg_756 );
    sensitive << ( data1_addr_read_2_reg_764 );
    sensitive << ( data1_addr_read_3_reg_772 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_277_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_277_p0);
    sensitive << ( data0_4 );
    sensitive << ( data0_5 );
    sensitive << ( data0_6 );
    sensitive << ( data0_7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_277_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( data1_addr_read_reg_748 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( data1_addr_read_1_reg_756 );
    sensitive << ( data1_addr_read_2_reg_764 );
    sensitive << ( data1_addr_read_3_reg_772 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_281_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_281_p0);
    sensitive << ( data0_8 );
    sensitive << ( data0_9 );
    sensitive << ( data0_10 );
    sensitive << ( data0_11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_281_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( data1_addr_read_reg_748 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( data1_addr_read_1_reg_756 );
    sensitive << ( data1_addr_read_2_reg_764 );
    sensitive << ( data1_addr_read_3_reg_772 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_285_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_285_p0);
    sensitive << ( data0_12 );
    sensitive << ( data0_13 );
    sensitive << ( data0_14 );
    sensitive << ( data0_15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_285_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( data1_addr_read_reg_748 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( data1_addr_read_1_reg_756 );
    sensitive << ( data1_addr_read_2_reg_764 );
    sensitive << ( data1_addr_read_3_reg_772 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_289_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_289_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_3_0_3_reg_920 );
    sensitive << ( tmp_3_1_3_reg_927 );
    sensitive << ( tmp_3_2_3_reg_934 );
    sensitive << ( tmp_3_3_3_reg_941 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_i_fu_312_p2);
    sensitive << ( ap_phi_mux_i_1_phi_fu_246_p4 );

    SC_METHOD(thread_icmp_ln32_fu_307_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_1_phi_fu_246_p4 );

    SC_METHOD(thread_icmp_ln51_1_fu_383_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( trunc_ln51_1_fu_373_p1 );

    SC_METHOD(thread_icmp_ln51_2_fu_333_p2);
    sensitive << ( icmp_ln32_fu_307_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_fu_324_p4 );

    SC_METHOD(thread_icmp_ln51_3_fu_301_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( trunc_ln51_fu_297_p1 );

    SC_METHOD(thread_icmp_ln51_4_fu_426_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_6_fu_412_p4 );

    SC_METHOD(thread_icmp_ln51_5_fu_432_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( trunc_ln51_2_fu_422_p1 );

    SC_METHOD(thread_icmp_ln51_6_fu_475_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_9_fu_461_p4 );

    SC_METHOD(thread_icmp_ln51_7_fu_481_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( trunc_ln51_3_fu_471_p1 );

    SC_METHOD(thread_icmp_ln51_8_fu_524_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_7_fu_510_p4 );

    SC_METHOD(thread_icmp_ln51_9_fu_530_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( trunc_ln51_4_fu_520_p1 );

    SC_METHOD(thread_icmp_ln51_fu_377_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln32_reg_715_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( tmp_1_fu_363_p4 );

    SC_METHOD(thread_icmp_ln53_fu_581_p2);
    sensitive << ( icmp_ln32_reg_715_pp0_iter8_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( add_ln51_2_fu_575_p2 );

    SC_METHOD(thread_or_ln51_1_fu_339_p2);
    sensitive << ( icmp_ln51_3_fu_301_p2 );
    sensitive << ( icmp_ln51_2_fu_333_p2 );

    SC_METHOD(thread_or_ln51_2_fu_438_p2);
    sensitive << ( icmp_ln51_5_fu_432_p2 );
    sensitive << ( icmp_ln51_4_fu_426_p2 );

    SC_METHOD(thread_or_ln51_3_fu_487_p2);
    sensitive << ( icmp_ln51_7_fu_481_p2 );
    sensitive << ( icmp_ln51_6_fu_475_p2 );

    SC_METHOD(thread_or_ln51_4_fu_536_p2);
    sensitive << ( icmp_ln51_9_fu_530_p2 );
    sensitive << ( icmp_ln51_8_fu_524_p2 );

    SC_METHOD(thread_or_ln51_fu_389_p2);
    sensitive << ( icmp_ln51_1_fu_383_p2 );
    sensitive << ( icmp_ln51_fu_377_p2 );

    SC_METHOD(thread_p_tmp_3_0_3_fu_587_p3);
    sensitive << ( tmp_3_0_3_reg_920_pp0_iter7_reg );
    sensitive << ( icmp_ln53_fu_581_p2 );

    SC_METHOD(thread_p_tmp_3_1_3_fu_594_p3);
    sensitive << ( tmp_3_1_3_reg_927_pp0_iter7_reg );
    sensitive << ( icmp_ln53_fu_581_p2 );

    SC_METHOD(thread_p_tmp_3_2_3_fu_601_p3);
    sensitive << ( tmp_3_2_3_reg_934_pp0_iter7_reg );
    sensitive << ( icmp_ln53_fu_581_p2 );

    SC_METHOD(thread_p_tmp_3_3_3_fu_608_p3);
    sensitive << ( tmp_3_3_3_reg_941_pp0_iter7_reg );
    sensitive << ( icmp_ln53_fu_581_p2 );

    SC_METHOD(thread_shl_ln40_fu_318_p2);
    sensitive << ( ap_phi_mux_i_1_phi_fu_246_p4 );

    SC_METHOD(thread_tmp_1_fu_363_p4);
    sensitive << ( bitcast_ln51_fu_360_p1 );

    SC_METHOD(thread_tmp_4_fu_324_p4);
    sensitive << ( bitcast_ln51_1_fu_293_p1 );

    SC_METHOD(thread_tmp_6_fu_412_p4);
    sensitive << ( bitcast_ln51_2_fu_409_p1 );

    SC_METHOD(thread_tmp_7_fu_510_p4);
    sensitive << ( bitcast_ln51_4_fu_507_p1 );

    SC_METHOD(thread_tmp_9_fu_461_p4);
    sensitive << ( bitcast_ln51_3_fu_458_p1 );

    SC_METHOD(thread_trunc_ln51_1_fu_373_p1);
    sensitive << ( bitcast_ln51_fu_360_p1 );

    SC_METHOD(thread_trunc_ln51_2_fu_422_p1);
    sensitive << ( bitcast_ln51_2_fu_409_p1 );

    SC_METHOD(thread_trunc_ln51_3_fu_471_p1);
    sensitive << ( bitcast_ln51_3_fu_458_p1 );

    SC_METHOD(thread_trunc_ln51_4_fu_520_p1);
    sensitive << ( bitcast_ln51_4_fu_507_p1 );

    SC_METHOD(thread_trunc_ln51_fu_297_p1);
    sensitive << ( bitcast_ln51_1_fu_293_p1 );

    SC_METHOD(thread_zext_ln40_fu_344_p1);
    sensitive << ( shl_ln40_reg_724 );

    SC_METHOD(thread_zext_ln49_1_fu_454_p1);
    sensitive << ( and_ln51_3_fu_449_p2 );

    SC_METHOD(thread_zext_ln49_2_fu_503_p1);
    sensitive << ( and_ln51_5_fu_498_p2 );

    SC_METHOD(thread_zext_ln49_fu_405_p1);
    sensitive << ( and_ln51_1_fu_400_p2 );

    SC_METHOD(thread_zext_ln51_1_fu_569_p1);
    sensitive << ( add_ln51_reg_963 );

    SC_METHOD(thread_zext_ln51_2_fu_572_p1);
    sensitive << ( add_ln51_1_reg_968 );

    SC_METHOD(thread_zext_ln51_fu_553_p1);
    sensitive << ( and_ln51_7_fu_547_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln32_fu_307_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myFuncAccel4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, size, "(port)size");
    sc_trace(mVcdFile, dim, "(port)dim");
    sc_trace(mVcdFile, threshold, "(port)threshold");
    sc_trace(mVcdFile, data0_0, "(port)data0_0");
    sc_trace(mVcdFile, data0_1, "(port)data0_1");
    sc_trace(mVcdFile, data0_2, "(port)data0_2");
    sc_trace(mVcdFile, data0_3, "(port)data0_3");
    sc_trace(mVcdFile, data0_4, "(port)data0_4");
    sc_trace(mVcdFile, data0_5, "(port)data0_5");
    sc_trace(mVcdFile, data0_6, "(port)data0_6");
    sc_trace(mVcdFile, data0_7, "(port)data0_7");
    sc_trace(mVcdFile, data0_8, "(port)data0_8");
    sc_trace(mVcdFile, data0_9, "(port)data0_9");
    sc_trace(mVcdFile, data0_10, "(port)data0_10");
    sc_trace(mVcdFile, data0_11, "(port)data0_11");
    sc_trace(mVcdFile, data0_12, "(port)data0_12");
    sc_trace(mVcdFile, data0_13, "(port)data0_13");
    sc_trace(mVcdFile, data0_14, "(port)data0_14");
    sc_trace(mVcdFile, data0_15, "(port)data0_15");
    sc_trace(mVcdFile, data1_req_din, "(port)data1_req_din");
    sc_trace(mVcdFile, data1_req_full_n, "(port)data1_req_full_n");
    sc_trace(mVcdFile, data1_req_write, "(port)data1_req_write");
    sc_trace(mVcdFile, data1_rsp_empty_n, "(port)data1_rsp_empty_n");
    sc_trace(mVcdFile, data1_rsp_read, "(port)data1_rsp_read");
    sc_trace(mVcdFile, data1_address, "(port)data1_address");
    sc_trace(mVcdFile, data1_datain, "(port)data1_datain");
    sc_trace(mVcdFile, data1_dataout, "(port)data1_dataout");
    sc_trace(mVcdFile, data1_size, "(port)data1_size");
    sc_trace(mVcdFile, data_out_req_din, "(port)data_out_req_din");
    sc_trace(mVcdFile, data_out_req_full_n, "(port)data_out_req_full_n");
    sc_trace(mVcdFile, data_out_req_write, "(port)data_out_req_write");
    sc_trace(mVcdFile, data_out_rsp_empty_n, "(port)data_out_rsp_empty_n");
    sc_trace(mVcdFile, data_out_rsp_read, "(port)data_out_rsp_read");
    sc_trace(mVcdFile, data_out_address, "(port)data_out_address");
    sc_trace(mVcdFile, data_out_datain, "(port)data_out_datain");
    sc_trace(mVcdFile, data_out_dataout, "(port)data_out_dataout");
    sc_trace(mVcdFile, data_out_size, "(port)data_out_size");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_reg_242, "i_1_reg_242");
    sc_trace(mVcdFile, bitcast_ln51_1_fu_293_p1, "bitcast_ln51_1_fu_293_p1");
    sc_trace(mVcdFile, icmp_ln51_3_fu_301_p2, "icmp_ln51_3_fu_301_p2");
    sc_trace(mVcdFile, icmp_ln32_fu_307_p2, "icmp_ln32_fu_307_p2");
    sc_trace(mVcdFile, icmp_ln32_reg_715, "icmp_ln32_reg_715");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter2, "ap_block_state10_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter3, "ap_block_state14_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter4, "ap_block_state18_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter5, "ap_block_state22_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter6, "ap_block_state26_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter7, "ap_block_state30_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter8, "ap_block_state34_pp0_stage0_iter8");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter8_reg, "icmp_ln32_reg_715_pp0_iter8_reg");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage0_iter9, "ap_block_state38_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter1_reg, "icmp_ln32_reg_715_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter2_reg, "icmp_ln32_reg_715_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter3_reg, "icmp_ln32_reg_715_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter4_reg, "icmp_ln32_reg_715_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter5_reg, "icmp_ln32_reg_715_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter6_reg, "icmp_ln32_reg_715_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter7_reg, "icmp_ln32_reg_715_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln32_reg_715_pp0_iter9_reg, "icmp_ln32_reg_715_pp0_iter9_reg");
    sc_trace(mVcdFile, i_fu_312_p2, "i_fu_312_p2");
    sc_trace(mVcdFile, i_reg_719, "i_reg_719");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, shl_ln40_fu_318_p2, "shl_ln40_fu_318_p2");
    sc_trace(mVcdFile, shl_ln40_reg_724, "shl_ln40_reg_724");
    sc_trace(mVcdFile, or_ln51_1_fu_339_p2, "or_ln51_1_fu_339_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter2, "ap_block_state11_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter3, "ap_block_state15_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter4, "ap_block_state19_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage1_iter5, "ap_block_state23_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage1_iter6, "ap_block_state27_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage1_iter7, "ap_block_state31_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage1_iter8, "ap_block_state35_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_state39_pp0_stage1_iter9, "ap_block_state39_pp0_stage1_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, data_out_addr_reg_743, "data_out_addr_reg_743");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter1_reg, "data_out_addr_reg_743_pp0_iter1_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter2_reg, "data_out_addr_reg_743_pp0_iter2_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter3_reg, "data_out_addr_reg_743_pp0_iter3_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter4_reg, "data_out_addr_reg_743_pp0_iter4_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter5_reg, "data_out_addr_reg_743_pp0_iter5_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter6_reg, "data_out_addr_reg_743_pp0_iter6_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter7_reg, "data_out_addr_reg_743_pp0_iter7_reg");
    sc_trace(mVcdFile, data_out_addr_reg_743_pp0_iter8_reg, "data_out_addr_reg_743_pp0_iter8_reg");
    sc_trace(mVcdFile, data1_addr_read_reg_748, "data1_addr_read_reg_748");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage3_iter1, "ap_block_state9_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter2, "ap_block_state13_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage3_iter3, "ap_block_state17_pp0_stage3_iter3");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter4, "ap_block_state21_pp0_stage3_iter4");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage3_iter5, "ap_block_state25_pp0_stage3_iter5");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage3_iter6, "ap_block_state29_pp0_stage3_iter6");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage3_iter7, "ap_block_state33_pp0_stage3_iter7");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage3_iter8, "ap_block_state37_pp0_stage3_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, data1_addr_read_1_reg_756, "data1_addr_read_1_reg_756");
    sc_trace(mVcdFile, data1_addr_read_2_reg_764, "data1_addr_read_2_reg_764");
    sc_trace(mVcdFile, data1_addr_read_3_reg_772, "data1_addr_read_3_reg_772");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage2_iter1, "ap_block_state8_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter2, "ap_block_state12_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage2_iter3, "ap_block_state16_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter4, "ap_block_state20_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage2_iter5, "ap_block_state24_pp0_stage2_iter5");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage2_iter6, "ap_block_state28_pp0_stage2_iter6");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage2_iter7, "ap_block_state32_pp0_stage2_iter7");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage2_iter8, "ap_block_state36_pp0_stage2_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, grp_fu_273_p2, "grp_fu_273_p2");
    sc_trace(mVcdFile, tmp_2_reg_780, "tmp_2_reg_780");
    sc_trace(mVcdFile, grp_fu_277_p2, "grp_fu_277_p2");
    sc_trace(mVcdFile, tmp_2_1_reg_785, "tmp_2_1_reg_785");
    sc_trace(mVcdFile, grp_fu_281_p2, "grp_fu_281_p2");
    sc_trace(mVcdFile, tmp_2_2_reg_790, "tmp_2_2_reg_790");
    sc_trace(mVcdFile, grp_fu_285_p2, "grp_fu_285_p2");
    sc_trace(mVcdFile, tmp_2_3_reg_795, "tmp_2_3_reg_795");
    sc_trace(mVcdFile, tmp_2_0_1_reg_800, "tmp_2_0_1_reg_800");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_2_0_1_reg_800_pp0_iter3_reg, "tmp_2_0_1_reg_800_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_1_reg_805, "tmp_2_1_1_reg_805");
    sc_trace(mVcdFile, tmp_2_1_1_reg_805_pp0_iter3_reg, "tmp_2_1_1_reg_805_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_1_reg_810, "tmp_2_2_1_reg_810");
    sc_trace(mVcdFile, tmp_2_2_1_reg_810_pp0_iter3_reg, "tmp_2_2_1_reg_810_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_1_reg_815, "tmp_2_3_1_reg_815");
    sc_trace(mVcdFile, tmp_2_3_1_reg_815_pp0_iter3_reg, "tmp_2_3_1_reg_815_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_2_reg_820, "tmp_2_0_2_reg_820");
    sc_trace(mVcdFile, tmp_2_0_2_reg_820_pp0_iter3_reg, "tmp_2_0_2_reg_820_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_2_reg_820_pp0_iter4_reg, "tmp_2_0_2_reg_820_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_1_2_reg_825, "tmp_2_1_2_reg_825");
    sc_trace(mVcdFile, tmp_2_1_2_reg_825_pp0_iter3_reg, "tmp_2_1_2_reg_825_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_2_reg_825_pp0_iter4_reg, "tmp_2_1_2_reg_825_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_2_2_reg_830, "tmp_2_2_2_reg_830");
    sc_trace(mVcdFile, tmp_2_2_2_reg_830_pp0_iter3_reg, "tmp_2_2_2_reg_830_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_2_reg_830_pp0_iter4_reg, "tmp_2_2_2_reg_830_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_3_2_reg_835, "tmp_2_3_2_reg_835");
    sc_trace(mVcdFile, tmp_2_3_2_reg_835_pp0_iter3_reg, "tmp_2_3_2_reg_835_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_2_reg_835_pp0_iter4_reg, "tmp_2_3_2_reg_835_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_840, "tmp_2_0_3_reg_840");
    sc_trace(mVcdFile, tmp_2_0_3_reg_840_pp0_iter3_reg, "tmp_2_0_3_reg_840_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_840_pp0_iter4_reg, "tmp_2_0_3_reg_840_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_840_pp0_iter5_reg, "tmp_2_0_3_reg_840_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_845, "tmp_2_1_3_reg_845");
    sc_trace(mVcdFile, tmp_2_1_3_reg_845_pp0_iter3_reg, "tmp_2_1_3_reg_845_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_845_pp0_iter4_reg, "tmp_2_1_3_reg_845_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_845_pp0_iter5_reg, "tmp_2_1_3_reg_845_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_850, "tmp_2_2_3_reg_850");
    sc_trace(mVcdFile, tmp_2_2_3_reg_850_pp0_iter3_reg, "tmp_2_2_3_reg_850_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_850_pp0_iter4_reg, "tmp_2_2_3_reg_850_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_850_pp0_iter5_reg, "tmp_2_2_3_reg_850_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_855, "tmp_2_3_3_reg_855");
    sc_trace(mVcdFile, tmp_2_3_3_reg_855_pp0_iter3_reg, "tmp_2_3_3_reg_855_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_855_pp0_iter4_reg, "tmp_2_3_3_reg_855_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_855_pp0_iter5_reg, "tmp_2_3_3_reg_855_pp0_iter5_reg");
    sc_trace(mVcdFile, grp_fu_253_p2, "grp_fu_253_p2");
    sc_trace(mVcdFile, tmp_3_reg_860, "tmp_3_reg_860");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, grp_fu_258_p2, "grp_fu_258_p2");
    sc_trace(mVcdFile, tmp_3_1_reg_865, "tmp_3_1_reg_865");
    sc_trace(mVcdFile, grp_fu_263_p2, "grp_fu_263_p2");
    sc_trace(mVcdFile, tmp_3_2_reg_870, "tmp_3_2_reg_870");
    sc_trace(mVcdFile, grp_fu_268_p2, "grp_fu_268_p2");
    sc_trace(mVcdFile, tmp_3_3_reg_875, "tmp_3_3_reg_875");
    sc_trace(mVcdFile, tmp_3_0_1_reg_880, "tmp_3_0_1_reg_880");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, tmp_3_1_1_reg_885, "tmp_3_1_1_reg_885");
    sc_trace(mVcdFile, tmp_3_2_1_reg_890, "tmp_3_2_1_reg_890");
    sc_trace(mVcdFile, tmp_3_3_1_reg_895, "tmp_3_3_1_reg_895");
    sc_trace(mVcdFile, tmp_3_0_2_reg_900, "tmp_3_0_2_reg_900");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, tmp_3_1_2_reg_905, "tmp_3_1_2_reg_905");
    sc_trace(mVcdFile, tmp_3_2_2_reg_910, "tmp_3_2_2_reg_910");
    sc_trace(mVcdFile, tmp_3_3_2_reg_915, "tmp_3_3_2_reg_915");
    sc_trace(mVcdFile, tmp_3_0_3_reg_920, "tmp_3_0_3_reg_920");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, tmp_3_0_3_reg_920_pp0_iter7_reg, "tmp_3_0_3_reg_920_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_3_1_3_reg_927, "tmp_3_1_3_reg_927");
    sc_trace(mVcdFile, tmp_3_1_3_reg_927_pp0_iter7_reg, "tmp_3_1_3_reg_927_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_3_2_3_reg_934, "tmp_3_2_3_reg_934");
    sc_trace(mVcdFile, tmp_3_2_3_reg_934_pp0_iter7_reg, "tmp_3_2_3_reg_934_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_3_3_3_reg_941, "tmp_3_3_3_reg_941");
    sc_trace(mVcdFile, tmp_3_3_3_reg_941_pp0_iter7_reg, "tmp_3_3_3_reg_941_pp0_iter7_reg");
    sc_trace(mVcdFile, grp_fu_289_p2, "grp_fu_289_p2");
    sc_trace(mVcdFile, tmp_5_reg_948, "tmp_5_reg_948");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, tmp_8_reg_953, "tmp_8_reg_953");
    sc_trace(mVcdFile, tmp_s_reg_958, "tmp_s_reg_958");
    sc_trace(mVcdFile, add_ln51_fu_557_p2, "add_ln51_fu_557_p2");
    sc_trace(mVcdFile, add_ln51_reg_963, "add_ln51_reg_963");
    sc_trace(mVcdFile, add_ln51_1_fu_563_p2, "add_ln51_1_fu_563_p2");
    sc_trace(mVcdFile, add_ln51_1_reg_968, "add_ln51_1_reg_968");
    sc_trace(mVcdFile, p_tmp_3_0_3_fu_587_p3, "p_tmp_3_0_3_fu_587_p3");
    sc_trace(mVcdFile, p_tmp_3_0_3_reg_973, "p_tmp_3_0_3_reg_973");
    sc_trace(mVcdFile, p_tmp_3_1_3_fu_594_p3, "p_tmp_3_1_3_fu_594_p3");
    sc_trace(mVcdFile, p_tmp_3_1_3_reg_978, "p_tmp_3_1_3_reg_978");
    sc_trace(mVcdFile, p_tmp_3_2_3_fu_601_p3, "p_tmp_3_2_3_fu_601_p3");
    sc_trace(mVcdFile, p_tmp_3_2_3_reg_983, "p_tmp_3_2_3_reg_983");
    sc_trace(mVcdFile, p_tmp_3_3_3_fu_608_p3, "p_tmp_3_3_3_fu_608_p3");
    sc_trace(mVcdFile, p_tmp_3_3_3_reg_988, "p_tmp_3_3_3_reg_988");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_246_p4, "ap_phi_mux_i_1_phi_fu_246_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln40_fu_344_p1, "zext_ln40_fu_344_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, grp_fu_253_p0, "grp_fu_253_p0");
    sc_trace(mVcdFile, grp_fu_253_p1, "grp_fu_253_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, grp_fu_258_p0, "grp_fu_258_p0");
    sc_trace(mVcdFile, grp_fu_258_p1, "grp_fu_258_p1");
    sc_trace(mVcdFile, grp_fu_263_p0, "grp_fu_263_p0");
    sc_trace(mVcdFile, grp_fu_263_p1, "grp_fu_263_p1");
    sc_trace(mVcdFile, grp_fu_268_p0, "grp_fu_268_p0");
    sc_trace(mVcdFile, grp_fu_268_p1, "grp_fu_268_p1");
    sc_trace(mVcdFile, grp_fu_273_p0, "grp_fu_273_p0");
    sc_trace(mVcdFile, grp_fu_273_p1, "grp_fu_273_p1");
    sc_trace(mVcdFile, grp_fu_277_p0, "grp_fu_277_p0");
    sc_trace(mVcdFile, grp_fu_277_p1, "grp_fu_277_p1");
    sc_trace(mVcdFile, grp_fu_281_p0, "grp_fu_281_p0");
    sc_trace(mVcdFile, grp_fu_281_p1, "grp_fu_281_p1");
    sc_trace(mVcdFile, grp_fu_285_p0, "grp_fu_285_p0");
    sc_trace(mVcdFile, grp_fu_285_p1, "grp_fu_285_p1");
    sc_trace(mVcdFile, grp_fu_289_p0, "grp_fu_289_p0");
    sc_trace(mVcdFile, trunc_ln51_fu_297_p1, "trunc_ln51_fu_297_p1");
    sc_trace(mVcdFile, tmp_4_fu_324_p4, "tmp_4_fu_324_p4");
    sc_trace(mVcdFile, icmp_ln51_2_fu_333_p2, "icmp_ln51_2_fu_333_p2");
    sc_trace(mVcdFile, bitcast_ln51_fu_360_p1, "bitcast_ln51_fu_360_p1");
    sc_trace(mVcdFile, tmp_1_fu_363_p4, "tmp_1_fu_363_p4");
    sc_trace(mVcdFile, trunc_ln51_1_fu_373_p1, "trunc_ln51_1_fu_373_p1");
    sc_trace(mVcdFile, icmp_ln51_1_fu_383_p2, "icmp_ln51_1_fu_383_p2");
    sc_trace(mVcdFile, icmp_ln51_fu_377_p2, "icmp_ln51_fu_377_p2");
    sc_trace(mVcdFile, or_ln51_fu_389_p2, "or_ln51_fu_389_p2");
    sc_trace(mVcdFile, and_ln51_fu_395_p2, "and_ln51_fu_395_p2");
    sc_trace(mVcdFile, and_ln51_1_fu_400_p2, "and_ln51_1_fu_400_p2");
    sc_trace(mVcdFile, bitcast_ln51_2_fu_409_p1, "bitcast_ln51_2_fu_409_p1");
    sc_trace(mVcdFile, tmp_6_fu_412_p4, "tmp_6_fu_412_p4");
    sc_trace(mVcdFile, trunc_ln51_2_fu_422_p1, "trunc_ln51_2_fu_422_p1");
    sc_trace(mVcdFile, icmp_ln51_5_fu_432_p2, "icmp_ln51_5_fu_432_p2");
    sc_trace(mVcdFile, icmp_ln51_4_fu_426_p2, "icmp_ln51_4_fu_426_p2");
    sc_trace(mVcdFile, or_ln51_2_fu_438_p2, "or_ln51_2_fu_438_p2");
    sc_trace(mVcdFile, and_ln51_2_fu_444_p2, "and_ln51_2_fu_444_p2");
    sc_trace(mVcdFile, and_ln51_3_fu_449_p2, "and_ln51_3_fu_449_p2");
    sc_trace(mVcdFile, bitcast_ln51_3_fu_458_p1, "bitcast_ln51_3_fu_458_p1");
    sc_trace(mVcdFile, tmp_9_fu_461_p4, "tmp_9_fu_461_p4");
    sc_trace(mVcdFile, trunc_ln51_3_fu_471_p1, "trunc_ln51_3_fu_471_p1");
    sc_trace(mVcdFile, icmp_ln51_7_fu_481_p2, "icmp_ln51_7_fu_481_p2");
    sc_trace(mVcdFile, icmp_ln51_6_fu_475_p2, "icmp_ln51_6_fu_475_p2");
    sc_trace(mVcdFile, or_ln51_3_fu_487_p2, "or_ln51_3_fu_487_p2");
    sc_trace(mVcdFile, and_ln51_4_fu_493_p2, "and_ln51_4_fu_493_p2");
    sc_trace(mVcdFile, and_ln51_5_fu_498_p2, "and_ln51_5_fu_498_p2");
    sc_trace(mVcdFile, bitcast_ln51_4_fu_507_p1, "bitcast_ln51_4_fu_507_p1");
    sc_trace(mVcdFile, tmp_7_fu_510_p4, "tmp_7_fu_510_p4");
    sc_trace(mVcdFile, trunc_ln51_4_fu_520_p1, "trunc_ln51_4_fu_520_p1");
    sc_trace(mVcdFile, icmp_ln51_9_fu_530_p2, "icmp_ln51_9_fu_530_p2");
    sc_trace(mVcdFile, icmp_ln51_8_fu_524_p2, "icmp_ln51_8_fu_524_p2");
    sc_trace(mVcdFile, or_ln51_4_fu_536_p2, "or_ln51_4_fu_536_p2");
    sc_trace(mVcdFile, and_ln51_6_fu_542_p2, "and_ln51_6_fu_542_p2");
    sc_trace(mVcdFile, and_ln51_7_fu_547_p2, "and_ln51_7_fu_547_p2");
    sc_trace(mVcdFile, zext_ln49_1_fu_454_p1, "zext_ln49_1_fu_454_p1");
    sc_trace(mVcdFile, zext_ln49_fu_405_p1, "zext_ln49_fu_405_p1");
    sc_trace(mVcdFile, zext_ln49_2_fu_503_p1, "zext_ln49_2_fu_503_p1");
    sc_trace(mVcdFile, zext_ln51_fu_553_p1, "zext_ln51_fu_553_p1");
    sc_trace(mVcdFile, zext_ln51_2_fu_572_p1, "zext_ln51_2_fu_572_p1");
    sc_trace(mVcdFile, zext_ln51_1_fu_569_p1, "zext_ln51_1_fu_569_p1");
    sc_trace(mVcdFile, add_ln51_2_fu_575_p2, "add_ln51_2_fu_575_p2");
    sc_trace(mVcdFile, icmp_ln53_fu_581_p2, "icmp_ln53_fu_581_p2");
    sc_trace(mVcdFile, grp_fu_253_ce, "grp_fu_253_ce");
    sc_trace(mVcdFile, grp_fu_258_ce, "grp_fu_258_ce");
    sc_trace(mVcdFile, grp_fu_263_ce, "grp_fu_263_ce");
    sc_trace(mVcdFile, grp_fu_268_ce, "grp_fu_268_ce");
    sc_trace(mVcdFile, grp_fu_273_ce, "grp_fu_273_ce");
    sc_trace(mVcdFile, grp_fu_277_ce, "grp_fu_277_ce");
    sc_trace(mVcdFile, grp_fu_281_ce, "grp_fu_281_ce");
    sc_trace(mVcdFile, grp_fu_285_ce, "grp_fu_285_ce");
    sc_trace(mVcdFile, grp_fu_289_ce, "grp_fu_289_ce");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_00001, "ap_block_pp0_stage1_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_00001, "ap_block_pp0_stage2_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_00001, "ap_block_pp0_stage3_00001");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("myFuncAccel4.hdltvin.dat");
    mHdltvoutHandle.open("myFuncAccel4.hdltvout.dat");
}

myFuncAccel4::~myFuncAccel4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9;
}

void myFuncAccel4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void myFuncAccel4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter9 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_1_reg_242 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_1_reg_242 = i_reg_719.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter7_reg.read()))) {
        add_ln51_1_reg_968 = add_ln51_1_fu_563_p2.read();
        add_ln51_reg_963 = add_ln51_fu_557_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data1_addr_read_1_reg_756 = data1_datain.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data1_addr_read_2_reg_764 = data1_datain.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        data1_addr_read_3_reg_772 = data1_datain.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        data1_addr_read_reg_748 = data1_datain.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data_out_addr_reg_743 =  (sc_lv<32>) (zext_ln40_fu_344_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data_out_addr_reg_743_pp0_iter1_reg = data_out_addr_reg_743.read();
        data_out_addr_reg_743_pp0_iter2_reg = data_out_addr_reg_743_pp0_iter1_reg.read();
        data_out_addr_reg_743_pp0_iter3_reg = data_out_addr_reg_743_pp0_iter2_reg.read();
        data_out_addr_reg_743_pp0_iter4_reg = data_out_addr_reg_743_pp0_iter3_reg.read();
        data_out_addr_reg_743_pp0_iter5_reg = data_out_addr_reg_743_pp0_iter4_reg.read();
        data_out_addr_reg_743_pp0_iter6_reg = data_out_addr_reg_743_pp0_iter5_reg.read();
        data_out_addr_reg_743_pp0_iter7_reg = data_out_addr_reg_743_pp0_iter6_reg.read();
        data_out_addr_reg_743_pp0_iter8_reg = data_out_addr_reg_743_pp0_iter7_reg.read();
        tmp_2_0_2_reg_820_pp0_iter3_reg = tmp_2_0_2_reg_820.read();
        tmp_2_0_2_reg_820_pp0_iter4_reg = tmp_2_0_2_reg_820_pp0_iter3_reg.read();
        tmp_2_1_2_reg_825_pp0_iter3_reg = tmp_2_1_2_reg_825.read();
        tmp_2_1_2_reg_825_pp0_iter4_reg = tmp_2_1_2_reg_825_pp0_iter3_reg.read();
        tmp_2_2_2_reg_830_pp0_iter3_reg = tmp_2_2_2_reg_830.read();
        tmp_2_2_2_reg_830_pp0_iter4_reg = tmp_2_2_2_reg_830_pp0_iter3_reg.read();
        tmp_2_3_2_reg_835_pp0_iter3_reg = tmp_2_3_2_reg_835.read();
        tmp_2_3_2_reg_835_pp0_iter4_reg = tmp_2_3_2_reg_835_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_719 = i_fu_312_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln32_reg_715 = icmp_ln32_fu_307_p2.read();
        icmp_ln32_reg_715_pp0_iter1_reg = icmp_ln32_reg_715.read();
        icmp_ln32_reg_715_pp0_iter2_reg = icmp_ln32_reg_715_pp0_iter1_reg.read();
        icmp_ln32_reg_715_pp0_iter3_reg = icmp_ln32_reg_715_pp0_iter2_reg.read();
        icmp_ln32_reg_715_pp0_iter4_reg = icmp_ln32_reg_715_pp0_iter3_reg.read();
        icmp_ln32_reg_715_pp0_iter5_reg = icmp_ln32_reg_715_pp0_iter4_reg.read();
        icmp_ln32_reg_715_pp0_iter6_reg = icmp_ln32_reg_715_pp0_iter5_reg.read();
        icmp_ln32_reg_715_pp0_iter7_reg = icmp_ln32_reg_715_pp0_iter6_reg.read();
        icmp_ln32_reg_715_pp0_iter8_reg = icmp_ln32_reg_715_pp0_iter7_reg.read();
        icmp_ln32_reg_715_pp0_iter9_reg = icmp_ln32_reg_715_pp0_iter8_reg.read();
        tmp_2_0_1_reg_800_pp0_iter3_reg = tmp_2_0_1_reg_800.read();
        tmp_2_1_1_reg_805_pp0_iter3_reg = tmp_2_1_1_reg_805.read();
        tmp_2_2_1_reg_810_pp0_iter3_reg = tmp_2_2_1_reg_810.read();
        tmp_2_3_1_reg_815_pp0_iter3_reg = tmp_2_3_1_reg_815.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        p_tmp_3_0_3_reg_973 = p_tmp_3_0_3_fu_587_p3.read();
        p_tmp_3_1_3_reg_978 = p_tmp_3_1_3_fu_594_p3.read();
        p_tmp_3_2_3_reg_983 = p_tmp_3_2_3_fu_601_p3.read();
        p_tmp_3_3_3_reg_988 = p_tmp_3_3_3_fu_608_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln32_fu_307_p2.read(), ap_const_lv1_0))) {
        shl_ln40_reg_724 = shl_ln40_fu_318_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        tmp_2_0_1_reg_800 = grp_fu_273_p2.read();
        tmp_2_1_1_reg_805 = grp_fu_277_p2.read();
        tmp_2_2_1_reg_810 = grp_fu_281_p2.read();
        tmp_2_3_1_reg_815 = grp_fu_285_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter2_reg.read()))) {
        tmp_2_0_2_reg_820 = grp_fu_273_p2.read();
        tmp_2_1_2_reg_825 = grp_fu_277_p2.read();
        tmp_2_2_2_reg_830 = grp_fu_281_p2.read();
        tmp_2_3_2_reg_835 = grp_fu_285_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter2_reg.read()))) {
        tmp_2_0_3_reg_840 = grp_fu_273_p2.read();
        tmp_2_1_3_reg_845 = grp_fu_277_p2.read();
        tmp_2_2_3_reg_850 = grp_fu_281_p2.read();
        tmp_2_3_3_reg_855 = grp_fu_285_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_2_0_3_reg_840_pp0_iter3_reg = tmp_2_0_3_reg_840.read();
        tmp_2_0_3_reg_840_pp0_iter4_reg = tmp_2_0_3_reg_840_pp0_iter3_reg.read();
        tmp_2_0_3_reg_840_pp0_iter5_reg = tmp_2_0_3_reg_840_pp0_iter4_reg.read();
        tmp_2_1_3_reg_845_pp0_iter3_reg = tmp_2_1_3_reg_845.read();
        tmp_2_1_3_reg_845_pp0_iter4_reg = tmp_2_1_3_reg_845_pp0_iter3_reg.read();
        tmp_2_1_3_reg_845_pp0_iter5_reg = tmp_2_1_3_reg_845_pp0_iter4_reg.read();
        tmp_2_2_3_reg_850_pp0_iter3_reg = tmp_2_2_3_reg_850.read();
        tmp_2_2_3_reg_850_pp0_iter4_reg = tmp_2_2_3_reg_850_pp0_iter3_reg.read();
        tmp_2_2_3_reg_850_pp0_iter5_reg = tmp_2_2_3_reg_850_pp0_iter4_reg.read();
        tmp_2_3_3_reg_855_pp0_iter3_reg = tmp_2_3_3_reg_855.read();
        tmp_2_3_3_reg_855_pp0_iter4_reg = tmp_2_3_3_reg_855_pp0_iter3_reg.read();
        tmp_2_3_3_reg_855_pp0_iter5_reg = tmp_2_3_3_reg_855_pp0_iter4_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_2_1_reg_785 = grp_fu_277_p2.read();
        tmp_2_2_reg_790 = grp_fu_281_p2.read();
        tmp_2_3_reg_795 = grp_fu_285_p2.read();
        tmp_2_reg_780 = grp_fu_273_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter4_reg.read()))) {
        tmp_3_0_1_reg_880 = grp_fu_253_p2.read();
        tmp_3_1_1_reg_885 = grp_fu_258_p2.read();
        tmp_3_2_1_reg_890 = grp_fu_263_p2.read();
        tmp_3_3_1_reg_895 = grp_fu_268_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter5_reg.read()))) {
        tmp_3_0_2_reg_900 = grp_fu_253_p2.read();
        tmp_3_1_2_reg_905 = grp_fu_258_p2.read();
        tmp_3_2_2_reg_910 = grp_fu_263_p2.read();
        tmp_3_3_2_reg_915 = grp_fu_268_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter6_reg.read()))) {
        tmp_3_0_3_reg_920 = grp_fu_253_p2.read();
        tmp_3_1_3_reg_927 = grp_fu_258_p2.read();
        tmp_3_2_3_reg_934 = grp_fu_263_p2.read();
        tmp_3_3_3_reg_941 = grp_fu_268_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_3_0_3_reg_920_pp0_iter7_reg = tmp_3_0_3_reg_920.read();
        tmp_3_1_3_reg_927_pp0_iter7_reg = tmp_3_1_3_reg_927.read();
        tmp_3_2_3_reg_934_pp0_iter7_reg = tmp_3_2_3_reg_934.read();
        tmp_3_3_3_reg_941_pp0_iter7_reg = tmp_3_3_3_reg_941.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        tmp_3_1_reg_865 = grp_fu_258_p2.read();
        tmp_3_2_reg_870 = grp_fu_263_p2.read();
        tmp_3_3_reg_875 = grp_fu_268_p2.read();
        tmp_3_reg_860 = grp_fu_253_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter7_reg.read()))) {
        tmp_5_reg_948 = grp_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter7_reg.read()))) {
        tmp_8_reg_953 = grp_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter7_reg.read()))) {
        tmp_s_reg_958 = grp_fu_289_p2.read();
    }
}

void myFuncAccel4::thread_add_ln51_1_fu_563_p2() {
    add_ln51_1_fu_563_p2 = (!zext_ln49_2_fu_503_p1.read().is_01() || !zext_ln51_fu_553_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln49_2_fu_503_p1.read()) + sc_biguint<2>(zext_ln51_fu_553_p1.read()));
}

void myFuncAccel4::thread_add_ln51_2_fu_575_p2() {
    add_ln51_2_fu_575_p2 = (!zext_ln51_2_fu_572_p1.read().is_01() || !zext_ln51_1_fu_569_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln51_2_fu_572_p1.read()) + sc_biguint<3>(zext_ln51_1_fu_569_p1.read()));
}

void myFuncAccel4::thread_add_ln51_fu_557_p2() {
    add_ln51_fu_557_p2 = (!zext_ln49_1_fu_454_p1.read().is_01() || !zext_ln49_fu_405_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln49_1_fu_454_p1.read()) + sc_biguint<2>(zext_ln49_fu_405_p1.read()));
}

void myFuncAccel4::thread_and_ln51_1_fu_400_p2() {
    and_ln51_1_fu_400_p2 = (and_ln51_fu_395_p2.read() & tmp_5_reg_948.read());
}

void myFuncAccel4::thread_and_ln51_2_fu_444_p2() {
    and_ln51_2_fu_444_p2 = (or_ln51_2_fu_438_p2.read() & or_ln51_1_fu_339_p2.read());
}

void myFuncAccel4::thread_and_ln51_3_fu_449_p2() {
    and_ln51_3_fu_449_p2 = (and_ln51_2_fu_444_p2.read() & tmp_8_reg_953.read());
}

void myFuncAccel4::thread_and_ln51_4_fu_493_p2() {
    and_ln51_4_fu_493_p2 = (or_ln51_3_fu_487_p2.read() & or_ln51_1_fu_339_p2.read());
}

void myFuncAccel4::thread_and_ln51_5_fu_498_p2() {
    and_ln51_5_fu_498_p2 = (and_ln51_4_fu_493_p2.read() & tmp_s_reg_958.read());
}

void myFuncAccel4::thread_and_ln51_6_fu_542_p2() {
    and_ln51_6_fu_542_p2 = (or_ln51_4_fu_536_p2.read() & or_ln51_1_fu_339_p2.read());
}

void myFuncAccel4::thread_and_ln51_7_fu_547_p2() {
    and_ln51_7_fu_547_p2 = (and_ln51_6_fu_542_p2.read() & grp_fu_289_p2.read());
}

void myFuncAccel4::thread_and_ln51_fu_395_p2() {
    and_ln51_fu_395_p2 = (or_ln51_fu_389_p2.read() & or_ln51_1_fu_339_p2.read());
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void myFuncAccel4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myFuncAccel4::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[5];
}

void myFuncAccel4::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage1_00001() {
    ap_block_pp0_stage1_00001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage2_00001() {
    ap_block_pp0_stage2_00001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage3_00001() {
    ap_block_pp0_stage3_00001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && 
  esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void myFuncAccel4::thread_ap_block_state10_pp0_stage0_iter2() {
    ap_block_state10_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state11_pp0_stage1_iter2() {
    ap_block_state11_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state12_pp0_stage2_iter2() {
    ap_block_state12_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state13_pp0_stage3_iter2() {
    ap_block_state13_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state14_pp0_stage0_iter3() {
    ap_block_state14_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state15_pp0_stage1_iter3() {
    ap_block_state15_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state16_pp0_stage2_iter3() {
    ap_block_state16_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state17_pp0_stage3_iter3() {
    ap_block_state17_pp0_stage3_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state18_pp0_stage0_iter4() {
    ap_block_state18_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state19_pp0_stage1_iter4() {
    ap_block_state19_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state20_pp0_stage2_iter4() {
    ap_block_state20_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state21_pp0_stage3_iter4() {
    ap_block_state21_pp0_stage3_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state22_pp0_stage0_iter5() {
    ap_block_state22_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state23_pp0_stage1_iter5() {
    ap_block_state23_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state24_pp0_stage2_iter5() {
    ap_block_state24_pp0_stage2_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state25_pp0_stage3_iter5() {
    ap_block_state25_pp0_stage3_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state26_pp0_stage0_iter6() {
    ap_block_state26_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state27_pp0_stage1_iter6() {
    ap_block_state27_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state28_pp0_stage2_iter6() {
    ap_block_state28_pp0_stage2_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state29_pp0_stage3_iter6() {
    ap_block_state29_pp0_stage3_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state30_pp0_stage0_iter7() {
    ap_block_state30_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state31_pp0_stage1_iter7() {
    ap_block_state31_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state32_pp0_stage2_iter7() {
    ap_block_state32_pp0_stage2_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state33_pp0_stage3_iter7() {
    ap_block_state33_pp0_stage3_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state34_pp0_stage0_iter8() {
    ap_block_state34_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state35_pp0_stage1_iter8() {
    ap_block_state35_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state36_pp0_stage2_iter8() {
    ap_block_state36_pp0_stage2_iter8 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_block_state37_pp0_stage3_iter8() {
    ap_block_state37_pp0_stage3_iter8 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_block_state38_pp0_stage0_iter9() {
    ap_block_state38_pp0_stage0_iter9 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_block_state39_pp0_stage1_iter9() {
    ap_block_state39_pp0_stage1_iter9 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_req_full_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read()));
}

void myFuncAccel4::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0));
}

void myFuncAccel4::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0));
}

void myFuncAccel4::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()));
}

void myFuncAccel4::thread_ap_block_state8_pp0_stage2_iter1() {
    ap_block_state8_pp0_stage2_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, data1_rsp_empty_n.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()));
}

void myFuncAccel4::thread_ap_block_state9_pp0_stage3_iter1() {
    ap_block_state9_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln32_fu_307_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myFuncAccel4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_phi_mux_i_1_phi_fu_246_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_1_phi_fu_246_p4 = i_reg_719.read();
    } else {
        ap_phi_mux_i_1_phi_fu_246_p4 = i_1_reg_242.read();
    }
}

void myFuncAccel4::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_bitcast_ln51_1_fu_293_p1() {
    bitcast_ln51_1_fu_293_p1 = threshold.read();
}

void myFuncAccel4::thread_bitcast_ln51_2_fu_409_p1() {
    bitcast_ln51_2_fu_409_p1 = tmp_3_1_3_reg_927_pp0_iter7_reg.read();
}

void myFuncAccel4::thread_bitcast_ln51_3_fu_458_p1() {
    bitcast_ln51_3_fu_458_p1 = tmp_3_2_3_reg_934_pp0_iter7_reg.read();
}

void myFuncAccel4::thread_bitcast_ln51_4_fu_507_p1() {
    bitcast_ln51_4_fu_507_p1 = tmp_3_3_3_reg_941_pp0_iter7_reg.read();
}

void myFuncAccel4::thread_bitcast_ln51_fu_360_p1() {
    bitcast_ln51_fu_360_p1 = tmp_3_0_3_reg_920_pp0_iter7_reg.read();
}

void myFuncAccel4::thread_data1_address() {
    data1_address =  (sc_lv<32>) (zext_ln40_fu_344_p1.read());
}

void myFuncAccel4::thread_data1_dataout() {
    data1_dataout = ap_const_lv32_0;
}

void myFuncAccel4::thread_data1_req_din() {
    data1_req_din = ap_const_logic_0;
}

void myFuncAccel4::thread_data1_req_write() {
    if ((esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data1_req_write = ap_const_logic_1;
    } else {
        data1_req_write = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_data1_rsp_read() {
    if (((esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(icmp_ln32_reg_715.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        data1_rsp_read = ap_const_logic_1;
    } else {
        data1_rsp_read = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_data1_size() {
    data1_size = ap_const_lv32_4;
}

void myFuncAccel4::thread_data_out_address() {
    data_out_address = data_out_addr_reg_743_pp0_iter8_reg.read();
}

void myFuncAccel4::thread_data_out_dataout() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        data_out_dataout = p_tmp_3_3_3_reg_988.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_out_dataout = p_tmp_3_2_3_reg_983.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        data_out_dataout = p_tmp_3_1_3_reg_978.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        data_out_dataout = p_tmp_3_0_3_reg_973.read();
    } else {
        data_out_dataout = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_data_out_req_din() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        data_out_req_din = ap_const_logic_1;
    } else {
        data_out_req_din = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_data_out_req_write() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_reg_715_pp0_iter9_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        data_out_req_write = ap_const_logic_1;
    } else {
        data_out_req_write = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_data_out_rsp_read() {
    data_out_rsp_read = ap_const_logic_0;
}

void myFuncAccel4::thread_data_out_size() {
    data_out_size = ap_const_lv32_4;
}

void myFuncAccel4::thread_grp_fu_253_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_253_ce = ap_const_logic_1;
    } else {
        grp_fu_253_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_253_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_253_p0 = tmp_3_0_2_reg_900.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_253_p0 = tmp_3_0_1_reg_880.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_253_p0 = tmp_3_reg_860.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_253_p0 = tmp_2_reg_780.read();
    } else {
        grp_fu_253_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_253_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_253_p1 = tmp_2_0_3_reg_840_pp0_iter5_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_253_p1 = tmp_2_0_2_reg_820_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_253_p1 = tmp_2_0_1_reg_800_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_253_p1 = ap_const_lv32_0;
    } else {
        grp_fu_253_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_258_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_258_ce = ap_const_logic_1;
    } else {
        grp_fu_258_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_258_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_258_p0 = tmp_3_1_2_reg_905.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_258_p0 = tmp_3_1_1_reg_885.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_258_p0 = tmp_3_1_reg_865.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_258_p0 = tmp_2_1_reg_785.read();
    } else {
        grp_fu_258_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_258_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_258_p1 = tmp_2_1_3_reg_845_pp0_iter5_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_258_p1 = tmp_2_1_2_reg_825_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_258_p1 = tmp_2_1_1_reg_805_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_258_p1 = ap_const_lv32_0;
    } else {
        grp_fu_258_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_263_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_263_ce = ap_const_logic_1;
    } else {
        grp_fu_263_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_263_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_263_p0 = tmp_3_2_2_reg_910.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_263_p0 = tmp_3_2_1_reg_890.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_263_p0 = tmp_3_2_reg_870.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_263_p0 = tmp_2_2_reg_790.read();
    } else {
        grp_fu_263_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_263_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_263_p1 = tmp_2_2_3_reg_850_pp0_iter5_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_263_p1 = tmp_2_2_2_reg_830_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_263_p1 = tmp_2_2_1_reg_810_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_263_p1 = ap_const_lv32_0;
    } else {
        grp_fu_263_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_268_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_268_ce = ap_const_logic_1;
    } else {
        grp_fu_268_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_268_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_268_p0 = tmp_3_3_2_reg_915.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_268_p0 = tmp_3_3_1_reg_895.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_268_p0 = tmp_3_3_reg_875.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_268_p0 = tmp_2_3_reg_795.read();
    } else {
        grp_fu_268_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_268_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_268_p1 = tmp_2_3_3_reg_855_pp0_iter5_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_268_p1 = tmp_2_3_2_reg_835_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_268_p1 = tmp_2_3_1_reg_815_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_268_p1 = ap_const_lv32_0;
    } else {
        grp_fu_268_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_273_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_273_ce = ap_const_logic_1;
    } else {
        grp_fu_273_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_273_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_273_p0 = data0_3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_273_p0 = data0_2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_273_p0 = data0_1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_273_p0 = data0_0.read();
        } else {
            grp_fu_273_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_273_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_273_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_273_p1 = data1_addr_read_3_reg_772.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_273_p1 = data1_addr_read_2_reg_764.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_273_p1 = data1_addr_read_1_reg_756.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_273_p1 = data1_addr_read_reg_748.read();
        } else {
            grp_fu_273_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_273_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_277_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_277_ce = ap_const_logic_1;
    } else {
        grp_fu_277_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_277_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_277_p0 = data0_7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_277_p0 = data0_6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_277_p0 = data0_5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_277_p0 = data0_4.read();
        } else {
            grp_fu_277_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_277_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_277_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_277_p1 = data1_addr_read_3_reg_772.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_277_p1 = data1_addr_read_2_reg_764.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_277_p1 = data1_addr_read_1_reg_756.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_277_p1 = data1_addr_read_reg_748.read();
        } else {
            grp_fu_277_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_277_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_281_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_281_ce = ap_const_logic_1;
    } else {
        grp_fu_281_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_281_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_281_p0 = data0_11.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_281_p0 = data0_10.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_281_p0 = data0_9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_281_p0 = data0_8.read();
        } else {
            grp_fu_281_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_281_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_281_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_281_p1 = data1_addr_read_3_reg_772.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_281_p1 = data1_addr_read_2_reg_764.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_281_p1 = data1_addr_read_1_reg_756.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_281_p1 = data1_addr_read_reg_748.read();
        } else {
            grp_fu_281_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_281_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_285_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_285_ce = ap_const_logic_1;
    } else {
        grp_fu_285_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_285_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_285_p0 = data0_15.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_285_p0 = data0_14.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_285_p0 = data0_13.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_285_p0 = data0_12.read();
        } else {
            grp_fu_285_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_285_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_285_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_285_p1 = data1_addr_read_3_reg_772.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_285_p1 = data1_addr_read_2_reg_764.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_285_p1 = data1_addr_read_1_reg_756.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_285_p1 = data1_addr_read_reg_748.read();
        } else {
            grp_fu_285_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_285_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_289_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_289_ce = ap_const_logic_1;
    } else {
        grp_fu_289_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_289_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = tmp_3_3_3_reg_941.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = tmp_3_2_3_reg_934.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = tmp_3_1_3_reg_927.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = tmp_3_0_3_reg_920.read();
        } else {
            grp_fu_289_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_289_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_i_fu_312_p2() {
    i_fu_312_p2 = (!ap_phi_mux_i_1_phi_fu_246_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_i_1_phi_fu_246_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void myFuncAccel4::thread_icmp_ln32_fu_307_p2() {
    icmp_ln32_fu_307_p2 = (!ap_phi_mux_i_1_phi_fu_246_p4.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_1_phi_fu_246_p4.read() == size.read());
}

void myFuncAccel4::thread_icmp_ln51_1_fu_383_p2() {
    icmp_ln51_1_fu_383_p2 = (!trunc_ln51_1_fu_373_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln51_1_fu_373_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln51_2_fu_333_p2() {
    icmp_ln51_2_fu_333_p2 = (!tmp_4_fu_324_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_324_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln51_3_fu_301_p2() {
    icmp_ln51_3_fu_301_p2 = (!trunc_ln51_fu_297_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln51_fu_297_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln51_4_fu_426_p2() {
    icmp_ln51_4_fu_426_p2 = (!tmp_6_fu_412_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_412_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln51_5_fu_432_p2() {
    icmp_ln51_5_fu_432_p2 = (!trunc_ln51_2_fu_422_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln51_2_fu_422_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln51_6_fu_475_p2() {
    icmp_ln51_6_fu_475_p2 = (!tmp_9_fu_461_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_461_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln51_7_fu_481_p2() {
    icmp_ln51_7_fu_481_p2 = (!trunc_ln51_3_fu_471_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln51_3_fu_471_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln51_8_fu_524_p2() {
    icmp_ln51_8_fu_524_p2 = (!tmp_7_fu_510_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_510_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln51_9_fu_530_p2() {
    icmp_ln51_9_fu_530_p2 = (!trunc_ln51_4_fu_520_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln51_4_fu_520_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln51_fu_377_p2() {
    icmp_ln51_fu_377_p2 = (!tmp_1_fu_363_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_363_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln53_fu_581_p2() {
    icmp_ln53_fu_581_p2 = (!add_ln51_2_fu_575_p2.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(add_ln51_2_fu_575_p2.read() == ap_const_lv3_4);
}

void myFuncAccel4::thread_or_ln51_1_fu_339_p2() {
    or_ln51_1_fu_339_p2 = (icmp_ln51_3_fu_301_p2.read() | icmp_ln51_2_fu_333_p2.read());
}

void myFuncAccel4::thread_or_ln51_2_fu_438_p2() {
    or_ln51_2_fu_438_p2 = (icmp_ln51_5_fu_432_p2.read() | icmp_ln51_4_fu_426_p2.read());
}

void myFuncAccel4::thread_or_ln51_3_fu_487_p2() {
    or_ln51_3_fu_487_p2 = (icmp_ln51_7_fu_481_p2.read() | icmp_ln51_6_fu_475_p2.read());
}

void myFuncAccel4::thread_or_ln51_4_fu_536_p2() {
    or_ln51_4_fu_536_p2 = (icmp_ln51_9_fu_530_p2.read() | icmp_ln51_8_fu_524_p2.read());
}

void myFuncAccel4::thread_or_ln51_fu_389_p2() {
    or_ln51_fu_389_p2 = (icmp_ln51_1_fu_383_p2.read() | icmp_ln51_fu_377_p2.read());
}

void myFuncAccel4::thread_p_tmp_3_0_3_fu_587_p3() {
    p_tmp_3_0_3_fu_587_p3 = (!icmp_ln53_fu_581_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln53_fu_581_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_0_3_reg_920_pp0_iter7_reg.read());
}

void myFuncAccel4::thread_p_tmp_3_1_3_fu_594_p3() {
    p_tmp_3_1_3_fu_594_p3 = (!icmp_ln53_fu_581_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln53_fu_581_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_1_3_reg_927_pp0_iter7_reg.read());
}

void myFuncAccel4::thread_p_tmp_3_2_3_fu_601_p3() {
    p_tmp_3_2_3_fu_601_p3 = (!icmp_ln53_fu_581_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln53_fu_581_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_2_3_reg_934_pp0_iter7_reg.read());
}

void myFuncAccel4::thread_p_tmp_3_3_3_fu_608_p3() {
    p_tmp_3_3_3_fu_608_p3 = (!icmp_ln53_fu_581_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln53_fu_581_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_3_3_reg_941_pp0_iter7_reg.read());
}

void myFuncAccel4::thread_shl_ln40_fu_318_p2() {
    shl_ln40_fu_318_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): ap_phi_mux_i_1_phi_fu_246_p4.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void myFuncAccel4::thread_tmp_1_fu_363_p4() {
    tmp_1_fu_363_p4 = bitcast_ln51_fu_360_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_4_fu_324_p4() {
    tmp_4_fu_324_p4 = bitcast_ln51_1_fu_293_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_6_fu_412_p4() {
    tmp_6_fu_412_p4 = bitcast_ln51_2_fu_409_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_7_fu_510_p4() {
    tmp_7_fu_510_p4 = bitcast_ln51_4_fu_507_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_9_fu_461_p4() {
    tmp_9_fu_461_p4 = bitcast_ln51_3_fu_458_p1.read().range(30, 23);
}

void myFuncAccel4::thread_trunc_ln51_1_fu_373_p1() {
    trunc_ln51_1_fu_373_p1 = bitcast_ln51_fu_360_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln51_2_fu_422_p1() {
    trunc_ln51_2_fu_422_p1 = bitcast_ln51_2_fu_409_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln51_3_fu_471_p1() {
    trunc_ln51_3_fu_471_p1 = bitcast_ln51_3_fu_458_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln51_4_fu_520_p1() {
    trunc_ln51_4_fu_520_p1 = bitcast_ln51_4_fu_507_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln51_fu_297_p1() {
    trunc_ln51_fu_297_p1 = bitcast_ln51_1_fu_293_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_zext_ln40_fu_344_p1() {
    zext_ln40_fu_344_p1 = esl_zext<64,32>(shl_ln40_reg_724.read());
}

void myFuncAccel4::thread_zext_ln49_1_fu_454_p1() {
    zext_ln49_1_fu_454_p1 = esl_zext<2,1>(and_ln51_3_fu_449_p2.read());
}

void myFuncAccel4::thread_zext_ln49_2_fu_503_p1() {
    zext_ln49_2_fu_503_p1 = esl_zext<2,1>(and_ln51_5_fu_498_p2.read());
}

void myFuncAccel4::thread_zext_ln49_fu_405_p1() {
    zext_ln49_fu_405_p1 = esl_zext<2,1>(and_ln51_1_fu_400_p2.read());
}

void myFuncAccel4::thread_zext_ln51_1_fu_569_p1() {
    zext_ln51_1_fu_569_p1 = esl_zext<3,2>(add_ln51_reg_963.read());
}

void myFuncAccel4::thread_zext_ln51_2_fu_572_p1() {
    zext_ln51_2_fu_572_p1 = esl_zext<3,2>(add_ln51_1_reg_968.read());
}

void myFuncAccel4::thread_zext_ln51_fu_553_p1() {
    zext_ln51_fu_553_p1 = esl_zext<2,1>(and_ln51_7_fu_547_p2.read());
}

void myFuncAccel4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln32_fu_307_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln32_fu_307_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void myFuncAccel4::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"size\" :  \"" << size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dim\" :  \"" << dim.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"threshold\" :  \"" << threshold.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_0\" :  \"" << data0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_1\" :  \"" << data0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_2\" :  \"" << data0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_3\" :  \"" << data0_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_4\" :  \"" << data0_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_5\" :  \"" << data0_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_6\" :  \"" << data0_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_7\" :  \"" << data0_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_8\" :  \"" << data0_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_9\" :  \"" << data0_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_10\" :  \"" << data0_10.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_11\" :  \"" << data0_11.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_12\" :  \"" << data0_12.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_13\" :  \"" << data0_13.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_14\" :  \"" << data0_14.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_15\" :  \"" << data0_15.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_req_din\" :  \"" << data1_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data1_req_full_n\" :  \"" << data1_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_req_write\" :  \"" << data1_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data1_rsp_empty_n\" :  \"" << data1_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_rsp_read\" :  \"" << data1_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_address\" :  \"" << data1_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data1_datain\" :  \"" << data1_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_dataout\" :  \"" << data1_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_size\" :  \"" << data1_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_req_din\" :  \"" << data_out_req_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_out_req_full_n\" :  \"" << data_out_req_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_req_write\" :  \"" << data_out_req_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_out_rsp_empty_n\" :  \"" << data_out_rsp_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_rsp_read\" :  \"" << data_out_rsp_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_address\" :  \"" << data_out_address.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_out_datain\" :  \"" << data_out_datain.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_dataout\" :  \"" << data_out_dataout.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_size\" :  \"" << data_out_size.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

