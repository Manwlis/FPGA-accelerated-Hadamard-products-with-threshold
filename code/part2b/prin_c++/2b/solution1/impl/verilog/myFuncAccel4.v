// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myFuncAccel4,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=435,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=20,HLS_SYN_FF=3910,HLS_SYN_LUT=4497,HLS_VERSION=2019_1}" *)

module myFuncAccel4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        size,
        dim,
        threshold,
        data0_0,
        data0_1,
        data0_2,
        data0_3,
        data0_4,
        data0_5,
        data0_6,
        data0_7,
        data0_8,
        data0_9,
        data0_10,
        data0_11,
        data0_12,
        data0_13,
        data0_14,
        data0_15,
        data1_req_din,
        data1_req_full_n,
        data1_req_write,
        data1_rsp_empty_n,
        data1_rsp_read,
        data1_address,
        data1_datain,
        data1_dataout,
        data1_size,
        data_out_req_din,
        data_out_req_full_n,
        data_out_req_write,
        data_out_rsp_empty_n,
        data_out_rsp_read,
        data_out_address,
        data_out_datain,
        data_out_dataout,
        data_out_size
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state40 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] size;
input  [31:0] dim;
input  [31:0] threshold;
input  [31:0] data0_0;
input  [31:0] data0_1;
input  [31:0] data0_2;
input  [31:0] data0_3;
input  [31:0] data0_4;
input  [31:0] data0_5;
input  [31:0] data0_6;
input  [31:0] data0_7;
input  [31:0] data0_8;
input  [31:0] data0_9;
input  [31:0] data0_10;
input  [31:0] data0_11;
input  [31:0] data0_12;
input  [31:0] data0_13;
input  [31:0] data0_14;
input  [31:0] data0_15;
output   data1_req_din;
input   data1_req_full_n;
output   data1_req_write;
input   data1_rsp_empty_n;
output   data1_rsp_read;
output  [31:0] data1_address;
input  [31:0] data1_datain;
output  [31:0] data1_dataout;
output  [31:0] data1_size;
output   data_out_req_din;
input   data_out_req_full_n;
output   data_out_req_write;
input   data_out_rsp_empty_n;
output   data_out_rsp_read;
output  [31:0] data_out_address;
input  [31:0] data_out_datain;
output  [31:0] data_out_dataout;
output  [31:0] data_out_size;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data1_req_write;
reg data1_rsp_read;
reg data_out_req_din;
reg data_out_req_write;
reg[31:0] data_out_dataout;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] i_1_reg_242;
wire   [31:0] bitcast_ln51_1_fu_293_p1;
wire   [0:0] icmp_ln51_3_fu_301_p2;
wire   [0:0] icmp_ln32_fu_307_p2;
reg   [0:0] icmp_ln32_reg_715;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state6_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state18_pp0_stage0_iter4;
wire    ap_block_state22_pp0_stage0_iter5;
wire    ap_block_state26_pp0_stage0_iter6;
wire    ap_block_state30_pp0_stage0_iter7;
wire    ap_block_state34_pp0_stage0_iter8;
reg   [0:0] icmp_ln32_reg_715_pp0_iter8_reg;
reg    ap_block_state38_pp0_stage0_iter9;
reg    ap_enable_reg_pp0_iter9;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln32_reg_715_pp0_iter1_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter2_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter3_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter4_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter5_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter6_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter7_reg;
reg   [0:0] icmp_ln32_reg_715_pp0_iter9_reg;
wire   [31:0] i_fu_312_p2;
reg   [31:0] i_reg_719;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] shl_ln40_fu_318_p2;
reg   [31:0] shl_ln40_reg_724;
wire   [0:0] or_ln51_1_fu_339_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state15_pp0_stage1_iter3;
wire    ap_block_state19_pp0_stage1_iter4;
wire    ap_block_state23_pp0_stage1_iter5;
wire    ap_block_state27_pp0_stage1_iter6;
wire    ap_block_state31_pp0_stage1_iter7;
wire    ap_block_state35_pp0_stage1_iter8;
reg    ap_block_state39_pp0_stage1_iter9;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] data_out_addr_reg_743;
reg   [31:0] data_out_addr_reg_743_pp0_iter1_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter2_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter3_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter4_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter5_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter6_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter7_reg;
reg   [31:0] data_out_addr_reg_743_pp0_iter8_reg;
reg   [31:0] data1_addr_read_reg_748;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_state17_pp0_stage3_iter3;
wire    ap_block_state21_pp0_stage3_iter4;
wire    ap_block_state25_pp0_stage3_iter5;
wire    ap_block_state29_pp0_stage3_iter6;
wire    ap_block_state33_pp0_stage3_iter7;
reg    ap_block_state37_pp0_stage3_iter8;
reg    ap_enable_reg_pp0_iter8;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] data1_addr_read_1_reg_756;
reg   [31:0] data1_addr_read_2_reg_764;
reg   [31:0] data1_addr_read_3_reg_772;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_state16_pp0_stage2_iter3;
wire    ap_block_state20_pp0_stage2_iter4;
wire    ap_block_state24_pp0_stage2_iter5;
wire    ap_block_state28_pp0_stage2_iter6;
wire    ap_block_state32_pp0_stage2_iter7;
reg    ap_block_state36_pp0_stage2_iter8;
reg    ap_block_pp0_stage2_11001;
wire   [31:0] grp_fu_273_p2;
reg   [31:0] tmp_2_reg_780;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] tmp_2_1_reg_785;
wire   [31:0] grp_fu_281_p2;
reg   [31:0] tmp_2_2_reg_790;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] tmp_2_3_reg_795;
reg   [31:0] tmp_2_0_1_reg_800;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] tmp_2_0_1_reg_800_pp0_iter3_reg;
reg   [31:0] tmp_2_1_1_reg_805;
reg   [31:0] tmp_2_1_1_reg_805_pp0_iter3_reg;
reg   [31:0] tmp_2_2_1_reg_810;
reg   [31:0] tmp_2_2_1_reg_810_pp0_iter3_reg;
reg   [31:0] tmp_2_3_1_reg_815;
reg   [31:0] tmp_2_3_1_reg_815_pp0_iter3_reg;
reg   [31:0] tmp_2_0_2_reg_820;
reg   [31:0] tmp_2_0_2_reg_820_pp0_iter3_reg;
reg   [31:0] tmp_2_0_2_reg_820_pp0_iter4_reg;
reg   [31:0] tmp_2_1_2_reg_825;
reg   [31:0] tmp_2_1_2_reg_825_pp0_iter3_reg;
reg   [31:0] tmp_2_1_2_reg_825_pp0_iter4_reg;
reg   [31:0] tmp_2_2_2_reg_830;
reg   [31:0] tmp_2_2_2_reg_830_pp0_iter3_reg;
reg   [31:0] tmp_2_2_2_reg_830_pp0_iter4_reg;
reg   [31:0] tmp_2_3_2_reg_835;
reg   [31:0] tmp_2_3_2_reg_835_pp0_iter3_reg;
reg   [31:0] tmp_2_3_2_reg_835_pp0_iter4_reg;
reg   [31:0] tmp_2_0_3_reg_840;
reg   [31:0] tmp_2_0_3_reg_840_pp0_iter3_reg;
reg   [31:0] tmp_2_0_3_reg_840_pp0_iter4_reg;
reg   [31:0] tmp_2_0_3_reg_840_pp0_iter5_reg;
reg   [31:0] tmp_2_1_3_reg_845;
reg   [31:0] tmp_2_1_3_reg_845_pp0_iter3_reg;
reg   [31:0] tmp_2_1_3_reg_845_pp0_iter4_reg;
reg   [31:0] tmp_2_1_3_reg_845_pp0_iter5_reg;
reg   [31:0] tmp_2_2_3_reg_850;
reg   [31:0] tmp_2_2_3_reg_850_pp0_iter3_reg;
reg   [31:0] tmp_2_2_3_reg_850_pp0_iter4_reg;
reg   [31:0] tmp_2_2_3_reg_850_pp0_iter5_reg;
reg   [31:0] tmp_2_3_3_reg_855;
reg   [31:0] tmp_2_3_3_reg_855_pp0_iter3_reg;
reg   [31:0] tmp_2_3_3_reg_855_pp0_iter4_reg;
reg   [31:0] tmp_2_3_3_reg_855_pp0_iter5_reg;
wire   [31:0] grp_fu_253_p2;
reg   [31:0] tmp_3_reg_860;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] tmp_3_1_reg_865;
wire   [31:0] grp_fu_263_p2;
reg   [31:0] tmp_3_2_reg_870;
wire   [31:0] grp_fu_268_p2;
reg   [31:0] tmp_3_3_reg_875;
reg   [31:0] tmp_3_0_1_reg_880;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] tmp_3_1_1_reg_885;
reg   [31:0] tmp_3_2_1_reg_890;
reg   [31:0] tmp_3_3_1_reg_895;
reg   [31:0] tmp_3_0_2_reg_900;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_3_1_2_reg_905;
reg   [31:0] tmp_3_2_2_reg_910;
reg   [31:0] tmp_3_3_2_reg_915;
reg   [31:0] tmp_3_0_3_reg_920;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] tmp_3_0_3_reg_920_pp0_iter7_reg;
reg   [31:0] tmp_3_1_3_reg_927;
reg   [31:0] tmp_3_1_3_reg_927_pp0_iter7_reg;
reg   [31:0] tmp_3_2_3_reg_934;
reg   [31:0] tmp_3_2_3_reg_934_pp0_iter7_reg;
reg   [31:0] tmp_3_3_3_reg_941;
reg   [31:0] tmp_3_3_3_reg_941_pp0_iter7_reg;
wire   [0:0] grp_fu_289_p2;
reg   [0:0] tmp_5_reg_948;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] tmp_8_reg_953;
reg   [0:0] tmp_s_reg_958;
wire   [1:0] add_ln51_fu_557_p2;
reg   [1:0] add_ln51_reg_963;
wire   [1:0] add_ln51_1_fu_563_p2;
reg   [1:0] add_ln51_1_reg_968;
wire   [31:0] p_tmp_3_0_3_fu_587_p3;
reg   [31:0] p_tmp_3_0_3_reg_973;
wire   [31:0] p_tmp_3_1_3_fu_594_p3;
reg   [31:0] p_tmp_3_1_3_reg_978;
wire   [31:0] p_tmp_3_2_3_fu_601_p3;
reg   [31:0] p_tmp_3_2_3_reg_983;
wire   [31:0] p_tmp_3_3_3_fu_608_p3;
reg   [31:0] p_tmp_3_3_3_reg_988;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [31:0] ap_phi_mux_i_1_phi_fu_246_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln40_fu_344_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_253_p0;
reg   [31:0] grp_fu_253_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
reg   [31:0] grp_fu_258_p0;
reg   [31:0] grp_fu_258_p1;
reg   [31:0] grp_fu_263_p0;
reg   [31:0] grp_fu_263_p1;
reg   [31:0] grp_fu_268_p0;
reg   [31:0] grp_fu_268_p1;
reg   [31:0] grp_fu_273_p0;
reg   [31:0] grp_fu_273_p1;
reg   [31:0] grp_fu_277_p0;
reg   [31:0] grp_fu_277_p1;
reg   [31:0] grp_fu_281_p0;
reg   [31:0] grp_fu_281_p1;
reg   [31:0] grp_fu_285_p0;
reg   [31:0] grp_fu_285_p1;
reg   [31:0] grp_fu_289_p0;
wire   [22:0] trunc_ln51_fu_297_p1;
wire   [7:0] tmp_4_fu_324_p4;
wire   [0:0] icmp_ln51_2_fu_333_p2;
wire   [31:0] bitcast_ln51_fu_360_p1;
wire   [7:0] tmp_1_fu_363_p4;
wire   [22:0] trunc_ln51_1_fu_373_p1;
wire   [0:0] icmp_ln51_1_fu_383_p2;
wire   [0:0] icmp_ln51_fu_377_p2;
wire   [0:0] or_ln51_fu_389_p2;
wire   [0:0] and_ln51_fu_395_p2;
wire   [0:0] and_ln51_1_fu_400_p2;
wire   [31:0] bitcast_ln51_2_fu_409_p1;
wire   [7:0] tmp_6_fu_412_p4;
wire   [22:0] trunc_ln51_2_fu_422_p1;
wire   [0:0] icmp_ln51_5_fu_432_p2;
wire   [0:0] icmp_ln51_4_fu_426_p2;
wire   [0:0] or_ln51_2_fu_438_p2;
wire   [0:0] and_ln51_2_fu_444_p2;
wire   [0:0] and_ln51_3_fu_449_p2;
wire   [31:0] bitcast_ln51_3_fu_458_p1;
wire   [7:0] tmp_9_fu_461_p4;
wire   [22:0] trunc_ln51_3_fu_471_p1;
wire   [0:0] icmp_ln51_7_fu_481_p2;
wire   [0:0] icmp_ln51_6_fu_475_p2;
wire   [0:0] or_ln51_3_fu_487_p2;
wire   [0:0] and_ln51_4_fu_493_p2;
wire   [0:0] and_ln51_5_fu_498_p2;
wire   [31:0] bitcast_ln51_4_fu_507_p1;
wire   [7:0] tmp_7_fu_510_p4;
wire   [22:0] trunc_ln51_4_fu_520_p1;
wire   [0:0] icmp_ln51_9_fu_530_p2;
wire   [0:0] icmp_ln51_8_fu_524_p2;
wire   [0:0] or_ln51_4_fu_536_p2;
wire   [0:0] and_ln51_6_fu_542_p2;
wire   [0:0] and_ln51_7_fu_547_p2;
wire   [1:0] zext_ln49_1_fu_454_p1;
wire   [1:0] zext_ln49_fu_405_p1;
wire   [1:0] zext_ln49_2_fu_503_p1;
wire   [1:0] zext_ln51_fu_553_p1;
wire   [2:0] zext_ln51_2_fu_572_p1;
wire   [2:0] zext_ln51_1_fu_569_p1;
wire   [2:0] add_ln51_2_fu_575_p2;
wire   [0:0] icmp_ln53_fu_581_p2;
reg    grp_fu_253_ce;
reg    grp_fu_258_ce;
reg    grp_fu_263_ce;
reg    grp_fu_268_ce;
reg    grp_fu_273_ce;
reg    grp_fu_277_ce;
reg    grp_fu_281_ce;
reg    grp_fu_285_ce;
reg    grp_fu_289_ce;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage1_00001;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage3_00001;
wire    ap_CS_fsm_state40;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_253_p0),
    .din1(grp_fu_253_p1),
    .ce(grp_fu_253_ce),
    .dout(grp_fu_253_p2)
);

myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_258_p0),
    .din1(grp_fu_258_p1),
    .ce(grp_fu_258_ce),
    .dout(grp_fu_258_p2)
);

myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_263_p0),
    .din1(grp_fu_263_p1),
    .ce(grp_fu_263_ce),
    .dout(grp_fu_263_p2)
);

myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_268_p0),
    .din1(grp_fu_268_p1),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p2)
);

myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_273_p0),
    .din1(grp_fu_273_p1),
    .ce(grp_fu_273_ce),
    .dout(grp_fu_273_p2)
);

myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p2)
);

myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(grp_fu_281_p1),
    .ce(grp_fu_281_ce),
    .dout(grp_fu_281_p2)
);

myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(grp_fu_285_p1),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

myFuncAccel4_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(threshold),
    .ce(grp_fu_289_ce),
    .opcode(5'd2),
    .dout(grp_fu_289_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_1_reg_242 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715 == 1'd0))) begin
        i_1_reg_242 <= i_reg_719;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715_pp0_iter7_reg == 1'd0))) begin
        add_ln51_1_reg_968 <= add_ln51_1_fu_563_p2;
        add_ln51_reg_963 <= add_ln51_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715 == 1'd0))) begin
        data1_addr_read_1_reg_756 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0))) begin
        data1_addr_read_2_reg_764 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0))) begin
        data1_addr_read_3_reg_772 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_reg_715 == 1'd0))) begin
        data1_addr_read_reg_748 <= data1_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_715 == 1'd0))) begin
        data_out_addr_reg_743[31 : 2] <= zext_ln40_fu_344_p1[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_out_addr_reg_743_pp0_iter1_reg[31 : 2] <= data_out_addr_reg_743[31 : 2];
        data_out_addr_reg_743_pp0_iter2_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter1_reg[31 : 2];
        data_out_addr_reg_743_pp0_iter3_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter2_reg[31 : 2];
        data_out_addr_reg_743_pp0_iter4_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter3_reg[31 : 2];
        data_out_addr_reg_743_pp0_iter5_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter4_reg[31 : 2];
        data_out_addr_reg_743_pp0_iter6_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter5_reg[31 : 2];
        data_out_addr_reg_743_pp0_iter7_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter6_reg[31 : 2];
        data_out_addr_reg_743_pp0_iter8_reg[31 : 2] <= data_out_addr_reg_743_pp0_iter7_reg[31 : 2];
        tmp_2_0_2_reg_820_pp0_iter3_reg <= tmp_2_0_2_reg_820;
        tmp_2_0_2_reg_820_pp0_iter4_reg <= tmp_2_0_2_reg_820_pp0_iter3_reg;
        tmp_2_1_2_reg_825_pp0_iter3_reg <= tmp_2_1_2_reg_825;
        tmp_2_1_2_reg_825_pp0_iter4_reg <= tmp_2_1_2_reg_825_pp0_iter3_reg;
        tmp_2_2_2_reg_830_pp0_iter3_reg <= tmp_2_2_2_reg_830;
        tmp_2_2_2_reg_830_pp0_iter4_reg <= tmp_2_2_2_reg_830_pp0_iter3_reg;
        tmp_2_3_2_reg_835_pp0_iter3_reg <= tmp_2_3_2_reg_835;
        tmp_2_3_2_reg_835_pp0_iter4_reg <= tmp_2_3_2_reg_835_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_719 <= i_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln32_reg_715 <= icmp_ln32_fu_307_p2;
        icmp_ln32_reg_715_pp0_iter1_reg <= icmp_ln32_reg_715;
        icmp_ln32_reg_715_pp0_iter2_reg <= icmp_ln32_reg_715_pp0_iter1_reg;
        icmp_ln32_reg_715_pp0_iter3_reg <= icmp_ln32_reg_715_pp0_iter2_reg;
        icmp_ln32_reg_715_pp0_iter4_reg <= icmp_ln32_reg_715_pp0_iter3_reg;
        icmp_ln32_reg_715_pp0_iter5_reg <= icmp_ln32_reg_715_pp0_iter4_reg;
        icmp_ln32_reg_715_pp0_iter6_reg <= icmp_ln32_reg_715_pp0_iter5_reg;
        icmp_ln32_reg_715_pp0_iter7_reg <= icmp_ln32_reg_715_pp0_iter6_reg;
        icmp_ln32_reg_715_pp0_iter8_reg <= icmp_ln32_reg_715_pp0_iter7_reg;
        icmp_ln32_reg_715_pp0_iter9_reg <= icmp_ln32_reg_715_pp0_iter8_reg;
        tmp_2_0_1_reg_800_pp0_iter3_reg <= tmp_2_0_1_reg_800;
        tmp_2_1_1_reg_805_pp0_iter3_reg <= tmp_2_1_1_reg_805;
        tmp_2_2_1_reg_810_pp0_iter3_reg <= tmp_2_2_1_reg_810;
        tmp_2_3_1_reg_815_pp0_iter3_reg <= tmp_2_3_1_reg_815;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0))) begin
        p_tmp_3_0_3_reg_973 <= p_tmp_3_0_3_fu_587_p3;
        p_tmp_3_1_3_reg_978 <= p_tmp_3_1_3_fu_594_p3;
        p_tmp_3_2_3_reg_983 <= p_tmp_3_2_3_fu_601_p3;
        p_tmp_3_3_3_reg_988 <= p_tmp_3_3_3_fu_608_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_fu_307_p2 == 1'd0))) begin
        shl_ln40_reg_724[31 : 2] <= shl_ln40_fu_318_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0))) begin
        tmp_2_0_1_reg_800 <= grp_fu_273_p2;
        tmp_2_1_1_reg_805 <= grp_fu_277_p2;
        tmp_2_2_1_reg_810 <= grp_fu_281_p2;
        tmp_2_3_1_reg_815 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_715_pp0_iter2_reg == 1'd0))) begin
        tmp_2_0_2_reg_820 <= grp_fu_273_p2;
        tmp_2_1_2_reg_825 <= grp_fu_277_p2;
        tmp_2_2_2_reg_830 <= grp_fu_281_p2;
        tmp_2_3_2_reg_835 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln32_reg_715_pp0_iter2_reg == 1'd0))) begin
        tmp_2_0_3_reg_840 <= grp_fu_273_p2;
        tmp_2_1_3_reg_845 <= grp_fu_277_p2;
        tmp_2_2_3_reg_850 <= grp_fu_281_p2;
        tmp_2_3_3_reg_855 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_2_0_3_reg_840_pp0_iter3_reg <= tmp_2_0_3_reg_840;
        tmp_2_0_3_reg_840_pp0_iter4_reg <= tmp_2_0_3_reg_840_pp0_iter3_reg;
        tmp_2_0_3_reg_840_pp0_iter5_reg <= tmp_2_0_3_reg_840_pp0_iter4_reg;
        tmp_2_1_3_reg_845_pp0_iter3_reg <= tmp_2_1_3_reg_845;
        tmp_2_1_3_reg_845_pp0_iter4_reg <= tmp_2_1_3_reg_845_pp0_iter3_reg;
        tmp_2_1_3_reg_845_pp0_iter5_reg <= tmp_2_1_3_reg_845_pp0_iter4_reg;
        tmp_2_2_3_reg_850_pp0_iter3_reg <= tmp_2_2_3_reg_850;
        tmp_2_2_3_reg_850_pp0_iter4_reg <= tmp_2_2_3_reg_850_pp0_iter3_reg;
        tmp_2_2_3_reg_850_pp0_iter5_reg <= tmp_2_2_3_reg_850_pp0_iter4_reg;
        tmp_2_3_3_reg_855_pp0_iter3_reg <= tmp_2_3_3_reg_855;
        tmp_2_3_3_reg_855_pp0_iter4_reg <= tmp_2_3_3_reg_855_pp0_iter3_reg;
        tmp_2_3_3_reg_855_pp0_iter5_reg <= tmp_2_3_3_reg_855_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0))) begin
        tmp_2_1_reg_785 <= grp_fu_277_p2;
        tmp_2_2_reg_790 <= grp_fu_281_p2;
        tmp_2_3_reg_795 <= grp_fu_285_p2;
        tmp_2_reg_780 <= grp_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_715_pp0_iter4_reg == 1'd0))) begin
        tmp_3_0_1_reg_880 <= grp_fu_253_p2;
        tmp_3_1_1_reg_885 <= grp_fu_258_p2;
        tmp_3_2_1_reg_890 <= grp_fu_263_p2;
        tmp_3_3_1_reg_895 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln32_reg_715_pp0_iter5_reg == 1'd0))) begin
        tmp_3_0_2_reg_900 <= grp_fu_253_p2;
        tmp_3_1_2_reg_905 <= grp_fu_258_p2;
        tmp_3_2_2_reg_910 <= grp_fu_263_p2;
        tmp_3_3_2_reg_915 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_715_pp0_iter6_reg == 1'd0))) begin
        tmp_3_0_3_reg_920 <= grp_fu_253_p2;
        tmp_3_1_3_reg_927 <= grp_fu_258_p2;
        tmp_3_2_3_reg_934 <= grp_fu_263_p2;
        tmp_3_3_3_reg_941 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_3_0_3_reg_920_pp0_iter7_reg <= tmp_3_0_3_reg_920;
        tmp_3_1_3_reg_927_pp0_iter7_reg <= tmp_3_1_3_reg_927;
        tmp_3_2_3_reg_934_pp0_iter7_reg <= tmp_3_2_3_reg_934;
        tmp_3_3_3_reg_941_pp0_iter7_reg <= tmp_3_3_3_reg_941;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715_pp0_iter2_reg == 1'd0))) begin
        tmp_3_1_reg_865 <= grp_fu_258_p2;
        tmp_3_2_reg_870 <= grp_fu_263_p2;
        tmp_3_3_reg_875 <= grp_fu_268_p2;
        tmp_3_reg_860 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_715_pp0_iter7_reg == 1'd0))) begin
        tmp_5_reg_948 <= grp_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln32_reg_715_pp0_iter7_reg == 1'd0))) begin
        tmp_8_reg_953 <= grp_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_715_pp0_iter7_reg == 1'd0))) begin
        tmp_s_reg_958 <= grp_fu_289_p2;
    end
end

always @ (*) begin
    if ((icmp_ln32_fu_307_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln32_reg_715 == 1'd0))) begin
        ap_phi_mux_i_1_phi_fu_246_p4 = i_reg_719;
    end else begin
        ap_phi_mux_i_1_phi_fu_246_p4 = i_1_reg_242;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_reg_715 == 1'd0))) begin
        data1_req_write = 1'b1;
    end else begin
        data1_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715 == 1'd0)))) begin
        data1_rsp_read = 1'b1;
    end else begin
        data1_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0))) begin
        data_out_dataout = p_tmp_3_3_3_reg_988;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0))) begin
        data_out_dataout = p_tmp_3_2_3_reg_983;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0))) begin
        data_out_dataout = p_tmp_3_1_3_reg_978;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0))) begin
        data_out_dataout = p_tmp_3_0_3_reg_973;
    end else begin
        data_out_dataout = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)))) begin
        data_out_req_din = 1'b1;
    end else begin
        data_out_req_din = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)))) begin
        data_out_req_write = 1'b1;
    end else begin
        data_out_req_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_253_ce = 1'b1;
    end else begin
        grp_fu_253_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_253_p0 = tmp_3_0_2_reg_900;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_253_p0 = tmp_3_0_1_reg_880;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_253_p0 = tmp_3_reg_860;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_253_p0 = tmp_2_reg_780;
    end else begin
        grp_fu_253_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_253_p1 = tmp_2_0_3_reg_840_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_253_p1 = tmp_2_0_2_reg_820_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_253_p1 = tmp_2_0_1_reg_800_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_253_p1 = 32'd0;
    end else begin
        grp_fu_253_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_258_ce = 1'b1;
    end else begin
        grp_fu_258_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_258_p0 = tmp_3_1_2_reg_905;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_258_p0 = tmp_3_1_1_reg_885;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_258_p0 = tmp_3_1_reg_865;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_258_p0 = tmp_2_1_reg_785;
    end else begin
        grp_fu_258_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_258_p1 = tmp_2_1_3_reg_845_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_258_p1 = tmp_2_1_2_reg_825_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_258_p1 = tmp_2_1_1_reg_805_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_258_p1 = 32'd0;
    end else begin
        grp_fu_258_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_263_ce = 1'b1;
    end else begin
        grp_fu_263_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_263_p0 = tmp_3_2_2_reg_910;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_263_p0 = tmp_3_2_1_reg_890;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_263_p0 = tmp_3_2_reg_870;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_263_p0 = tmp_2_2_reg_790;
    end else begin
        grp_fu_263_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_263_p1 = tmp_2_2_3_reg_850_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_263_p1 = tmp_2_2_2_reg_830_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_263_p1 = tmp_2_2_1_reg_810_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_263_p1 = 32'd0;
    end else begin
        grp_fu_263_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_268_p0 = tmp_3_3_2_reg_915;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_268_p0 = tmp_3_3_1_reg_895;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_268_p0 = tmp_3_3_reg_875;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_268_p0 = tmp_2_3_reg_795;
    end else begin
        grp_fu_268_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_268_p1 = tmp_2_3_3_reg_855_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_268_p1 = tmp_2_3_2_reg_835_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_268_p1 = tmp_2_3_1_reg_815_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_268_p1 = 32'd0;
    end else begin
        grp_fu_268_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_273_ce = 1'b1;
    end else begin
        grp_fu_273_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_273_p0 = data0_3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_273_p0 = data0_2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_273_p0 = data0_1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_273_p0 = data0_0;
        end else begin
            grp_fu_273_p0 = 'bx;
        end
    end else begin
        grp_fu_273_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_273_p1 = data1_addr_read_3_reg_772;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_273_p1 = data1_addr_read_2_reg_764;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_273_p1 = data1_addr_read_1_reg_756;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_273_p1 = data1_addr_read_reg_748;
        end else begin
            grp_fu_273_p1 = 'bx;
        end
    end else begin
        grp_fu_273_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_277_p0 = data0_7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_277_p0 = data0_6;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_277_p0 = data0_5;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_277_p0 = data0_4;
        end else begin
            grp_fu_277_p0 = 'bx;
        end
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_277_p1 = data1_addr_read_3_reg_772;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_277_p1 = data1_addr_read_2_reg_764;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_277_p1 = data1_addr_read_1_reg_756;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_277_p1 = data1_addr_read_reg_748;
        end else begin
            grp_fu_277_p1 = 'bx;
        end
    end else begin
        grp_fu_277_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_281_ce = 1'b1;
    end else begin
        grp_fu_281_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_281_p0 = data0_11;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_281_p0 = data0_10;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_281_p0 = data0_9;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_281_p0 = data0_8;
        end else begin
            grp_fu_281_p0 = 'bx;
        end
    end else begin
        grp_fu_281_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_281_p1 = data1_addr_read_3_reg_772;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_281_p1 = data1_addr_read_2_reg_764;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_281_p1 = data1_addr_read_1_reg_756;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_281_p1 = data1_addr_read_reg_748;
        end else begin
            grp_fu_281_p1 = 'bx;
        end
    end else begin
        grp_fu_281_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_285_ce = 1'b1;
    end else begin
        grp_fu_285_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_285_p0 = data0_15;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_285_p0 = data0_14;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_285_p0 = data0_13;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_285_p0 = data0_12;
        end else begin
            grp_fu_285_p0 = 'bx;
        end
    end else begin
        grp_fu_285_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_285_p1 = data1_addr_read_3_reg_772;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_285_p1 = data1_addr_read_2_reg_764;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_285_p1 = data1_addr_read_1_reg_756;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_285_p1 = data1_addr_read_reg_748;
        end else begin
            grp_fu_285_p1 = 'bx;
        end
    end else begin
        grp_fu_285_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_289_p0 = tmp_3_3_3_reg_941;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_289_p0 = tmp_3_2_3_reg_934;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_289_p0 = tmp_3_1_3_reg_927;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_289_p0 = tmp_3_0_3_reg_920;
        end else begin
            grp_fu_289_p0 = 'bx;
        end
    end else begin
        grp_fu_289_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln32_fu_307_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln32_fu_307_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln51_1_fu_563_p2 = (zext_ln49_2_fu_503_p1 + zext_ln51_fu_553_p1);

assign add_ln51_2_fu_575_p2 = (zext_ln51_2_fu_572_p1 + zext_ln51_1_fu_569_p1);

assign add_ln51_fu_557_p2 = (zext_ln49_1_fu_454_p1 + zext_ln49_fu_405_p1);

assign and_ln51_1_fu_400_p2 = (tmp_5_reg_948 & and_ln51_fu_395_p2);

assign and_ln51_2_fu_444_p2 = (or_ln51_2_fu_438_p2 & or_ln51_1_fu_339_p2);

assign and_ln51_3_fu_449_p2 = (tmp_8_reg_953 & and_ln51_2_fu_444_p2);

assign and_ln51_4_fu_493_p2 = (or_ln51_3_fu_487_p2 & or_ln51_1_fu_339_p2);

assign and_ln51_5_fu_498_p2 = (tmp_s_reg_958 & and_ln51_4_fu_493_p2);

assign and_ln51_6_fu_542_p2 = (or_ln51_4_fu_536_p2 & or_ln51_1_fu_339_p2);

assign and_ln51_7_fu_547_p2 = (grp_fu_289_p2 & and_ln51_6_fu_542_p2);

assign and_ln51_fu_395_p2 = (or_ln51_fu_389_p2 & or_ln51_1_fu_339_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_00001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((data_out_req_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0)) | ((data1_rsp_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln32_reg_715 == 1'd0)));
end

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_pp0_stage2_iter8 = ((data_out_req_full_n == 1'b0) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state37_pp0_stage3_iter8 = ((data_out_req_full_n == 1'b0) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state38_pp0_stage0_iter9 = ((data_out_req_full_n == 1'b0) & (icmp_ln32_reg_715_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_block_state39_pp0_stage1_iter9 = ((data_out_req_full_n == 1'b0) & (icmp_ln32_reg_715_pp0_iter9_reg == 1'd0));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((data1_rsp_empty_n == 1'b0) & (icmp_ln32_reg_715 == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter1 = ((data1_rsp_empty_n == 1'b0) & (icmp_ln32_reg_715 == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage1_iter1 = ((data1_rsp_empty_n == 1'b0) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state8_pp0_stage2_iter1 = ((data1_rsp_empty_n == 1'b0) & (icmp_ln32_reg_715_pp0_iter1_reg == 1'd0));
end

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln51_1_fu_293_p1 = threshold;

assign bitcast_ln51_2_fu_409_p1 = tmp_3_1_3_reg_927_pp0_iter7_reg;

assign bitcast_ln51_3_fu_458_p1 = tmp_3_2_3_reg_934_pp0_iter7_reg;

assign bitcast_ln51_4_fu_507_p1 = tmp_3_3_3_reg_941_pp0_iter7_reg;

assign bitcast_ln51_fu_360_p1 = tmp_3_0_3_reg_920_pp0_iter7_reg;

assign data1_address = zext_ln40_fu_344_p1;

assign data1_dataout = 32'd0;

assign data1_req_din = 1'b0;

assign data1_size = 32'd4;

assign data_out_address = data_out_addr_reg_743_pp0_iter8_reg;

assign data_out_rsp_read = 1'b0;

assign data_out_size = 32'd4;

assign i_fu_312_p2 = (ap_phi_mux_i_1_phi_fu_246_p4 + 32'd1);

assign icmp_ln32_fu_307_p2 = ((ap_phi_mux_i_1_phi_fu_246_p4 == size) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_383_p2 = ((trunc_ln51_1_fu_373_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_2_fu_333_p2 = ((tmp_4_fu_324_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln51_3_fu_301_p2 = ((trunc_ln51_fu_297_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_4_fu_426_p2 = ((tmp_6_fu_412_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln51_5_fu_432_p2 = ((trunc_ln51_2_fu_422_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_6_fu_475_p2 = ((tmp_9_fu_461_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln51_7_fu_481_p2 = ((trunc_ln51_3_fu_471_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_8_fu_524_p2 = ((tmp_7_fu_510_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln51_9_fu_530_p2 = ((trunc_ln51_4_fu_520_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_377_p2 = ((tmp_1_fu_363_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_581_p2 = ((add_ln51_2_fu_575_p2 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln51_1_fu_339_p2 = (icmp_ln51_3_fu_301_p2 | icmp_ln51_2_fu_333_p2);

assign or_ln51_2_fu_438_p2 = (icmp_ln51_5_fu_432_p2 | icmp_ln51_4_fu_426_p2);

assign or_ln51_3_fu_487_p2 = (icmp_ln51_7_fu_481_p2 | icmp_ln51_6_fu_475_p2);

assign or_ln51_4_fu_536_p2 = (icmp_ln51_9_fu_530_p2 | icmp_ln51_8_fu_524_p2);

assign or_ln51_fu_389_p2 = (icmp_ln51_fu_377_p2 | icmp_ln51_1_fu_383_p2);

assign p_tmp_3_0_3_fu_587_p3 = ((icmp_ln53_fu_581_p2[0:0] === 1'b1) ? 32'd0 : tmp_3_0_3_reg_920_pp0_iter7_reg);

assign p_tmp_3_1_3_fu_594_p3 = ((icmp_ln53_fu_581_p2[0:0] === 1'b1) ? 32'd0 : tmp_3_1_3_reg_927_pp0_iter7_reg);

assign p_tmp_3_2_3_fu_601_p3 = ((icmp_ln53_fu_581_p2[0:0] === 1'b1) ? 32'd0 : tmp_3_2_3_reg_934_pp0_iter7_reg);

assign p_tmp_3_3_3_fu_608_p3 = ((icmp_ln53_fu_581_p2[0:0] === 1'b1) ? 32'd0 : tmp_3_3_3_reg_941_pp0_iter7_reg);

assign shl_ln40_fu_318_p2 = ap_phi_mux_i_1_phi_fu_246_p4 << 32'd2;

assign tmp_1_fu_363_p4 = {{bitcast_ln51_fu_360_p1[30:23]}};

assign tmp_4_fu_324_p4 = {{bitcast_ln51_1_fu_293_p1[30:23]}};

assign tmp_6_fu_412_p4 = {{bitcast_ln51_2_fu_409_p1[30:23]}};

assign tmp_7_fu_510_p4 = {{bitcast_ln51_4_fu_507_p1[30:23]}};

assign tmp_9_fu_461_p4 = {{bitcast_ln51_3_fu_458_p1[30:23]}};

assign trunc_ln51_1_fu_373_p1 = bitcast_ln51_fu_360_p1[22:0];

assign trunc_ln51_2_fu_422_p1 = bitcast_ln51_2_fu_409_p1[22:0];

assign trunc_ln51_3_fu_471_p1 = bitcast_ln51_3_fu_458_p1[22:0];

assign trunc_ln51_4_fu_520_p1 = bitcast_ln51_4_fu_507_p1[22:0];

assign trunc_ln51_fu_297_p1 = bitcast_ln51_1_fu_293_p1[22:0];

assign zext_ln40_fu_344_p1 = shl_ln40_reg_724;

assign zext_ln49_1_fu_454_p1 = and_ln51_3_fu_449_p2;

assign zext_ln49_2_fu_503_p1 = and_ln51_5_fu_498_p2;

assign zext_ln49_fu_405_p1 = and_ln51_1_fu_400_p2;

assign zext_ln51_1_fu_569_p1 = add_ln51_reg_963;

assign zext_ln51_2_fu_572_p1 = add_ln51_1_reg_968;

assign zext_ln51_fu_553_p1 = and_ln51_7_fu_547_p2;

always @ (posedge ap_clk) begin
    shl_ln40_reg_724[1:0] <= 2'b00;
    data_out_addr_reg_743[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter1_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter2_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter3_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter4_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter5_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter6_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter7_reg[1:0] <= 2'b00;
    data_out_addr_reg_743_pp0_iter8_reg[1:0] <= 2'b00;
end

endmodule //myFuncAccel4
