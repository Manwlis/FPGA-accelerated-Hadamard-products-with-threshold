-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myFuncAccel4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    dim : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_11 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_14 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    data1_req_din : OUT STD_LOGIC;
    data1_req_full_n : IN STD_LOGIC;
    data1_req_write : OUT STD_LOGIC;
    data1_rsp_empty_n : IN STD_LOGIC;
    data1_rsp_read : OUT STD_LOGIC;
    data1_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    data1_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    data1_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    data1_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_out_req_din : OUT STD_LOGIC;
    data_out_req_full_n : IN STD_LOGIC;
    data_out_req_write : OUT STD_LOGIC;
    data_out_rsp_empty_n : IN STD_LOGIC;
    data_out_rsp_read : OUT STD_LOGIC;
    data_out_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_out_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    data_out_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_out_size : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myFuncAccel4 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myFuncAccel4,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=435,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=20,HLS_SYN_FF=3910,HLS_SYN_LUT=4497,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_1_reg_242 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln51_1_fu_293_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln51_3_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter8 : BOOLEAN;
    signal icmp_ln32_reg_715_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state38_pp0_stage0_iter9 : BOOLEAN;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln32_reg_715_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_reg_715_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal shl_ln40_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln40_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln51_1_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state39_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal data_out_addr_reg_743 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data_out_addr_reg_743_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal data1_addr_read_reg_748 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state33_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state37_pp0_stage3_iter8 : BOOLEAN;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal data1_addr_read_1_reg_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal data1_addr_read_2_reg_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal data1_addr_read_3_reg_772 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_fu_273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_780 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_785 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_790 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_795 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_1_reg_800 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_2_0_1_reg_800_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_805_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_810 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_810_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_1_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_1_reg_815_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_820_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_820_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_825 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_825_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_825_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_830_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_830_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_2_reg_835 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_2_reg_835_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_2_reg_835_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_840 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_840_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_840_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_840_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_845_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_845_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_845_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_850 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_850_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_850_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_850_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_855 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_855_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_855_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_855_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_860 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_reg_865 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_reg_870 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_reg_875 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_0_1_reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_3_1_1_reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_1_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_1_reg_895 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_0_2_reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_3_1_2_reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_2_reg_910 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_2_reg_915 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_0_3_reg_920 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_3_0_3_reg_920_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_3_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_3_reg_927_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_3_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_3_reg_934_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_3_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_3_reg_941_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal tmp_8_reg_953 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_958 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln51_fu_557_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln51_reg_963 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln51_1_fu_563_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln51_1_reg_968 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_tmp_3_0_3_fu_587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_0_3_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_1_3_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_1_3_reg_978 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_2_3_fu_601_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_2_3_reg_983 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_3_3_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_3_3_3_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_i_1_phi_fu_246_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln40_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_253_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_258_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln51_fu_297_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4_fu_324_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln51_2_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln51_fu_360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_363_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln51_1_fu_373_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln51_1_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln51_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_1_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln51_2_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_412_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln51_2_fu_422_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln51_5_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_4_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln51_2_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_2_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_3_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln51_3_fu_458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_461_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln51_3_fu_471_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln51_7_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_6_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln51_3_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_4_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_5_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln51_4_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_510_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln51_4_fu_520_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln51_9_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_8_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln51_4_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_6_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_7_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln49_1_fu_454_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln49_fu_405_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln49_2_fu_503_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln51_fu_553_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln51_2_fu_572_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln51_1_fu_569_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln51_2_fu_575_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln53_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_253_ce : STD_LOGIC;
    signal grp_fu_258_ce : STD_LOGIC;
    signal grp_fu_263_ce : STD_LOGIC;
    signal grp_fu_268_ce : STD_LOGIC;
    signal grp_fu_273_ce : STD_LOGIC;
    signal grp_fu_277_ce : STD_LOGIC;
    signal grp_fu_281_ce : STD_LOGIC;
    signal grp_fu_285_ce : STD_LOGIC;
    signal grp_fu_289_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myFuncAccel4_fcmp_32ns_32ns_1_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_253_p0,
        din1 => grp_fu_253_p1,
        ce => grp_fu_253_ce,
        dout => grp_fu_253_p2);

    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_258_p0,
        din1 => grp_fu_258_p1,
        ce => grp_fu_258_ce,
        dout => grp_fu_258_p2);

    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_263_p0,
        din1 => grp_fu_263_p1,
        ce => grp_fu_263_ce,
        dout => grp_fu_263_p2);

    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_268_p0,
        din1 => grp_fu_268_p1,
        ce => grp_fu_268_ce,
        dout => grp_fu_268_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_273_p0,
        din1 => grp_fu_273_p1,
        ce => grp_fu_273_ce,
        dout => grp_fu_273_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_277_p0,
        din1 => grp_fu_277_p1,
        ce => grp_fu_277_ce,
        dout => grp_fu_277_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_281_p0,
        din1 => grp_fu_281_p1,
        ce => grp_fu_281_ce,
        dout => grp_fu_281_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_285_p0,
        din1 => grp_fu_285_p1,
        ce => grp_fu_285_ce,
        dout => grp_fu_285_p2);

    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9 : component myFuncAccel4_fcmp_32ns_32ns_1_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_289_p0,
        din1 => threshold,
        ce => grp_fu_289_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_289_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_reg_242 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715 = ap_const_lv1_0))) then 
                i_1_reg_242 <= i_reg_719;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715_pp0_iter7_reg = ap_const_lv1_0))) then
                add_ln51_1_reg_968 <= add_ln51_1_fu_563_p2;
                add_ln51_reg_963 <= add_ln51_fu_557_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715 = ap_const_lv1_0))) then
                data1_addr_read_1_reg_756 <= data1_datain;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0))) then
                data1_addr_read_2_reg_764 <= data1_datain;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0))) then
                data1_addr_read_3_reg_772 <= data1_datain;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0))) then
                data1_addr_read_reg_748 <= data1_datain;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_715 = ap_const_lv1_0))) then
                    data_out_addr_reg_743(31 downto 2) <= zext_ln40_fu_344_p1(32 - 1 downto 0)(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    data_out_addr_reg_743_pp0_iter1_reg(31 downto 2) <= data_out_addr_reg_743(31 downto 2);
                    data_out_addr_reg_743_pp0_iter2_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter1_reg(31 downto 2);
                    data_out_addr_reg_743_pp0_iter3_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter2_reg(31 downto 2);
                    data_out_addr_reg_743_pp0_iter4_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter3_reg(31 downto 2);
                    data_out_addr_reg_743_pp0_iter5_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter4_reg(31 downto 2);
                    data_out_addr_reg_743_pp0_iter6_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter5_reg(31 downto 2);
                    data_out_addr_reg_743_pp0_iter7_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter6_reg(31 downto 2);
                    data_out_addr_reg_743_pp0_iter8_reg(31 downto 2) <= data_out_addr_reg_743_pp0_iter7_reg(31 downto 2);
                tmp_2_0_2_reg_820_pp0_iter3_reg <= tmp_2_0_2_reg_820;
                tmp_2_0_2_reg_820_pp0_iter4_reg <= tmp_2_0_2_reg_820_pp0_iter3_reg;
                tmp_2_1_2_reg_825_pp0_iter3_reg <= tmp_2_1_2_reg_825;
                tmp_2_1_2_reg_825_pp0_iter4_reg <= tmp_2_1_2_reg_825_pp0_iter3_reg;
                tmp_2_2_2_reg_830_pp0_iter3_reg <= tmp_2_2_2_reg_830;
                tmp_2_2_2_reg_830_pp0_iter4_reg <= tmp_2_2_2_reg_830_pp0_iter3_reg;
                tmp_2_3_2_reg_835_pp0_iter3_reg <= tmp_2_3_2_reg_835;
                tmp_2_3_2_reg_835_pp0_iter4_reg <= tmp_2_3_2_reg_835_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_719 <= i_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln32_reg_715 <= icmp_ln32_fu_307_p2;
                icmp_ln32_reg_715_pp0_iter1_reg <= icmp_ln32_reg_715;
                icmp_ln32_reg_715_pp0_iter2_reg <= icmp_ln32_reg_715_pp0_iter1_reg;
                icmp_ln32_reg_715_pp0_iter3_reg <= icmp_ln32_reg_715_pp0_iter2_reg;
                icmp_ln32_reg_715_pp0_iter4_reg <= icmp_ln32_reg_715_pp0_iter3_reg;
                icmp_ln32_reg_715_pp0_iter5_reg <= icmp_ln32_reg_715_pp0_iter4_reg;
                icmp_ln32_reg_715_pp0_iter6_reg <= icmp_ln32_reg_715_pp0_iter5_reg;
                icmp_ln32_reg_715_pp0_iter7_reg <= icmp_ln32_reg_715_pp0_iter6_reg;
                icmp_ln32_reg_715_pp0_iter8_reg <= icmp_ln32_reg_715_pp0_iter7_reg;
                icmp_ln32_reg_715_pp0_iter9_reg <= icmp_ln32_reg_715_pp0_iter8_reg;
                tmp_2_0_1_reg_800_pp0_iter3_reg <= tmp_2_0_1_reg_800;
                tmp_2_1_1_reg_805_pp0_iter3_reg <= tmp_2_1_1_reg_805;
                tmp_2_2_1_reg_810_pp0_iter3_reg <= tmp_2_2_1_reg_810;
                tmp_2_3_1_reg_815_pp0_iter3_reg <= tmp_2_3_1_reg_815;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0))) then
                p_tmp_3_0_3_reg_973 <= p_tmp_3_0_3_fu_587_p3;
                p_tmp_3_1_3_reg_978 <= p_tmp_3_1_3_fu_594_p3;
                p_tmp_3_2_3_reg_983 <= p_tmp_3_2_3_fu_601_p3;
                p_tmp_3_3_3_reg_988 <= p_tmp_3_3_3_fu_608_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_fu_307_p2 = ap_const_lv1_0))) then
                    shl_ln40_reg_724(31 downto 2) <= shl_ln40_fu_318_p2(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_2_0_1_reg_800 <= grp_fu_273_p2;
                tmp_2_1_1_reg_805 <= grp_fu_277_p2;
                tmp_2_2_1_reg_810 <= grp_fu_281_p2;
                tmp_2_3_1_reg_815 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_715_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_2_0_2_reg_820 <= grp_fu_273_p2;
                tmp_2_1_2_reg_825 <= grp_fu_277_p2;
                tmp_2_2_2_reg_830 <= grp_fu_281_p2;
                tmp_2_3_2_reg_835 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln32_reg_715_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_2_0_3_reg_840 <= grp_fu_273_p2;
                tmp_2_1_3_reg_845 <= grp_fu_277_p2;
                tmp_2_2_3_reg_850 <= grp_fu_281_p2;
                tmp_2_3_3_reg_855 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_2_0_3_reg_840_pp0_iter3_reg <= tmp_2_0_3_reg_840;
                tmp_2_0_3_reg_840_pp0_iter4_reg <= tmp_2_0_3_reg_840_pp0_iter3_reg;
                tmp_2_0_3_reg_840_pp0_iter5_reg <= tmp_2_0_3_reg_840_pp0_iter4_reg;
                tmp_2_1_3_reg_845_pp0_iter3_reg <= tmp_2_1_3_reg_845;
                tmp_2_1_3_reg_845_pp0_iter4_reg <= tmp_2_1_3_reg_845_pp0_iter3_reg;
                tmp_2_1_3_reg_845_pp0_iter5_reg <= tmp_2_1_3_reg_845_pp0_iter4_reg;
                tmp_2_2_3_reg_850_pp0_iter3_reg <= tmp_2_2_3_reg_850;
                tmp_2_2_3_reg_850_pp0_iter4_reg <= tmp_2_2_3_reg_850_pp0_iter3_reg;
                tmp_2_2_3_reg_850_pp0_iter5_reg <= tmp_2_2_3_reg_850_pp0_iter4_reg;
                tmp_2_3_3_reg_855_pp0_iter3_reg <= tmp_2_3_3_reg_855;
                tmp_2_3_3_reg_855_pp0_iter4_reg <= tmp_2_3_3_reg_855_pp0_iter3_reg;
                tmp_2_3_3_reg_855_pp0_iter5_reg <= tmp_2_3_3_reg_855_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_2_1_reg_785 <= grp_fu_277_p2;
                tmp_2_2_reg_790 <= grp_fu_281_p2;
                tmp_2_3_reg_795 <= grp_fu_285_p2;
                tmp_2_reg_780 <= grp_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_715_pp0_iter4_reg = ap_const_lv1_0))) then
                tmp_3_0_1_reg_880 <= grp_fu_253_p2;
                tmp_3_1_1_reg_885 <= grp_fu_258_p2;
                tmp_3_2_1_reg_890 <= grp_fu_263_p2;
                tmp_3_3_1_reg_895 <= grp_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln32_reg_715_pp0_iter5_reg = ap_const_lv1_0))) then
                tmp_3_0_2_reg_900 <= grp_fu_253_p2;
                tmp_3_1_2_reg_905 <= grp_fu_258_p2;
                tmp_3_2_2_reg_910 <= grp_fu_263_p2;
                tmp_3_3_2_reg_915 <= grp_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_715_pp0_iter6_reg = ap_const_lv1_0))) then
                tmp_3_0_3_reg_920 <= grp_fu_253_p2;
                tmp_3_1_3_reg_927 <= grp_fu_258_p2;
                tmp_3_2_3_reg_934 <= grp_fu_263_p2;
                tmp_3_3_3_reg_941 <= grp_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_3_0_3_reg_920_pp0_iter7_reg <= tmp_3_0_3_reg_920;
                tmp_3_1_3_reg_927_pp0_iter7_reg <= tmp_3_1_3_reg_927;
                tmp_3_2_3_reg_934_pp0_iter7_reg <= tmp_3_2_3_reg_934;
                tmp_3_3_3_reg_941_pp0_iter7_reg <= tmp_3_3_3_reg_941;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_3_1_reg_865 <= grp_fu_258_p2;
                tmp_3_2_reg_870 <= grp_fu_263_p2;
                tmp_3_3_reg_875 <= grp_fu_268_p2;
                tmp_3_reg_860 <= grp_fu_253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_715_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_5_reg_948 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln32_reg_715_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_8_reg_953 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_715_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_s_reg_958 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    shl_ln40_reg_724(1 downto 0) <= "00";
    data_out_addr_reg_743(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter1_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter2_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter3_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter4_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter5_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter6_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter7_reg(1 downto 0) <= "00";
    data_out_addr_reg_743_pp0_iter8_reg(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln32_fu_307_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln32_fu_307_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln32_fu_307_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln51_1_fu_563_p2 <= std_logic_vector(unsigned(zext_ln49_2_fu_503_p1) + unsigned(zext_ln51_fu_553_p1));
    add_ln51_2_fu_575_p2 <= std_logic_vector(unsigned(zext_ln51_2_fu_572_p1) + unsigned(zext_ln51_1_fu_569_p1));
    add_ln51_fu_557_p2 <= std_logic_vector(unsigned(zext_ln49_1_fu_454_p1) + unsigned(zext_ln49_fu_405_p1));
    and_ln51_1_fu_400_p2 <= (tmp_5_reg_948 and and_ln51_fu_395_p2);
    and_ln51_2_fu_444_p2 <= (or_ln51_2_fu_438_p2 and or_ln51_1_fu_339_p2);
    and_ln51_3_fu_449_p2 <= (tmp_8_reg_953 and and_ln51_2_fu_444_p2);
    and_ln51_4_fu_493_p2 <= (or_ln51_3_fu_487_p2 and or_ln51_1_fu_339_p2);
    and_ln51_5_fu_498_p2 <= (tmp_s_reg_958 and and_ln51_4_fu_493_p2);
    and_ln51_6_fu_542_p2 <= (or_ln51_4_fu_536_p2 and or_ln51_1_fu_339_p2);
    and_ln51_7_fu_547_p2 <= (grp_fu_289_p2 and and_ln51_6_fu_542_p2);
    and_ln51_fu_395_p2 <= (or_ln51_fu_389_p2 and or_ln51_1_fu_339_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state40 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, icmp_ln32_reg_715, ap_enable_reg_pp0_iter1, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
                ap_block_pp0_stage0_00001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, icmp_ln32_reg_715, ap_enable_reg_pp0_iter1, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
                ap_block_pp0_stage0_11001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, icmp_ln32_reg_715, ap_enable_reg_pp0_iter1, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
                ap_block_pp0_stage0_subdone <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_00001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, icmp_ln32_reg_715_pp0_iter1_reg, icmp_ln32_reg_715_pp0_iter9_reg)
    begin
                ap_block_pp0_stage1_00001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, icmp_ln32_reg_715_pp0_iter1_reg, icmp_ln32_reg_715_pp0_iter9_reg)
    begin
                ap_block_pp0_stage1_11001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, icmp_ln32_reg_715_pp0_iter1_reg, icmp_ln32_reg_715_pp0_iter9_reg)
    begin
                ap_block_pp0_stage1_subdone <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_00001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, ap_enable_reg_pp0_iter1, icmp_ln32_reg_715_pp0_iter8_reg, icmp_ln32_reg_715_pp0_iter1_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_block_pp0_stage2_00001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, ap_enable_reg_pp0_iter1, icmp_ln32_reg_715_pp0_iter8_reg, icmp_ln32_reg_715_pp0_iter1_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_block_pp0_stage2_11001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, ap_enable_reg_pp0_iter1, icmp_ln32_reg_715_pp0_iter8_reg, icmp_ln32_reg_715_pp0_iter1_reg, ap_enable_reg_pp0_iter8)
    begin
                ap_block_pp0_stage2_subdone <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, icmp_ln32_reg_715, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8)
    begin
                ap_block_pp0_stage3_00001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, icmp_ln32_reg_715, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8)
    begin
                ap_block_pp0_stage3_11001 <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(data1_rsp_empty_n, data_out_req_full_n, icmp_ln32_reg_715, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8)
    begin
                ap_block_pp0_stage3_subdone <= (((data_out_req_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((data1_rsp_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)));
    end process;

        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_pp0_stage2_iter8_assign_proc : process(data_out_req_full_n, icmp_ln32_reg_715_pp0_iter8_reg)
    begin
                ap_block_state36_pp0_stage2_iter8 <= ((data_out_req_full_n = ap_const_logic_0) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state37_pp0_stage3_iter8_assign_proc : process(data_out_req_full_n, icmp_ln32_reg_715_pp0_iter8_reg)
    begin
                ap_block_state37_pp0_stage3_iter8 <= ((data_out_req_full_n = ap_const_logic_0) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state38_pp0_stage0_iter9_assign_proc : process(data_out_req_full_n, icmp_ln32_reg_715_pp0_iter8_reg)
    begin
                ap_block_state38_pp0_stage0_iter9 <= ((data_out_req_full_n = ap_const_logic_0) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_block_state39_pp0_stage1_iter9_assign_proc : process(data_out_req_full_n, icmp_ln32_reg_715_pp0_iter9_reg)
    begin
                ap_block_state39_pp0_stage1_iter9 <= ((data_out_req_full_n = ap_const_logic_0) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage3_iter0_assign_proc : process(data1_rsp_empty_n, icmp_ln32_reg_715)
    begin
                ap_block_state5_pp0_stage3_iter0 <= ((data1_rsp_empty_n = ap_const_logic_0) and (icmp_ln32_reg_715 = ap_const_lv1_0));
    end process;


    ap_block_state6_pp0_stage0_iter1_assign_proc : process(data1_rsp_empty_n, icmp_ln32_reg_715)
    begin
                ap_block_state6_pp0_stage0_iter1 <= ((data1_rsp_empty_n = ap_const_logic_0) and (icmp_ln32_reg_715 = ap_const_lv1_0));
    end process;


    ap_block_state7_pp0_stage1_iter1_assign_proc : process(data1_rsp_empty_n, icmp_ln32_reg_715_pp0_iter1_reg)
    begin
                ap_block_state7_pp0_stage1_iter1 <= ((data1_rsp_empty_n = ap_const_logic_0) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state8_pp0_stage2_iter1_assign_proc : process(data1_rsp_empty_n, icmp_ln32_reg_715_pp0_iter1_reg)
    begin
                ap_block_state8_pp0_stage2_iter1 <= ((data1_rsp_empty_n = ap_const_logic_0) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln32_fu_307_p2)
    begin
        if ((icmp_ln32_fu_307_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_1_phi_fu_246_p4_assign_proc : process(i_1_reg_242, icmp_ln32_reg_715, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_reg_719, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln32_reg_715 = ap_const_lv1_0))) then 
            ap_phi_mux_i_1_phi_fu_246_p4 <= i_reg_719;
        else 
            ap_phi_mux_i_1_phi_fu_246_p4 <= i_1_reg_242;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln51_1_fu_293_p1 <= threshold;
    bitcast_ln51_2_fu_409_p1 <= tmp_3_1_3_reg_927_pp0_iter7_reg;
    bitcast_ln51_3_fu_458_p1 <= tmp_3_2_3_reg_934_pp0_iter7_reg;
    bitcast_ln51_4_fu_507_p1 <= tmp_3_3_3_reg_941_pp0_iter7_reg;
    bitcast_ln51_fu_360_p1 <= tmp_3_0_3_reg_920_pp0_iter7_reg;
    data1_address <= zext_ln40_fu_344_p1(32 - 1 downto 0);
    data1_dataout <= ap_const_lv32_0;
    data1_req_din <= ap_const_logic_0;

    data1_req_write_assign_proc : process(icmp_ln32_reg_715, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0))) then 
            data1_req_write <= ap_const_logic_1;
        else 
            data1_req_write <= ap_const_logic_0;
        end if; 
    end process;


    data1_rsp_read_assign_proc : process(icmp_ln32_reg_715, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln32_reg_715_pp0_iter1_reg, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln32_reg_715 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715 = ap_const_lv1_0)))) then 
            data1_rsp_read <= ap_const_logic_1;
        else 
            data1_rsp_read <= ap_const_logic_0;
        end if; 
    end process;

    data1_size <= ap_const_lv32_4;
    data_out_address <= data_out_addr_reg_743_pp0_iter8_reg;

    data_out_dataout_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln32_reg_715_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter8, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, p_tmp_3_0_3_reg_973, p_tmp_3_1_3_reg_978, p_tmp_3_2_3_reg_983, p_tmp_3_3_3_reg_988)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0))) then 
            data_out_dataout <= p_tmp_3_3_3_reg_988;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0))) then 
            data_out_dataout <= p_tmp_3_2_3_reg_983;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0))) then 
            data_out_dataout <= p_tmp_3_1_3_reg_978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0))) then 
            data_out_dataout <= p_tmp_3_0_3_reg_973;
        else 
            data_out_dataout <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_out_req_din_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln32_reg_715_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter8, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)))) then 
            data_out_req_din <= ap_const_logic_1;
        else 
            data_out_req_din <= ap_const_logic_0;
        end if; 
    end process;


    data_out_req_write_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln32_reg_715_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, icmp_ln32_reg_715_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter8, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln32_reg_715_pp0_iter8_reg = ap_const_lv1_0)))) then 
            data_out_req_write <= ap_const_logic_1;
        else 
            data_out_req_write <= ap_const_logic_0;
        end if; 
    end process;

    data_out_rsp_read <= ap_const_logic_0;
    data_out_size <= ap_const_lv32_4;

    grp_fu_253_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_253_ce <= ap_const_logic_1;
        else 
            grp_fu_253_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_253_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tmp_2_reg_780, ap_enable_reg_pp0_iter2, tmp_3_reg_860, ap_enable_reg_pp0_iter3, tmp_3_0_1_reg_880, ap_enable_reg_pp0_iter4, tmp_3_0_2_reg_900, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_253_p0 <= tmp_3_0_2_reg_900;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_253_p0 <= tmp_3_0_1_reg_880;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_253_p0 <= tmp_3_reg_860;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_253_p0 <= tmp_2_reg_780;
        else 
            grp_fu_253_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_253_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_2_0_1_reg_800_pp0_iter3_reg, tmp_2_0_2_reg_820_pp0_iter4_reg, tmp_2_0_3_reg_840_pp0_iter5_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_253_p1 <= tmp_2_0_3_reg_840_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_253_p1 <= tmp_2_0_2_reg_820_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_253_p1 <= tmp_2_0_1_reg_800_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_253_p1 <= ap_const_lv32_0;
        else 
            grp_fu_253_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_258_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_258_ce <= ap_const_logic_1;
        else 
            grp_fu_258_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_258_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tmp_2_1_reg_785, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, tmp_3_1_reg_865, ap_enable_reg_pp0_iter4, tmp_3_1_1_reg_885, ap_enable_reg_pp0_iter5, tmp_3_1_2_reg_905, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_258_p0 <= tmp_3_1_2_reg_905;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_258_p0 <= tmp_3_1_1_reg_885;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_258_p0 <= tmp_3_1_reg_865;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_p0 <= tmp_2_1_reg_785;
        else 
            grp_fu_258_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_258_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_2_1_1_reg_805_pp0_iter3_reg, tmp_2_1_2_reg_825_pp0_iter4_reg, tmp_2_1_3_reg_845_pp0_iter5_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_258_p1 <= tmp_2_1_3_reg_845_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_258_p1 <= tmp_2_1_2_reg_825_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_258_p1 <= tmp_2_1_1_reg_805_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_p1 <= ap_const_lv32_0;
        else 
            grp_fu_258_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_263_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_263_ce <= ap_const_logic_1;
        else 
            grp_fu_263_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_263_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tmp_2_2_reg_790, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, tmp_3_2_reg_870, ap_enable_reg_pp0_iter4, tmp_3_2_1_reg_890, ap_enable_reg_pp0_iter5, tmp_3_2_2_reg_910, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_263_p0 <= tmp_3_2_2_reg_910;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_263_p0 <= tmp_3_2_1_reg_890;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_263_p0 <= tmp_3_2_reg_870;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_263_p0 <= tmp_2_2_reg_790;
        else 
            grp_fu_263_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_263_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_2_2_1_reg_810_pp0_iter3_reg, tmp_2_2_2_reg_830_pp0_iter4_reg, tmp_2_2_3_reg_850_pp0_iter5_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_263_p1 <= tmp_2_2_3_reg_850_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_263_p1 <= tmp_2_2_2_reg_830_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_263_p1 <= tmp_2_2_1_reg_810_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_263_p1 <= ap_const_lv32_0;
        else 
            grp_fu_263_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_268_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_268_ce <= ap_const_logic_1;
        else 
            grp_fu_268_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_268_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tmp_2_3_reg_795, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, tmp_3_3_reg_875, ap_enable_reg_pp0_iter4, tmp_3_3_1_reg_895, ap_enable_reg_pp0_iter5, tmp_3_3_2_reg_915, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_268_p0 <= tmp_3_3_2_reg_915;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_268_p0 <= tmp_3_3_1_reg_895;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_268_p0 <= tmp_3_3_reg_875;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_268_p0 <= tmp_2_3_reg_795;
        else 
            grp_fu_268_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_268_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, tmp_2_3_1_reg_815_pp0_iter3_reg, tmp_2_3_2_reg_835_pp0_iter4_reg, tmp_2_3_3_reg_855_pp0_iter5_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_268_p1 <= tmp_2_3_3_reg_855_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_268_p1 <= tmp_2_3_2_reg_835_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_268_p1 <= tmp_2_3_1_reg_815_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_268_p1 <= ap_const_lv32_0;
        else 
            grp_fu_268_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_273_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_273_ce <= ap_const_logic_1;
        else 
            grp_fu_273_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_273_p0_assign_proc : process(data0_0, data0_1, data0_2, data0_3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_273_p0 <= data0_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_273_p0 <= data0_2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_273_p0 <= data0_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_273_p0 <= data0_0;
            else 
                grp_fu_273_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_273_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_273_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, data1_addr_read_reg_748, ap_CS_fsm_pp0_stage3, data1_addr_read_1_reg_756, data1_addr_read_2_reg_764, data1_addr_read_3_reg_772, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_273_p1 <= data1_addr_read_3_reg_772;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_273_p1 <= data1_addr_read_2_reg_764;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_273_p1 <= data1_addr_read_1_reg_756;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_273_p1 <= data1_addr_read_reg_748;
            else 
                grp_fu_273_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_273_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_277_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_277_ce <= ap_const_logic_1;
        else 
            grp_fu_277_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_277_p0_assign_proc : process(data0_4, data0_5, data0_6, data0_7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_277_p0 <= data0_7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_277_p0 <= data0_6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_277_p0 <= data0_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_277_p0 <= data0_4;
            else 
                grp_fu_277_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_277_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_277_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, data1_addr_read_reg_748, ap_CS_fsm_pp0_stage3, data1_addr_read_1_reg_756, data1_addr_read_2_reg_764, data1_addr_read_3_reg_772, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_277_p1 <= data1_addr_read_3_reg_772;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_277_p1 <= data1_addr_read_2_reg_764;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_277_p1 <= data1_addr_read_1_reg_756;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_277_p1 <= data1_addr_read_reg_748;
            else 
                grp_fu_277_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_277_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_281_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_281_ce <= ap_const_logic_1;
        else 
            grp_fu_281_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_281_p0_assign_proc : process(data0_8, data0_9, data0_10, data0_11, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_281_p0 <= data0_11;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_281_p0 <= data0_10;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_281_p0 <= data0_9;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_281_p0 <= data0_8;
            else 
                grp_fu_281_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_281_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_281_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, data1_addr_read_reg_748, ap_CS_fsm_pp0_stage3, data1_addr_read_1_reg_756, data1_addr_read_2_reg_764, data1_addr_read_3_reg_772, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_281_p1 <= data1_addr_read_3_reg_772;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_281_p1 <= data1_addr_read_2_reg_764;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_281_p1 <= data1_addr_read_1_reg_756;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_281_p1 <= data1_addr_read_reg_748;
            else 
                grp_fu_281_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_281_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_285_ce <= ap_const_logic_1;
        else 
            grp_fu_285_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_285_p0_assign_proc : process(data0_12, data0_13, data0_14, data0_15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_285_p0 <= data0_15;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_285_p0 <= data0_14;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_285_p0 <= data0_13;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_285_p0 <= data0_12;
            else 
                grp_fu_285_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_285_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, data1_addr_read_reg_748, ap_CS_fsm_pp0_stage3, data1_addr_read_1_reg_756, data1_addr_read_2_reg_764, data1_addr_read_3_reg_772, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_285_p1 <= data1_addr_read_3_reg_772;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_285_p1 <= data1_addr_read_2_reg_764;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_285_p1 <= data1_addr_read_1_reg_756;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_285_p1 <= data1_addr_read_reg_748;
            else 
                grp_fu_285_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_285_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_289_ce <= ap_const_logic_1;
        else 
            grp_fu_289_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_289_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tmp_3_0_3_reg_920, tmp_3_1_3_reg_927, tmp_3_2_3_reg_934, tmp_3_3_3_reg_941, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_289_p0 <= tmp_3_3_3_reg_941;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_289_p0 <= tmp_3_2_3_reg_934;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_289_p0 <= tmp_3_1_3_reg_927;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_289_p0 <= tmp_3_0_3_reg_920;
            else 
                grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_312_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_1_phi_fu_246_p4) + unsigned(ap_const_lv32_1));
    icmp_ln32_fu_307_p2 <= "1" when (ap_phi_mux_i_1_phi_fu_246_p4 = size) else "0";
    icmp_ln51_1_fu_383_p2 <= "1" when (trunc_ln51_1_fu_373_p1 = ap_const_lv23_0) else "0";
    icmp_ln51_2_fu_333_p2 <= "0" when (tmp_4_fu_324_p4 = ap_const_lv8_FF) else "1";
    icmp_ln51_3_fu_301_p2 <= "1" when (trunc_ln51_fu_297_p1 = ap_const_lv23_0) else "0";
    icmp_ln51_4_fu_426_p2 <= "0" when (tmp_6_fu_412_p4 = ap_const_lv8_FF) else "1";
    icmp_ln51_5_fu_432_p2 <= "1" when (trunc_ln51_2_fu_422_p1 = ap_const_lv23_0) else "0";
    icmp_ln51_6_fu_475_p2 <= "0" when (tmp_9_fu_461_p4 = ap_const_lv8_FF) else "1";
    icmp_ln51_7_fu_481_p2 <= "1" when (trunc_ln51_3_fu_471_p1 = ap_const_lv23_0) else "0";
    icmp_ln51_8_fu_524_p2 <= "0" when (tmp_7_fu_510_p4 = ap_const_lv8_FF) else "1";
    icmp_ln51_9_fu_530_p2 <= "1" when (trunc_ln51_4_fu_520_p1 = ap_const_lv23_0) else "0";
    icmp_ln51_fu_377_p2 <= "0" when (tmp_1_fu_363_p4 = ap_const_lv8_FF) else "1";
    icmp_ln53_fu_581_p2 <= "1" when (add_ln51_2_fu_575_p2 = ap_const_lv3_4) else "0";
    or_ln51_1_fu_339_p2 <= (icmp_ln51_3_fu_301_p2 or icmp_ln51_2_fu_333_p2);
    or_ln51_2_fu_438_p2 <= (icmp_ln51_5_fu_432_p2 or icmp_ln51_4_fu_426_p2);
    or_ln51_3_fu_487_p2 <= (icmp_ln51_7_fu_481_p2 or icmp_ln51_6_fu_475_p2);
    or_ln51_4_fu_536_p2 <= (icmp_ln51_9_fu_530_p2 or icmp_ln51_8_fu_524_p2);
    or_ln51_fu_389_p2 <= (icmp_ln51_fu_377_p2 or icmp_ln51_1_fu_383_p2);
    p_tmp_3_0_3_fu_587_p3 <= 
        ap_const_lv32_0 when (icmp_ln53_fu_581_p2(0) = '1') else 
        tmp_3_0_3_reg_920_pp0_iter7_reg;
    p_tmp_3_1_3_fu_594_p3 <= 
        ap_const_lv32_0 when (icmp_ln53_fu_581_p2(0) = '1') else 
        tmp_3_1_3_reg_927_pp0_iter7_reg;
    p_tmp_3_2_3_fu_601_p3 <= 
        ap_const_lv32_0 when (icmp_ln53_fu_581_p2(0) = '1') else 
        tmp_3_2_3_reg_934_pp0_iter7_reg;
    p_tmp_3_3_3_fu_608_p3 <= 
        ap_const_lv32_0 when (icmp_ln53_fu_581_p2(0) = '1') else 
        tmp_3_3_3_reg_941_pp0_iter7_reg;
    shl_ln40_fu_318_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_i_1_phi_fu_246_p4),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_1_fu_363_p4 <= bitcast_ln51_fu_360_p1(30 downto 23);
    tmp_4_fu_324_p4 <= bitcast_ln51_1_fu_293_p1(30 downto 23);
    tmp_6_fu_412_p4 <= bitcast_ln51_2_fu_409_p1(30 downto 23);
    tmp_7_fu_510_p4 <= bitcast_ln51_4_fu_507_p1(30 downto 23);
    tmp_9_fu_461_p4 <= bitcast_ln51_3_fu_458_p1(30 downto 23);
    trunc_ln51_1_fu_373_p1 <= bitcast_ln51_fu_360_p1(23 - 1 downto 0);
    trunc_ln51_2_fu_422_p1 <= bitcast_ln51_2_fu_409_p1(23 - 1 downto 0);
    trunc_ln51_3_fu_471_p1 <= bitcast_ln51_3_fu_458_p1(23 - 1 downto 0);
    trunc_ln51_4_fu_520_p1 <= bitcast_ln51_4_fu_507_p1(23 - 1 downto 0);
    trunc_ln51_fu_297_p1 <= bitcast_ln51_1_fu_293_p1(23 - 1 downto 0);
    zext_ln40_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln40_reg_724),64));
    zext_ln49_1_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln51_3_fu_449_p2),2));
    zext_ln49_2_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln51_5_fu_498_p2),2));
    zext_ln49_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln51_1_fu_400_p2),2));
    zext_ln51_1_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_reg_963),3));
    zext_ln51_2_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_1_reg_968),3));
    zext_ln51_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln51_7_fu_547_p2),2));
end behav;
