// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myFuncAccel4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myFuncAccel4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myFuncAccel4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> myFuncAccel4::ap_ST_fsm_state1 = "1";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_state38 = "100000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myFuncAccel4::ap_const_boolean_1 = true;
const sc_lv<1> myFuncAccel4::ap_const_lv1_0 = "0";
const sc_lv<1> myFuncAccel4::ap_const_lv1_1 = "1";
const sc_lv<2> myFuncAccel4::ap_const_lv2_0 = "00";
const sc_lv<2> myFuncAccel4::ap_const_lv2_2 = "10";
const sc_lv<2> myFuncAccel4::ap_const_lv2_3 = "11";
const sc_lv<2> myFuncAccel4::ap_const_lv2_1 = "1";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1 = "1";
const bool myFuncAccel4::ap_const_boolean_0 = false;
const sc_lv<32> myFuncAccel4::ap_const_lv32_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_3 = "11";
const sc_lv<32> myFuncAccel4::ap_const_lv32_4 = "100";
const sc_lv<64> myFuncAccel4::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<23> myFuncAccel4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_17 = "10111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1E = "11110";
const sc_lv<8> myFuncAccel4::ap_const_lv8_FF = "11111111";
const sc_lv<3> myFuncAccel4::ap_const_lv3_4 = "100";
const sc_lv<5> myFuncAccel4::ap_const_lv5_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_5 = "101";

myFuncAccel4::myFuncAccel4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din0(grp_fu_263_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din1(grp_fu_263_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->ce(grp_fu_263_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_263_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din0(grp_fu_268_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din1(grp_fu_268_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->ce(grp_fu_268_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_268_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din0(grp_fu_273_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din1(grp_fu_273_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->ce(grp_fu_273_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->dout(grp_fu_273_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din0(grp_fu_278_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din1(grp_fu_278_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->ce(grp_fu_278_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->dout(grp_fu_278_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->din0(grp_fu_283_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->din1(input_r_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->ce(grp_fu_283_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->dout(grp_fu_283_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->din0(grp_fu_289_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->din1(input_r_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->ce(grp_fu_289_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->dout(grp_fu_289_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->din0(grp_fu_295_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->din1(input_r_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->ce(grp_fu_295_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->dout(grp_fu_295_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->din0(grp_fu_301_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->din1(input_r_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->ce(grp_fu_301_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->dout(grp_fu_301_p2);
    myFuncAccel4_fptrunc_64ns_32_2_1_U9 = new myFuncAccel4_fptrunc_64ns_32_2_1<1,2,64,32>("myFuncAccel4_fptrunc_64ns_32_2_1_U9");
    myFuncAccel4_fptrunc_64ns_32_2_1_U9->clk(ap_clk);
    myFuncAccel4_fptrunc_64ns_32_2_1_U9->reset(ap_rst_n_inv);
    myFuncAccel4_fptrunc_64ns_32_2_1_U9->din0(grp_fu_319_p0);
    myFuncAccel4_fptrunc_64ns_32_2_1_U9->ce(grp_fu_319_ce);
    myFuncAccel4_fptrunc_64ns_32_2_1_U9->dout(grp_fu_319_p1);
    myFuncAccel4_fpext_32ns_64_2_1_U10 = new myFuncAccel4_fpext_32ns_64_2_1<1,2,32,64>("myFuncAccel4_fpext_32ns_64_2_1_U10");
    myFuncAccel4_fpext_32ns_64_2_1_U10->clk(ap_clk);
    myFuncAccel4_fpext_32ns_64_2_1_U10->reset(ap_rst_n_inv);
    myFuncAccel4_fpext_32ns_64_2_1_U10->din0(grp_fu_325_p0);
    myFuncAccel4_fpext_32ns_64_2_1_U10->ce(grp_fu_325_ce);
    myFuncAccel4_fpext_32ns_64_2_1_U10->dout(grp_fu_325_p1);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->reset(ap_rst_n_inv);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->din0(grp_fu_328_p0);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->ce(grp_fu_328_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->opcode(ap_var_for_const0);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11->dout(grp_fu_328_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln50_1_fu_585_p2);
    sensitive << ( zext_ln48_2_fu_525_p1 );
    sensitive << ( zext_ln50_fu_575_p1 );

    SC_METHOD(thread_add_ln50_2_fu_597_p2);
    sensitive << ( zext_ln50_2_fu_594_p1 );
    sensitive << ( zext_ln50_1_fu_591_p1 );

    SC_METHOD(thread_add_ln50_fu_579_p2);
    sensitive << ( zext_ln48_1_fu_476_p1 );
    sensitive << ( zext_ln48_fu_427_p1 );

    SC_METHOD(thread_and_ln50_1_fu_422_p2);
    sensitive << ( tmp_5_reg_926 );
    sensitive << ( and_ln50_fu_417_p2 );

    SC_METHOD(thread_and_ln50_2_fu_466_p2);
    sensitive << ( or_ln50_1_fu_377_p2 );
    sensitive << ( or_ln50_2_fu_460_p2 );

    SC_METHOD(thread_and_ln50_3_fu_471_p2);
    sensitive << ( tmp_8_reg_931 );
    sensitive << ( and_ln50_2_fu_466_p2 );

    SC_METHOD(thread_and_ln50_4_fu_515_p2);
    sensitive << ( or_ln50_1_fu_377_p2 );
    sensitive << ( or_ln50_3_fu_509_p2 );

    SC_METHOD(thread_and_ln50_5_fu_520_p2);
    sensitive << ( tmp_s_reg_936 );
    sensitive << ( and_ln50_4_fu_515_p2 );

    SC_METHOD(thread_and_ln50_6_fu_564_p2);
    sensitive << ( or_ln50_1_fu_377_p2 );
    sensitive << ( or_ln50_4_fu_558_p2 );

    SC_METHOD(thread_and_ln50_7_fu_569_p2);
    sensitive << ( grp_fu_328_p2 );
    sensitive << ( and_ln50_6_fu_564_p2 );

    SC_METHOD(thread_and_ln50_fu_417_p2);
    sensitive << ( or_ln50_1_fu_377_p2 );
    sensitive << ( or_ln50_fu_411_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state34_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state34_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_00001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_00001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state36_io );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state36_io );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_00001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_pp0_stage3_01001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state33_io );
    sensitive << ( ap_block_state37_io );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state33_io );
    sensitive << ( ap_block_state37_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state16_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state17_pp0_stage3_iter3);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter4);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state23_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state24_pp0_stage2_iter5);

    SC_METHOD(thread_ap_block_state25_pp0_stage3_iter5);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state27_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state28_pp0_stage2_iter6);

    SC_METHOD(thread_ap_block_state29_pp0_stage3_iter6);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( icmp_ln31_fu_351_p2 );

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state31_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state32_pp0_stage2_iter7);

    SC_METHOD(thread_ap_block_state33_io);
    sensitive << ( output_r_1_ack_in );
    sensitive << ( ap_predicate_op304_write_state33 );
    sensitive << ( ap_predicate_op305_write_state33 );

    SC_METHOD(thread_ap_block_state33_pp0_stage3_iter7);

    SC_METHOD(thread_ap_block_state34_io);
    sensitive << ( output_r_1_ack_in );
    sensitive << ( ap_predicate_op311_write_state34 );
    sensitive << ( ap_predicate_op312_write_state34 );

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state35_io);
    sensitive << ( output_r_1_ack_in );
    sensitive << ( ap_predicate_op318_write_state35 );
    sensitive << ( ap_predicate_op319_write_state35 );

    SC_METHOD(thread_ap_block_state35_pp0_stage1_iter8);

    SC_METHOD(thread_ap_block_state36_io);
    sensitive << ( output_r_1_ack_in );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );
    sensitive << ( ap_predicate_op321_write_state36 );
    sensitive << ( ap_predicate_op322_write_state36 );

    SC_METHOD(thread_ap_block_state36_pp0_stage2_iter8);

    SC_METHOD(thread_ap_block_state37_io);
    sensitive << ( output_r_1_ack_in );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state37_pp0_stage3_iter8);

    SC_METHOD(thread_ap_block_state38);
    sensitive << ( output_r_TREADY );
    sensitive << ( output_r_1_state );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);
    sensitive << ( input_r_0_vld_out );
    sensitive << ( icmp_ln31_reg_629 );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage3_iter1);

    SC_METHOD(thread_ap_condition_673);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln31_fu_351_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( output_r_TREADY );
    sensitive << ( output_r_1_state );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_232_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( i_0_reg_228 );
    sensitive << ( i_reg_633 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_phi_ln56_reg_239);

    SC_METHOD(thread_ap_predicate_op304_write_state33);
    sensitive << ( icmp_ln31_reg_629_pp0_iter7_reg );
    sensitive << ( icmp_ln52_reg_951 );

    SC_METHOD(thread_ap_predicate_op305_write_state33);
    sensitive << ( icmp_ln31_reg_629_pp0_iter7_reg );
    sensitive << ( icmp_ln52_reg_951 );

    SC_METHOD(thread_ap_predicate_op311_write_state34);
    sensitive << ( icmp_ln31_reg_629_pp0_iter7_reg );
    sensitive << ( icmp_ln52_reg_951 );

    SC_METHOD(thread_ap_predicate_op312_write_state34);
    sensitive << ( icmp_ln31_reg_629_pp0_iter7_reg );
    sensitive << ( icmp_ln52_reg_951 );

    SC_METHOD(thread_ap_predicate_op318_write_state35);
    sensitive << ( icmp_ln52_reg_951 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );

    SC_METHOD(thread_ap_predicate_op319_write_state35);
    sensitive << ( icmp_ln52_reg_951 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );

    SC_METHOD(thread_ap_predicate_op321_write_state36);
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );
    sensitive << ( icmp_ln52_reg_951_pp0_iter8_reg );

    SC_METHOD(thread_ap_predicate_op322_write_state36);
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );
    sensitive << ( icmp_ln52_reg_951_pp0_iter8_reg );

    SC_METHOD(thread_ap_ready);
    sensitive << ( output_r_TREADY );
    sensitive << ( output_r_1_state );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln50_1_fu_337_p1);
    sensitive << ( threshold );

    SC_METHOD(thread_bitcast_ln50_2_fu_431_p1);
    sensitive << ( tmp_3_1_3_reg_905_pp0_iter6_reg );

    SC_METHOD(thread_bitcast_ln50_3_fu_480_p1);
    sensitive << ( tmp_3_2_3_reg_912_pp0_iter6_reg );

    SC_METHOD(thread_bitcast_ln50_4_fu_529_p1);
    sensitive << ( tmp_3_3_3_reg_919_pp0_iter6_reg );

    SC_METHOD(thread_bitcast_ln50_fu_382_p1);
    sensitive << ( tmp_3_0_3_reg_898_pp0_iter6_reg );

    SC_METHOD(thread_grp_fu_263_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_263_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_reg_738 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_838 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_0_1_reg_858 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_0_2_reg_878 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_263_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_0_1_reg_778_pp0_iter2_reg );
    sensitive << ( tmp_2_0_2_reg_798_pp0_iter3_reg );
    sensitive << ( tmp_2_0_3_reg_818_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_268_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_268_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_1_reg_748 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_1_reg_843 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_1_1_reg_863 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_1_2_reg_883 );

    SC_METHOD(thread_grp_fu_268_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_1_1_reg_783_pp0_iter2_reg );
    sensitive << ( tmp_2_1_2_reg_803_pp0_iter3_reg );
    sensitive << ( tmp_2_1_3_reg_823_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_273_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_273_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_2_reg_758 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_2_reg_848 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_2_1_reg_868 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_2_2_reg_888 );

    SC_METHOD(thread_grp_fu_273_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_2_1_reg_788_pp0_iter2_reg );
    sensitive << ( tmp_2_2_2_reg_808_pp0_iter3_reg );
    sensitive << ( tmp_2_2_3_reg_828_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_278_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_278_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_3_reg_768 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_3_reg_853 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_3_1_reg_873 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_3_2_reg_893 );

    SC_METHOD(thread_grp_fu_278_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_3_1_reg_793_pp0_iter2_reg );
    sensitive << ( tmp_2_3_2_reg_813_pp0_iter3_reg );
    sensitive << ( tmp_2_3_3_reg_833_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_283_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_283_p0);
    sensitive << ( data0_0 );
    sensitive << ( data0_1 );
    sensitive << ( data0_2 );
    sensitive << ( data0_3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_289_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_289_p0);
    sensitive << ( data0_4 );
    sensitive << ( data0_5 );
    sensitive << ( data0_6 );
    sensitive << ( data0_7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_295_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_295_p0);
    sensitive << ( data0_8 );
    sensitive << ( data0_9 );
    sensitive << ( data0_10 );
    sensitive << ( data0_11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_301_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_301_p0);
    sensitive << ( data0_12 );
    sensitive << ( data0_13 );
    sensitive << ( data0_14 );
    sensitive << ( data0_15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_319_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_319_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_phi_reg_pp0_iter7_phi_ln56_reg_239 );
    sensitive << ( ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 );

    SC_METHOD(thread_grp_fu_325_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_325_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( tmp_3_1_3_reg_905_pp0_iter6_reg );
    sensitive << ( tmp_3_3_3_reg_919_pp0_iter6_reg );

    SC_METHOD(thread_grp_fu_328_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_328_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_3_0_3_reg_898 );
    sensitive << ( tmp_3_1_3_reg_905 );
    sensitive << ( tmp_3_2_3_reg_912 );
    sensitive << ( tmp_3_3_3_reg_919 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_i_fu_356_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_232_p4 );

    SC_METHOD(thread_icmp_ln31_fu_351_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_232_p4 );

    SC_METHOD(thread_icmp_ln50_1_fu_405_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( trunc_ln50_1_fu_395_p1 );

    SC_METHOD(thread_icmp_ln50_2_fu_371_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_362_p4 );

    SC_METHOD(thread_icmp_ln50_3_fu_345_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( trunc_ln50_fu_341_p1 );

    SC_METHOD(thread_icmp_ln50_4_fu_448_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( tmp_6_fu_434_p4 );

    SC_METHOD(thread_icmp_ln50_5_fu_454_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( trunc_ln50_2_fu_444_p1 );

    SC_METHOD(thread_icmp_ln50_6_fu_497_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( tmp_9_fu_483_p4 );

    SC_METHOD(thread_icmp_ln50_7_fu_503_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( trunc_ln50_3_fu_493_p1 );

    SC_METHOD(thread_icmp_ln50_8_fu_546_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( tmp_7_fu_532_p4 );

    SC_METHOD(thread_icmp_ln50_9_fu_552_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( trunc_ln50_4_fu_542_p1 );

    SC_METHOD(thread_icmp_ln50_fu_399_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter6_reg );
    sensitive << ( tmp_1_fu_385_p4 );

    SC_METHOD(thread_icmp_ln52_fu_603_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( add_ln50_2_fu_597_p2 );

    SC_METHOD(thread_input_r_0_ack_in);
    sensitive << ( input_r_0_state );

    SC_METHOD(thread_input_r_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_input_r_0_data_out);
    sensitive << ( input_r_0_payload_A );
    sensitive << ( input_r_0_payload_B );
    sensitive << ( input_r_0_sel );

    SC_METHOD(thread_input_r_0_load_A);
    sensitive << ( input_r_0_sel_wr );
    sensitive << ( input_r_0_state_cmp_full );

    SC_METHOD(thread_input_r_0_load_B);
    sensitive << ( input_r_0_sel_wr );
    sensitive << ( input_r_0_state_cmp_full );

    SC_METHOD(thread_input_r_0_sel);
    sensitive << ( input_r_0_sel_rd );

    SC_METHOD(thread_input_r_0_state_cmp_full);
    sensitive << ( input_r_0_state );

    SC_METHOD(thread_input_r_0_vld_in);
    sensitive << ( input_r_TVALID );

    SC_METHOD(thread_input_r_0_vld_out);
    sensitive << ( input_r_0_state );

    SC_METHOD(thread_input_r_TDATA_blk_n);
    sensitive << ( input_r_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln31_fu_351_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln31_reg_629 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_input_r_TREADY);
    sensitive << ( input_r_0_state );

    SC_METHOD(thread_or_ln50_1_fu_377_p2);
    sensitive << ( icmp_ln50_3_fu_345_p2 );
    sensitive << ( icmp_ln50_2_fu_371_p2 );

    SC_METHOD(thread_or_ln50_2_fu_460_p2);
    sensitive << ( icmp_ln50_5_fu_454_p2 );
    sensitive << ( icmp_ln50_4_fu_448_p2 );

    SC_METHOD(thread_or_ln50_3_fu_509_p2);
    sensitive << ( icmp_ln50_7_fu_503_p2 );
    sensitive << ( icmp_ln50_6_fu_497_p2 );

    SC_METHOD(thread_or_ln50_4_fu_558_p2);
    sensitive << ( icmp_ln50_9_fu_552_p2 );
    sensitive << ( icmp_ln50_8_fu_546_p2 );

    SC_METHOD(thread_or_ln50_fu_411_p2);
    sensitive << ( icmp_ln50_1_fu_405_p2 );
    sensitive << ( icmp_ln50_fu_399_p2 );

    SC_METHOD(thread_output_r_1_ack_in);
    sensitive << ( output_r_1_state );

    SC_METHOD(thread_output_r_1_ack_out);
    sensitive << ( output_r_TREADY );

    SC_METHOD(thread_output_r_1_data_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );
    sensitive << ( grp_fu_319_p1 );
    sensitive << ( reg_332 );
    sensitive << ( ap_predicate_op318_write_state35 );
    sensitive << ( ap_predicate_op319_write_state35 );
    sensitive << ( ap_predicate_op304_write_state33 );
    sensitive << ( ap_predicate_op305_write_state33 );
    sensitive << ( tmp_3_0_3_reg_898_pp0_iter6_reg );
    sensitive << ( tmp_3_2_3_reg_912_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_output_r_1_data_out);
    sensitive << ( output_r_1_payload_A );
    sensitive << ( output_r_1_payload_B );
    sensitive << ( output_r_1_sel );

    SC_METHOD(thread_output_r_1_load_A);
    sensitive << ( output_r_1_sel_wr );
    sensitive << ( output_r_1_state_cmp_full );

    SC_METHOD(thread_output_r_1_load_B);
    sensitive << ( output_r_1_sel_wr );
    sensitive << ( output_r_1_state_cmp_full );

    SC_METHOD(thread_output_r_1_sel);
    sensitive << ( output_r_1_sel_rd );

    SC_METHOD(thread_output_r_1_state_cmp_full);
    sensitive << ( output_r_1_state );

    SC_METHOD(thread_output_r_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_predicate_op318_write_state35 );
    sensitive << ( ap_predicate_op319_write_state35 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_predicate_op304_write_state33 );
    sensitive << ( ap_predicate_op305_write_state33 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_output_r_1_vld_out);
    sensitive << ( output_r_1_state );

    SC_METHOD(thread_output_r_TDATA);
    sensitive << ( output_r_1_data_out );

    SC_METHOD(thread_output_r_TDATA_blk_n);
    sensitive << ( output_r_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter7_reg );
    sensitive << ( icmp_ln52_reg_951 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln31_reg_629_pp0_iter8_reg );
    sensitive << ( icmp_ln52_reg_951_pp0_iter8_reg );

    SC_METHOD(thread_output_r_TVALID);
    sensitive << ( output_r_1_state );

    SC_METHOD(thread_tmp_1_fu_385_p4);
    sensitive << ( bitcast_ln50_fu_382_p1 );

    SC_METHOD(thread_tmp_4_fu_362_p4);
    sensitive << ( bitcast_ln50_1_fu_337_p1 );

    SC_METHOD(thread_tmp_6_fu_434_p4);
    sensitive << ( bitcast_ln50_2_fu_431_p1 );

    SC_METHOD(thread_tmp_7_fu_532_p4);
    sensitive << ( bitcast_ln50_4_fu_529_p1 );

    SC_METHOD(thread_tmp_9_fu_483_p4);
    sensitive << ( bitcast_ln50_3_fu_480_p1 );

    SC_METHOD(thread_trunc_ln50_1_fu_395_p1);
    sensitive << ( bitcast_ln50_fu_382_p1 );

    SC_METHOD(thread_trunc_ln50_2_fu_444_p1);
    sensitive << ( bitcast_ln50_2_fu_431_p1 );

    SC_METHOD(thread_trunc_ln50_3_fu_493_p1);
    sensitive << ( bitcast_ln50_3_fu_480_p1 );

    SC_METHOD(thread_trunc_ln50_4_fu_542_p1);
    sensitive << ( bitcast_ln50_4_fu_529_p1 );

    SC_METHOD(thread_trunc_ln50_fu_341_p1);
    sensitive << ( bitcast_ln50_1_fu_337_p1 );

    SC_METHOD(thread_zext_ln48_1_fu_476_p1);
    sensitive << ( and_ln50_3_fu_471_p2 );

    SC_METHOD(thread_zext_ln48_2_fu_525_p1);
    sensitive << ( and_ln50_5_fu_520_p2 );

    SC_METHOD(thread_zext_ln48_fu_427_p1);
    sensitive << ( and_ln50_1_fu_422_p2 );

    SC_METHOD(thread_zext_ln50_1_fu_591_p1);
    sensitive << ( add_ln50_reg_941 );

    SC_METHOD(thread_zext_ln50_2_fu_594_p1);
    sensitive << ( add_ln50_1_reg_946 );

    SC_METHOD(thread_zext_ln50_fu_575_p1);
    sensitive << ( and_ln50_7_fu_569_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( output_r_TREADY );
    sensitive << ( output_r_1_state );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln31_fu_351_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    input_r_0_sel_rd = SC_LOGIC_0;
    input_r_0_sel_wr = SC_LOGIC_0;
    input_r_0_state = "00";
    output_r_1_sel_rd = SC_LOGIC_0;
    output_r_1_sel_wr = SC_LOGIC_0;
    output_r_1_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myFuncAccel4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, size, "(port)size");
    sc_trace(mVcdFile, dim, "(port)dim");
    sc_trace(mVcdFile, threshold, "(port)threshold");
    sc_trace(mVcdFile, data0_0, "(port)data0_0");
    sc_trace(mVcdFile, data0_1, "(port)data0_1");
    sc_trace(mVcdFile, data0_2, "(port)data0_2");
    sc_trace(mVcdFile, data0_3, "(port)data0_3");
    sc_trace(mVcdFile, data0_4, "(port)data0_4");
    sc_trace(mVcdFile, data0_5, "(port)data0_5");
    sc_trace(mVcdFile, data0_6, "(port)data0_6");
    sc_trace(mVcdFile, data0_7, "(port)data0_7");
    sc_trace(mVcdFile, data0_8, "(port)data0_8");
    sc_trace(mVcdFile, data0_9, "(port)data0_9");
    sc_trace(mVcdFile, data0_10, "(port)data0_10");
    sc_trace(mVcdFile, data0_11, "(port)data0_11");
    sc_trace(mVcdFile, data0_12, "(port)data0_12");
    sc_trace(mVcdFile, data0_13, "(port)data0_13");
    sc_trace(mVcdFile, data0_14, "(port)data0_14");
    sc_trace(mVcdFile, data0_15, "(port)data0_15");
    sc_trace(mVcdFile, input_r_TDATA, "(port)input_r_TDATA");
    sc_trace(mVcdFile, input_r_TVALID, "(port)input_r_TVALID");
    sc_trace(mVcdFile, input_r_TREADY, "(port)input_r_TREADY");
    sc_trace(mVcdFile, output_r_TDATA, "(port)output_r_TDATA");
    sc_trace(mVcdFile, output_r_TVALID, "(port)output_r_TVALID");
    sc_trace(mVcdFile, output_r_TREADY, "(port)output_r_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_r_0_data_out, "input_r_0_data_out");
    sc_trace(mVcdFile, input_r_0_vld_in, "input_r_0_vld_in");
    sc_trace(mVcdFile, input_r_0_vld_out, "input_r_0_vld_out");
    sc_trace(mVcdFile, input_r_0_ack_in, "input_r_0_ack_in");
    sc_trace(mVcdFile, input_r_0_ack_out, "input_r_0_ack_out");
    sc_trace(mVcdFile, input_r_0_payload_A, "input_r_0_payload_A");
    sc_trace(mVcdFile, input_r_0_payload_B, "input_r_0_payload_B");
    sc_trace(mVcdFile, input_r_0_sel_rd, "input_r_0_sel_rd");
    sc_trace(mVcdFile, input_r_0_sel_wr, "input_r_0_sel_wr");
    sc_trace(mVcdFile, input_r_0_sel, "input_r_0_sel");
    sc_trace(mVcdFile, input_r_0_load_A, "input_r_0_load_A");
    sc_trace(mVcdFile, input_r_0_load_B, "input_r_0_load_B");
    sc_trace(mVcdFile, input_r_0_state, "input_r_0_state");
    sc_trace(mVcdFile, input_r_0_state_cmp_full, "input_r_0_state_cmp_full");
    sc_trace(mVcdFile, output_r_1_data_in, "output_r_1_data_in");
    sc_trace(mVcdFile, output_r_1_data_out, "output_r_1_data_out");
    sc_trace(mVcdFile, output_r_1_vld_in, "output_r_1_vld_in");
    sc_trace(mVcdFile, output_r_1_vld_out, "output_r_1_vld_out");
    sc_trace(mVcdFile, output_r_1_ack_in, "output_r_1_ack_in");
    sc_trace(mVcdFile, output_r_1_ack_out, "output_r_1_ack_out");
    sc_trace(mVcdFile, output_r_1_payload_A, "output_r_1_payload_A");
    sc_trace(mVcdFile, output_r_1_payload_B, "output_r_1_payload_B");
    sc_trace(mVcdFile, output_r_1_sel_rd, "output_r_1_sel_rd");
    sc_trace(mVcdFile, output_r_1_sel_wr, "output_r_1_sel_wr");
    sc_trace(mVcdFile, output_r_1_sel, "output_r_1_sel");
    sc_trace(mVcdFile, output_r_1_load_A, "output_r_1_load_A");
    sc_trace(mVcdFile, output_r_1_load_B, "output_r_1_load_B");
    sc_trace(mVcdFile, output_r_1_state, "output_r_1_state");
    sc_trace(mVcdFile, output_r_1_state_cmp_full, "output_r_1_state_cmp_full");
    sc_trace(mVcdFile, input_r_TDATA_blk_n, "input_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln31_fu_351_p2, "icmp_ln31_fu_351_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln31_reg_629, "icmp_ln31_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, output_r_TDATA_blk_n, "output_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter7_reg, "icmp_ln31_reg_629_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln52_reg_951, "icmp_ln52_reg_951");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter8_reg, "icmp_ln31_reg_629_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln52_reg_951_pp0_iter8_reg, "icmp_ln52_reg_951_pp0_iter8_reg");
    sc_trace(mVcdFile, i_0_reg_228, "i_0_reg_228");
    sc_trace(mVcdFile, grp_fu_319_p1, "grp_fu_319_p1");
    sc_trace(mVcdFile, reg_332, "reg_332");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter2, "ap_block_state10_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter3, "ap_block_state14_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter4, "ap_block_state18_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter5, "ap_block_state22_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter6, "ap_block_state26_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter7, "ap_block_state30_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter8, "ap_block_state34_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_predicate_op311_write_state34, "ap_predicate_op311_write_state34");
    sc_trace(mVcdFile, ap_predicate_op312_write_state34, "ap_predicate_op312_write_state34");
    sc_trace(mVcdFile, ap_block_state34_io, "ap_block_state34_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter2, "ap_block_state11_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter3, "ap_block_state15_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter4, "ap_block_state19_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage1_iter5, "ap_block_state23_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage1_iter6, "ap_block_state27_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage1_iter7, "ap_block_state31_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage1_iter8, "ap_block_state35_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_predicate_op318_write_state35, "ap_predicate_op318_write_state35");
    sc_trace(mVcdFile, ap_predicate_op319_write_state35, "ap_predicate_op319_write_state35");
    sc_trace(mVcdFile, ap_block_state35_io, "ap_block_state35_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, bitcast_ln50_1_fu_337_p1, "bitcast_ln50_1_fu_337_p1");
    sc_trace(mVcdFile, icmp_ln50_3_fu_345_p2, "icmp_ln50_3_fu_345_p2");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter1_reg, "icmp_ln31_reg_629_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter2_reg, "icmp_ln31_reg_629_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter3_reg, "icmp_ln31_reg_629_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter4_reg, "icmp_ln31_reg_629_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter5_reg, "icmp_ln31_reg_629_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln31_reg_629_pp0_iter6_reg, "icmp_ln31_reg_629_pp0_iter6_reg");
    sc_trace(mVcdFile, i_fu_356_p2, "i_fu_356_p2");
    sc_trace(mVcdFile, i_reg_633, "i_reg_633");
    sc_trace(mVcdFile, or_ln50_1_fu_377_p2, "or_ln50_1_fu_377_p2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage2_iter1, "ap_block_state8_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter2, "ap_block_state12_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage2_iter3, "ap_block_state16_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter4, "ap_block_state20_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage2_iter5, "ap_block_state24_pp0_stage2_iter5");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage2_iter6, "ap_block_state28_pp0_stage2_iter6");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage2_iter7, "ap_block_state32_pp0_stage2_iter7");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage2_iter8, "ap_block_state36_pp0_stage2_iter8");
    sc_trace(mVcdFile, ap_predicate_op321_write_state36, "ap_predicate_op321_write_state36");
    sc_trace(mVcdFile, ap_predicate_op322_write_state36, "ap_predicate_op322_write_state36");
    sc_trace(mVcdFile, ap_block_state36_io, "ap_block_state36_io");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage3_iter1, "ap_block_state9_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter2, "ap_block_state13_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage3_iter3, "ap_block_state17_pp0_stage3_iter3");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter4, "ap_block_state21_pp0_stage3_iter4");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage3_iter5, "ap_block_state25_pp0_stage3_iter5");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage3_iter6, "ap_block_state29_pp0_stage3_iter6");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage3_iter7, "ap_block_state33_pp0_stage3_iter7");
    sc_trace(mVcdFile, ap_predicate_op304_write_state33, "ap_predicate_op304_write_state33");
    sc_trace(mVcdFile, ap_predicate_op305_write_state33, "ap_predicate_op305_write_state33");
    sc_trace(mVcdFile, ap_block_state33_io, "ap_block_state33_io");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage3_iter8, "ap_block_state37_pp0_stage3_iter8");
    sc_trace(mVcdFile, ap_block_state37_io, "ap_block_state37_io");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, grp_fu_283_p2, "grp_fu_283_p2");
    sc_trace(mVcdFile, tmp_2_reg_738, "tmp_2_reg_738");
    sc_trace(mVcdFile, grp_fu_289_p2, "grp_fu_289_p2");
    sc_trace(mVcdFile, tmp_2_1_reg_748, "tmp_2_1_reg_748");
    sc_trace(mVcdFile, grp_fu_295_p2, "grp_fu_295_p2");
    sc_trace(mVcdFile, tmp_2_2_reg_758, "tmp_2_2_reg_758");
    sc_trace(mVcdFile, grp_fu_301_p2, "grp_fu_301_p2");
    sc_trace(mVcdFile, tmp_2_3_reg_768, "tmp_2_3_reg_768");
    sc_trace(mVcdFile, tmp_2_0_1_reg_778, "tmp_2_0_1_reg_778");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_2_0_1_reg_778_pp0_iter2_reg, "tmp_2_0_1_reg_778_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_1_1_reg_783, "tmp_2_1_1_reg_783");
    sc_trace(mVcdFile, tmp_2_1_1_reg_783_pp0_iter2_reg, "tmp_2_1_1_reg_783_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_2_1_reg_788, "tmp_2_2_1_reg_788");
    sc_trace(mVcdFile, tmp_2_2_1_reg_788_pp0_iter2_reg, "tmp_2_2_1_reg_788_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_3_1_reg_793, "tmp_2_3_1_reg_793");
    sc_trace(mVcdFile, tmp_2_3_1_reg_793_pp0_iter2_reg, "tmp_2_3_1_reg_793_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_0_2_reg_798, "tmp_2_0_2_reg_798");
    sc_trace(mVcdFile, tmp_2_0_2_reg_798_pp0_iter2_reg, "tmp_2_0_2_reg_798_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_0_2_reg_798_pp0_iter3_reg, "tmp_2_0_2_reg_798_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_2_reg_803, "tmp_2_1_2_reg_803");
    sc_trace(mVcdFile, tmp_2_1_2_reg_803_pp0_iter2_reg, "tmp_2_1_2_reg_803_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_1_2_reg_803_pp0_iter3_reg, "tmp_2_1_2_reg_803_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_2_reg_808, "tmp_2_2_2_reg_808");
    sc_trace(mVcdFile, tmp_2_2_2_reg_808_pp0_iter2_reg, "tmp_2_2_2_reg_808_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_2_2_reg_808_pp0_iter3_reg, "tmp_2_2_2_reg_808_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_2_reg_813, "tmp_2_3_2_reg_813");
    sc_trace(mVcdFile, tmp_2_3_2_reg_813_pp0_iter2_reg, "tmp_2_3_2_reg_813_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_3_2_reg_813_pp0_iter3_reg, "tmp_2_3_2_reg_813_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_818, "tmp_2_0_3_reg_818");
    sc_trace(mVcdFile, tmp_2_0_3_reg_818_pp0_iter2_reg, "tmp_2_0_3_reg_818_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_818_pp0_iter3_reg, "tmp_2_0_3_reg_818_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_818_pp0_iter4_reg, "tmp_2_0_3_reg_818_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_823, "tmp_2_1_3_reg_823");
    sc_trace(mVcdFile, tmp_2_1_3_reg_823_pp0_iter2_reg, "tmp_2_1_3_reg_823_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_823_pp0_iter3_reg, "tmp_2_1_3_reg_823_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_823_pp0_iter4_reg, "tmp_2_1_3_reg_823_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_828, "tmp_2_2_3_reg_828");
    sc_trace(mVcdFile, tmp_2_2_3_reg_828_pp0_iter2_reg, "tmp_2_2_3_reg_828_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_828_pp0_iter3_reg, "tmp_2_2_3_reg_828_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_828_pp0_iter4_reg, "tmp_2_2_3_reg_828_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_833, "tmp_2_3_3_reg_833");
    sc_trace(mVcdFile, tmp_2_3_3_reg_833_pp0_iter2_reg, "tmp_2_3_3_reg_833_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_833_pp0_iter3_reg, "tmp_2_3_3_reg_833_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_833_pp0_iter4_reg, "tmp_2_3_3_reg_833_pp0_iter4_reg");
    sc_trace(mVcdFile, grp_fu_263_p2, "grp_fu_263_p2");
    sc_trace(mVcdFile, tmp_3_reg_838, "tmp_3_reg_838");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_268_p2, "grp_fu_268_p2");
    sc_trace(mVcdFile, tmp_3_1_reg_843, "tmp_3_1_reg_843");
    sc_trace(mVcdFile, grp_fu_273_p2, "grp_fu_273_p2");
    sc_trace(mVcdFile, tmp_3_2_reg_848, "tmp_3_2_reg_848");
    sc_trace(mVcdFile, grp_fu_278_p2, "grp_fu_278_p2");
    sc_trace(mVcdFile, tmp_3_3_reg_853, "tmp_3_3_reg_853");
    sc_trace(mVcdFile, tmp_3_0_1_reg_858, "tmp_3_0_1_reg_858");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_3_1_1_reg_863, "tmp_3_1_1_reg_863");
    sc_trace(mVcdFile, tmp_3_2_1_reg_868, "tmp_3_2_1_reg_868");
    sc_trace(mVcdFile, tmp_3_3_1_reg_873, "tmp_3_3_1_reg_873");
    sc_trace(mVcdFile, tmp_3_0_2_reg_878, "tmp_3_0_2_reg_878");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, tmp_3_1_2_reg_883, "tmp_3_1_2_reg_883");
    sc_trace(mVcdFile, tmp_3_2_2_reg_888, "tmp_3_2_2_reg_888");
    sc_trace(mVcdFile, tmp_3_3_2_reg_893, "tmp_3_3_2_reg_893");
    sc_trace(mVcdFile, tmp_3_0_3_reg_898, "tmp_3_0_3_reg_898");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, tmp_3_0_3_reg_898_pp0_iter6_reg, "tmp_3_0_3_reg_898_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_1_3_reg_905, "tmp_3_1_3_reg_905");
    sc_trace(mVcdFile, tmp_3_1_3_reg_905_pp0_iter6_reg, "tmp_3_1_3_reg_905_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_2_3_reg_912, "tmp_3_2_3_reg_912");
    sc_trace(mVcdFile, tmp_3_2_3_reg_912_pp0_iter6_reg, "tmp_3_2_3_reg_912_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_2_3_reg_912_pp0_iter7_reg, "tmp_3_2_3_reg_912_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_3_3_3_reg_919, "tmp_3_3_3_reg_919");
    sc_trace(mVcdFile, tmp_3_3_3_reg_919_pp0_iter6_reg, "tmp_3_3_3_reg_919_pp0_iter6_reg");
    sc_trace(mVcdFile, grp_fu_328_p2, "grp_fu_328_p2");
    sc_trace(mVcdFile, tmp_5_reg_926, "tmp_5_reg_926");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, tmp_8_reg_931, "tmp_8_reg_931");
    sc_trace(mVcdFile, tmp_s_reg_936, "tmp_s_reg_936");
    sc_trace(mVcdFile, add_ln50_fu_579_p2, "add_ln50_fu_579_p2");
    sc_trace(mVcdFile, add_ln50_reg_941, "add_ln50_reg_941");
    sc_trace(mVcdFile, add_ln50_1_fu_585_p2, "add_ln50_1_fu_585_p2");
    sc_trace(mVcdFile, add_ln50_1_reg_946, "add_ln50_1_reg_946");
    sc_trace(mVcdFile, icmp_ln52_fu_603_p2, "icmp_ln52_fu_603_p2");
    sc_trace(mVcdFile, grp_fu_325_p1, "grp_fu_325_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_232_p4, "ap_phi_mux_i_0_phi_fu_232_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_phi_ln56_reg_239, "ap_phi_reg_pp0_iter0_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_phi_ln56_reg_239, "ap_phi_reg_pp0_iter1_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_phi_ln56_reg_239, "ap_phi_reg_pp0_iter2_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_phi_ln56_reg_239, "ap_phi_reg_pp0_iter3_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter4_phi_ln56_reg_239, "ap_phi_reg_pp0_iter4_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter5_phi_ln56_reg_239, "ap_phi_reg_pp0_iter5_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter6_phi_ln56_reg_239, "ap_phi_reg_pp0_iter6_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter7_phi_ln56_reg_239, "ap_phi_reg_pp0_iter7_phi_ln56_reg_239");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251, "ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251");
    sc_trace(mVcdFile, ap_block_pp0_stage3_01001, "ap_block_pp0_stage3_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, grp_fu_263_p0, "grp_fu_263_p0");
    sc_trace(mVcdFile, grp_fu_263_p1, "grp_fu_263_p1");
    sc_trace(mVcdFile, grp_fu_268_p0, "grp_fu_268_p0");
    sc_trace(mVcdFile, grp_fu_268_p1, "grp_fu_268_p1");
    sc_trace(mVcdFile, grp_fu_273_p0, "grp_fu_273_p0");
    sc_trace(mVcdFile, grp_fu_273_p1, "grp_fu_273_p1");
    sc_trace(mVcdFile, grp_fu_278_p0, "grp_fu_278_p0");
    sc_trace(mVcdFile, grp_fu_278_p1, "grp_fu_278_p1");
    sc_trace(mVcdFile, grp_fu_283_p0, "grp_fu_283_p0");
    sc_trace(mVcdFile, grp_fu_289_p0, "grp_fu_289_p0");
    sc_trace(mVcdFile, grp_fu_295_p0, "grp_fu_295_p0");
    sc_trace(mVcdFile, grp_fu_301_p0, "grp_fu_301_p0");
    sc_trace(mVcdFile, grp_fu_319_p0, "grp_fu_319_p0");
    sc_trace(mVcdFile, grp_fu_325_p0, "grp_fu_325_p0");
    sc_trace(mVcdFile, grp_fu_328_p0, "grp_fu_328_p0");
    sc_trace(mVcdFile, trunc_ln50_fu_341_p1, "trunc_ln50_fu_341_p1");
    sc_trace(mVcdFile, tmp_4_fu_362_p4, "tmp_4_fu_362_p4");
    sc_trace(mVcdFile, icmp_ln50_2_fu_371_p2, "icmp_ln50_2_fu_371_p2");
    sc_trace(mVcdFile, bitcast_ln50_fu_382_p1, "bitcast_ln50_fu_382_p1");
    sc_trace(mVcdFile, tmp_1_fu_385_p4, "tmp_1_fu_385_p4");
    sc_trace(mVcdFile, trunc_ln50_1_fu_395_p1, "trunc_ln50_1_fu_395_p1");
    sc_trace(mVcdFile, icmp_ln50_1_fu_405_p2, "icmp_ln50_1_fu_405_p2");
    sc_trace(mVcdFile, icmp_ln50_fu_399_p2, "icmp_ln50_fu_399_p2");
    sc_trace(mVcdFile, or_ln50_fu_411_p2, "or_ln50_fu_411_p2");
    sc_trace(mVcdFile, and_ln50_fu_417_p2, "and_ln50_fu_417_p2");
    sc_trace(mVcdFile, and_ln50_1_fu_422_p2, "and_ln50_1_fu_422_p2");
    sc_trace(mVcdFile, bitcast_ln50_2_fu_431_p1, "bitcast_ln50_2_fu_431_p1");
    sc_trace(mVcdFile, tmp_6_fu_434_p4, "tmp_6_fu_434_p4");
    sc_trace(mVcdFile, trunc_ln50_2_fu_444_p1, "trunc_ln50_2_fu_444_p1");
    sc_trace(mVcdFile, icmp_ln50_5_fu_454_p2, "icmp_ln50_5_fu_454_p2");
    sc_trace(mVcdFile, icmp_ln50_4_fu_448_p2, "icmp_ln50_4_fu_448_p2");
    sc_trace(mVcdFile, or_ln50_2_fu_460_p2, "or_ln50_2_fu_460_p2");
    sc_trace(mVcdFile, and_ln50_2_fu_466_p2, "and_ln50_2_fu_466_p2");
    sc_trace(mVcdFile, and_ln50_3_fu_471_p2, "and_ln50_3_fu_471_p2");
    sc_trace(mVcdFile, bitcast_ln50_3_fu_480_p1, "bitcast_ln50_3_fu_480_p1");
    sc_trace(mVcdFile, tmp_9_fu_483_p4, "tmp_9_fu_483_p4");
    sc_trace(mVcdFile, trunc_ln50_3_fu_493_p1, "trunc_ln50_3_fu_493_p1");
    sc_trace(mVcdFile, icmp_ln50_7_fu_503_p2, "icmp_ln50_7_fu_503_p2");
    sc_trace(mVcdFile, icmp_ln50_6_fu_497_p2, "icmp_ln50_6_fu_497_p2");
    sc_trace(mVcdFile, or_ln50_3_fu_509_p2, "or_ln50_3_fu_509_p2");
    sc_trace(mVcdFile, and_ln50_4_fu_515_p2, "and_ln50_4_fu_515_p2");
    sc_trace(mVcdFile, and_ln50_5_fu_520_p2, "and_ln50_5_fu_520_p2");
    sc_trace(mVcdFile, bitcast_ln50_4_fu_529_p1, "bitcast_ln50_4_fu_529_p1");
    sc_trace(mVcdFile, tmp_7_fu_532_p4, "tmp_7_fu_532_p4");
    sc_trace(mVcdFile, trunc_ln50_4_fu_542_p1, "trunc_ln50_4_fu_542_p1");
    sc_trace(mVcdFile, icmp_ln50_9_fu_552_p2, "icmp_ln50_9_fu_552_p2");
    sc_trace(mVcdFile, icmp_ln50_8_fu_546_p2, "icmp_ln50_8_fu_546_p2");
    sc_trace(mVcdFile, or_ln50_4_fu_558_p2, "or_ln50_4_fu_558_p2");
    sc_trace(mVcdFile, and_ln50_6_fu_564_p2, "and_ln50_6_fu_564_p2");
    sc_trace(mVcdFile, and_ln50_7_fu_569_p2, "and_ln50_7_fu_569_p2");
    sc_trace(mVcdFile, zext_ln48_1_fu_476_p1, "zext_ln48_1_fu_476_p1");
    sc_trace(mVcdFile, zext_ln48_fu_427_p1, "zext_ln48_fu_427_p1");
    sc_trace(mVcdFile, zext_ln48_2_fu_525_p1, "zext_ln48_2_fu_525_p1");
    sc_trace(mVcdFile, zext_ln50_fu_575_p1, "zext_ln50_fu_575_p1");
    sc_trace(mVcdFile, zext_ln50_2_fu_594_p1, "zext_ln50_2_fu_594_p1");
    sc_trace(mVcdFile, zext_ln50_1_fu_591_p1, "zext_ln50_1_fu_591_p1");
    sc_trace(mVcdFile, add_ln50_2_fu_597_p2, "add_ln50_2_fu_597_p2");
    sc_trace(mVcdFile, grp_fu_263_ce, "grp_fu_263_ce");
    sc_trace(mVcdFile, grp_fu_268_ce, "grp_fu_268_ce");
    sc_trace(mVcdFile, grp_fu_273_ce, "grp_fu_273_ce");
    sc_trace(mVcdFile, grp_fu_278_ce, "grp_fu_278_ce");
    sc_trace(mVcdFile, grp_fu_283_ce, "grp_fu_283_ce");
    sc_trace(mVcdFile, grp_fu_289_ce, "grp_fu_289_ce");
    sc_trace(mVcdFile, grp_fu_295_ce, "grp_fu_295_ce");
    sc_trace(mVcdFile, grp_fu_301_ce, "grp_fu_301_ce");
    sc_trace(mVcdFile, grp_fu_319_ce, "grp_fu_319_ce");
    sc_trace(mVcdFile, grp_fu_325_ce, "grp_fu_325_ce");
    sc_trace(mVcdFile, grp_fu_328_ce, "grp_fu_328_ce");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_00001, "ap_block_pp0_stage1_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_00001, "ap_block_pp0_stage2_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_00001, "ap_block_pp0_stage3_00001");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_block_state38, "ap_block_state38");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_673, "ap_condition_673");
#endif

    }
    mHdltvinHandle.open("myFuncAccel4.hdltvin.dat");
    mHdltvoutHandle.open("myFuncAccel4.hdltvout.dat");
}

myFuncAccel4::~myFuncAccel4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8;
    delete myFuncAccel4_fptrunc_64ns_32_2_1_U9;
    delete myFuncAccel4_fpext_32ns_64_2_1_U10;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11;
}

void myFuncAccel4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void myFuncAccel4::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter7_phi_ln56_reg_239 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter7_phi_ln56_reg_239 = grp_fu_325_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        ap_phi_reg_pp0_iter7_phi_ln56_reg_239 = ap_phi_reg_pp0_iter6_phi_ln56_reg_239.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_673.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read()))) {
            ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 = ap_const_lv64_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()))) {
            ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 = grp_fu_325_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_228 = i_reg_633.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_228 = ap_const_lv32_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_r_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_vld_out.read()))) {
            input_r_0_sel_rd =  (sc_logic) (~input_r_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_r_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_ack_in.read()))) {
            input_r_0_sel_wr =  (sc_logic) (~input_r_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_r_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_2)))) {
            input_r_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_1)))) {
            input_r_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_r_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_ack_out.read()))))) {
            input_r_0_state = ap_const_lv2_3;
        } else {
            input_r_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_r_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_vld_out.read()))) {
            output_r_1_sel_rd =  (sc_logic) (~output_r_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_r_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_ack_in.read()))) {
            output_r_1_sel_wr =  (sc_logic) (~output_r_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_r_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_r_1_state.read())))) {
            output_r_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_r_1_state.read())))) {
            output_r_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_r_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_r_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_ack_out.read()))))) {
            output_r_1_state = ap_const_lv2_3;
        } else {
            output_r_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter6_reg.read()))) {
        add_ln50_1_reg_946 = add_ln50_1_fu_585_p2.read();
        add_ln50_reg_941 = add_ln50_fu_579_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251.read();
        ap_phi_reg_pp0_iter1_phi_ln56_reg_239 = ap_phi_reg_pp0_iter0_phi_ln56_reg_239.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251.read();
        ap_phi_reg_pp0_iter2_phi_ln56_reg_239 = ap_phi_reg_pp0_iter1_phi_ln56_reg_239.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251.read();
        ap_phi_reg_pp0_iter3_phi_ln56_reg_239 = ap_phi_reg_pp0_iter2_phi_ln56_reg_239.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251.read();
        ap_phi_reg_pp0_iter4_phi_ln56_reg_239 = ap_phi_reg_pp0_iter3_phi_ln56_reg_239.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251.read();
        ap_phi_reg_pp0_iter5_phi_ln56_reg_239 = ap_phi_reg_pp0_iter4_phi_ln56_reg_239.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251.read();
        ap_phi_reg_pp0_iter6_phi_ln56_reg_239 = ap_phi_reg_pp0_iter5_phi_ln56_reg_239.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251 = ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_633 = i_fu_356_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln31_reg_629 = icmp_ln31_fu_351_p2.read();
        icmp_ln31_reg_629_pp0_iter1_reg = icmp_ln31_reg_629.read();
        icmp_ln31_reg_629_pp0_iter2_reg = icmp_ln31_reg_629_pp0_iter1_reg.read();
        icmp_ln31_reg_629_pp0_iter3_reg = icmp_ln31_reg_629_pp0_iter2_reg.read();
        icmp_ln31_reg_629_pp0_iter4_reg = icmp_ln31_reg_629_pp0_iter3_reg.read();
        icmp_ln31_reg_629_pp0_iter5_reg = icmp_ln31_reg_629_pp0_iter4_reg.read();
        icmp_ln31_reg_629_pp0_iter6_reg = icmp_ln31_reg_629_pp0_iter5_reg.read();
        icmp_ln31_reg_629_pp0_iter7_reg = icmp_ln31_reg_629_pp0_iter6_reg.read();
        icmp_ln31_reg_629_pp0_iter8_reg = icmp_ln31_reg_629_pp0_iter7_reg.read();
        tmp_2_0_1_reg_778_pp0_iter2_reg = tmp_2_0_1_reg_778.read();
        tmp_2_1_1_reg_783_pp0_iter2_reg = tmp_2_1_1_reg_783.read();
        tmp_2_2_1_reg_788_pp0_iter2_reg = tmp_2_2_1_reg_788.read();
        tmp_2_3_1_reg_793_pp0_iter2_reg = tmp_2_3_1_reg_793.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        icmp_ln52_reg_951 = icmp_ln52_fu_603_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        icmp_ln52_reg_951_pp0_iter8_reg = icmp_ln52_reg_951.read();
        tmp_2_0_2_reg_798_pp0_iter2_reg = tmp_2_0_2_reg_798.read();
        tmp_2_0_2_reg_798_pp0_iter3_reg = tmp_2_0_2_reg_798_pp0_iter2_reg.read();
        tmp_2_1_2_reg_803_pp0_iter2_reg = tmp_2_1_2_reg_803.read();
        tmp_2_1_2_reg_803_pp0_iter3_reg = tmp_2_1_2_reg_803_pp0_iter2_reg.read();
        tmp_2_2_2_reg_808_pp0_iter2_reg = tmp_2_2_2_reg_808.read();
        tmp_2_2_2_reg_808_pp0_iter3_reg = tmp_2_2_2_reg_808_pp0_iter2_reg.read();
        tmp_2_3_2_reg_813_pp0_iter2_reg = tmp_2_3_2_reg_813.read();
        tmp_2_3_2_reg_813_pp0_iter3_reg = tmp_2_3_2_reg_813_pp0_iter2_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_load_A.read())) {
        input_r_0_payload_A = input_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_load_B.read())) {
        input_r_0_payload_B = input_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_load_A.read())) {
        output_r_1_payload_A = output_r_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_load_B.read())) {
        output_r_1_payload_B = output_r_1_data_in.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        reg_332 = grp_fu_319_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_2_0_1_reg_778 = grp_fu_283_p2.read();
        tmp_2_1_1_reg_783 = grp_fu_289_p2.read();
        tmp_2_2_1_reg_788 = grp_fu_295_p2.read();
        tmp_2_3_1_reg_793 = grp_fu_301_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter1_reg.read()))) {
        tmp_2_0_2_reg_798 = grp_fu_283_p2.read();
        tmp_2_1_2_reg_803 = grp_fu_289_p2.read();
        tmp_2_2_2_reg_808 = grp_fu_295_p2.read();
        tmp_2_3_2_reg_813 = grp_fu_301_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter1_reg.read()))) {
        tmp_2_0_3_reg_818 = grp_fu_283_p2.read();
        tmp_2_1_3_reg_823 = grp_fu_289_p2.read();
        tmp_2_2_3_reg_828 = grp_fu_295_p2.read();
        tmp_2_3_3_reg_833 = grp_fu_301_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_2_0_3_reg_818_pp0_iter2_reg = tmp_2_0_3_reg_818.read();
        tmp_2_0_3_reg_818_pp0_iter3_reg = tmp_2_0_3_reg_818_pp0_iter2_reg.read();
        tmp_2_0_3_reg_818_pp0_iter4_reg = tmp_2_0_3_reg_818_pp0_iter3_reg.read();
        tmp_2_1_3_reg_823_pp0_iter2_reg = tmp_2_1_3_reg_823.read();
        tmp_2_1_3_reg_823_pp0_iter3_reg = tmp_2_1_3_reg_823_pp0_iter2_reg.read();
        tmp_2_1_3_reg_823_pp0_iter4_reg = tmp_2_1_3_reg_823_pp0_iter3_reg.read();
        tmp_2_2_3_reg_828_pp0_iter2_reg = tmp_2_2_3_reg_828.read();
        tmp_2_2_3_reg_828_pp0_iter3_reg = tmp_2_2_3_reg_828_pp0_iter2_reg.read();
        tmp_2_2_3_reg_828_pp0_iter4_reg = tmp_2_2_3_reg_828_pp0_iter3_reg.read();
        tmp_2_3_3_reg_833_pp0_iter2_reg = tmp_2_3_3_reg_833.read();
        tmp_2_3_3_reg_833_pp0_iter3_reg = tmp_2_3_3_reg_833_pp0_iter2_reg.read();
        tmp_2_3_3_reg_833_pp0_iter4_reg = tmp_2_3_3_reg_833_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_2_1_reg_748 = grp_fu_289_p2.read();
        tmp_2_2_reg_758 = grp_fu_295_p2.read();
        tmp_2_3_reg_768 = grp_fu_301_p2.read();
        tmp_2_reg_738 = grp_fu_283_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter3_reg.read()))) {
        tmp_3_0_1_reg_858 = grp_fu_263_p2.read();
        tmp_3_1_1_reg_863 = grp_fu_268_p2.read();
        tmp_3_2_1_reg_868 = grp_fu_273_p2.read();
        tmp_3_3_1_reg_873 = grp_fu_278_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter4_reg.read()))) {
        tmp_3_0_2_reg_878 = grp_fu_263_p2.read();
        tmp_3_1_2_reg_883 = grp_fu_268_p2.read();
        tmp_3_2_2_reg_888 = grp_fu_273_p2.read();
        tmp_3_3_2_reg_893 = grp_fu_278_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter5_reg.read()))) {
        tmp_3_0_3_reg_898 = grp_fu_263_p2.read();
        tmp_3_1_3_reg_905 = grp_fu_268_p2.read();
        tmp_3_2_3_reg_912 = grp_fu_273_p2.read();
        tmp_3_3_3_reg_919 = grp_fu_278_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_3_0_3_reg_898_pp0_iter6_reg = tmp_3_0_3_reg_898.read();
        tmp_3_1_3_reg_905_pp0_iter6_reg = tmp_3_1_3_reg_905.read();
        tmp_3_2_3_reg_912_pp0_iter6_reg = tmp_3_2_3_reg_912.read();
        tmp_3_2_3_reg_912_pp0_iter7_reg = tmp_3_2_3_reg_912_pp0_iter6_reg.read();
        tmp_3_3_3_reg_919_pp0_iter6_reg = tmp_3_3_3_reg_919.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        tmp_3_1_reg_843 = grp_fu_268_p2.read();
        tmp_3_2_reg_848 = grp_fu_273_p2.read();
        tmp_3_3_reg_853 = grp_fu_278_p2.read();
        tmp_3_reg_838 = grp_fu_263_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter6_reg.read()))) {
        tmp_5_reg_926 = grp_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter6_reg.read()))) {
        tmp_8_reg_931 = grp_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter6_reg.read()))) {
        tmp_s_reg_936 = grp_fu_328_p2.read();
    }
}

void myFuncAccel4::thread_add_ln50_1_fu_585_p2() {
    add_ln50_1_fu_585_p2 = (!zext_ln48_2_fu_525_p1.read().is_01() || !zext_ln50_fu_575_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln48_2_fu_525_p1.read()) + sc_biguint<2>(zext_ln50_fu_575_p1.read()));
}

void myFuncAccel4::thread_add_ln50_2_fu_597_p2() {
    add_ln50_2_fu_597_p2 = (!zext_ln50_2_fu_594_p1.read().is_01() || !zext_ln50_1_fu_591_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln50_2_fu_594_p1.read()) + sc_biguint<3>(zext_ln50_1_fu_591_p1.read()));
}

void myFuncAccel4::thread_add_ln50_fu_579_p2() {
    add_ln50_fu_579_p2 = (!zext_ln48_1_fu_476_p1.read().is_01() || !zext_ln48_fu_427_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln48_1_fu_476_p1.read()) + sc_biguint<2>(zext_ln48_fu_427_p1.read()));
}

void myFuncAccel4::thread_and_ln50_1_fu_422_p2() {
    and_ln50_1_fu_422_p2 = (and_ln50_fu_417_p2.read() & tmp_5_reg_926.read());
}

void myFuncAccel4::thread_and_ln50_2_fu_466_p2() {
    and_ln50_2_fu_466_p2 = (or_ln50_2_fu_460_p2.read() & or_ln50_1_fu_377_p2.read());
}

void myFuncAccel4::thread_and_ln50_3_fu_471_p2() {
    and_ln50_3_fu_471_p2 = (and_ln50_2_fu_466_p2.read() & tmp_8_reg_931.read());
}

void myFuncAccel4::thread_and_ln50_4_fu_515_p2() {
    and_ln50_4_fu_515_p2 = (or_ln50_3_fu_509_p2.read() & or_ln50_1_fu_377_p2.read());
}

void myFuncAccel4::thread_and_ln50_5_fu_520_p2() {
    and_ln50_5_fu_520_p2 = (and_ln50_4_fu_515_p2.read() & tmp_s_reg_936.read());
}

void myFuncAccel4::thread_and_ln50_6_fu_564_p2() {
    and_ln50_6_fu_564_p2 = (or_ln50_4_fu_558_p2.read() & or_ln50_1_fu_377_p2.read());
}

void myFuncAccel4::thread_and_ln50_7_fu_569_p2() {
    and_ln50_7_fu_569_p2 = (and_ln50_6_fu_564_p2.read() & grp_fu_328_p2.read());
}

void myFuncAccel4::thread_and_ln50_fu_417_p2() {
    and_ln50_fu_417_p2 = (or_ln50_fu_411_p2.read() & or_ln50_1_fu_377_p2.read());
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void myFuncAccel4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myFuncAccel4::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[5];
}

void myFuncAccel4::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state34_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state34_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage1_00001() {
    ap_block_pp0_stage1_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage2_00001() {
    ap_block_pp0_stage2_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state36_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state36_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage3_00001() {
    ap_block_pp0_stage3_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_01001() {
    ap_block_pp0_stage3_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state33_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state37_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state33_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state37_io.read())));
}

void myFuncAccel4::thread_ap_block_state10_pp0_stage0_iter2() {
    ap_block_state10_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state11_pp0_stage1_iter2() {
    ap_block_state11_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state12_pp0_stage2_iter2() {
    ap_block_state12_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state13_pp0_stage3_iter2() {
    ap_block_state13_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state14_pp0_stage0_iter3() {
    ap_block_state14_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state15_pp0_stage1_iter3() {
    ap_block_state15_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state16_pp0_stage2_iter3() {
    ap_block_state16_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state17_pp0_stage3_iter3() {
    ap_block_state17_pp0_stage3_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state18_pp0_stage0_iter4() {
    ap_block_state18_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state19_pp0_stage1_iter4() {
    ap_block_state19_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state20_pp0_stage2_iter4() {
    ap_block_state20_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state21_pp0_stage3_iter4() {
    ap_block_state21_pp0_stage3_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state22_pp0_stage0_iter5() {
    ap_block_state22_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state23_pp0_stage1_iter5() {
    ap_block_state23_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state24_pp0_stage2_iter5() {
    ap_block_state24_pp0_stage2_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state25_pp0_stage3_iter5() {
    ap_block_state25_pp0_stage3_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state26_pp0_stage0_iter6() {
    ap_block_state26_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state27_pp0_stage1_iter6() {
    ap_block_state27_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state28_pp0_stage2_iter6() {
    ap_block_state28_pp0_stage2_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state29_pp0_stage3_iter6() {
    ap_block_state29_pp0_stage3_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state30_pp0_stage0_iter7() {
    ap_block_state30_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state31_pp0_stage1_iter7() {
    ap_block_state31_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state32_pp0_stage2_iter7() {
    ap_block_state32_pp0_stage2_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state33_io() {
    ap_block_state33_io = ((esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op304_write_state33.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op305_write_state33.read())));
}

void myFuncAccel4::thread_ap_block_state33_pp0_stage3_iter7() {
    ap_block_state33_pp0_stage3_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state34_io() {
    ap_block_state34_io = (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op311_write_state34.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op312_write_state34.read())));
}

void myFuncAccel4::thread_ap_block_state34_pp0_stage0_iter8() {
    ap_block_state34_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state35_io() {
    ap_block_state35_io = (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op318_write_state35.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op319_write_state35.read())));
}

void myFuncAccel4::thread_ap_block_state35_pp0_stage1_iter8() {
    ap_block_state35_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state36_io() {
    ap_block_state36_io = ((esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op321_write_state36.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op322_write_state36.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read())));
}

void myFuncAccel4::thread_ap_block_state36_pp0_stage2_iter8() {
    ap_block_state36_pp0_stage2_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state37_io() {
    ap_block_state37_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_r_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state37_pp0_stage3_iter8() {
    ap_block_state37_pp0_stage3_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state38() {
    ap_block_state38 = (esl_seteq<1,2,2>(ap_const_lv2_1, output_r_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read())));
}

void myFuncAccel4::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_r_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state8_pp0_stage2_iter1() {
    ap_block_state8_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state9_pp0_stage3_iter1() {
    ap_block_state9_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_condition_673() {
    ap_condition_673 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0));
}

void myFuncAccel4::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_351_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, output_r_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myFuncAccel4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_phi_mux_i_0_phi_fu_232_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_i_0_phi_fu_232_p4 = i_reg_633.read();
    } else {
        ap_phi_mux_i_0_phi_fu_232_p4 = i_0_reg_228.read();
    }
}

void myFuncAccel4::thread_ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251() {
    ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void myFuncAccel4::thread_ap_phi_reg_pp0_iter0_phi_ln56_reg_239() {
    ap_phi_reg_pp0_iter0_phi_ln56_reg_239 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void myFuncAccel4::thread_ap_predicate_op304_write_state33() {
    ap_predicate_op304_write_state33 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()));
}

void myFuncAccel4::thread_ap_predicate_op305_write_state33() {
    ap_predicate_op305_write_state33 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read()));
}

void myFuncAccel4::thread_ap_predicate_op311_write_state34() {
    ap_predicate_op311_write_state34 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()));
}

void myFuncAccel4::thread_ap_predicate_op312_write_state34() {
    ap_predicate_op312_write_state34 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read()));
}

void myFuncAccel4::thread_ap_predicate_op318_write_state35() {
    ap_predicate_op318_write_state35 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_predicate_op319_write_state35() {
    ap_predicate_op319_write_state35 = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_predicate_op321_write_state36() {
    ap_predicate_op321_write_state36 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_predicate_op322_write_state36() {
    ap_predicate_op322_write_state36 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951_pp0_iter8_reg.read()));
}

void myFuncAccel4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, output_r_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void myFuncAccel4::thread_bitcast_ln50_1_fu_337_p1() {
    bitcast_ln50_1_fu_337_p1 = threshold.read();
}

void myFuncAccel4::thread_bitcast_ln50_2_fu_431_p1() {
    bitcast_ln50_2_fu_431_p1 = tmp_3_1_3_reg_905_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_bitcast_ln50_3_fu_480_p1() {
    bitcast_ln50_3_fu_480_p1 = tmp_3_2_3_reg_912_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_bitcast_ln50_4_fu_529_p1() {
    bitcast_ln50_4_fu_529_p1 = tmp_3_3_3_reg_919_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_bitcast_ln50_fu_382_p1() {
    bitcast_ln50_fu_382_p1 = tmp_3_0_3_reg_898_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_grp_fu_263_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_263_ce = ap_const_logic_1;
    } else {
        grp_fu_263_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_263_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_263_p0 = tmp_3_0_2_reg_878.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_263_p0 = tmp_3_0_1_reg_858.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_263_p0 = tmp_3_reg_838.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_263_p0 = tmp_2_reg_738.read();
    } else {
        grp_fu_263_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_263_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_263_p1 = tmp_2_0_3_reg_818_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_263_p1 = tmp_2_0_2_reg_798_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_263_p1 = tmp_2_0_1_reg_778_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_263_p1 = ap_const_lv32_0;
    } else {
        grp_fu_263_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_268_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_268_ce = ap_const_logic_1;
    } else {
        grp_fu_268_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_268_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_268_p0 = tmp_3_1_2_reg_883.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_268_p0 = tmp_3_1_1_reg_863.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_268_p0 = tmp_3_1_reg_843.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_268_p0 = tmp_2_1_reg_748.read();
    } else {
        grp_fu_268_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_268_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_268_p1 = tmp_2_1_3_reg_823_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_268_p1 = tmp_2_1_2_reg_803_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_268_p1 = tmp_2_1_1_reg_783_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_268_p1 = ap_const_lv32_0;
    } else {
        grp_fu_268_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_273_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_273_ce = ap_const_logic_1;
    } else {
        grp_fu_273_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_273_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_273_p0 = tmp_3_2_2_reg_888.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_273_p0 = tmp_3_2_1_reg_868.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_273_p0 = tmp_3_2_reg_848.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_273_p0 = tmp_2_2_reg_758.read();
    } else {
        grp_fu_273_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_273_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_273_p1 = tmp_2_2_3_reg_828_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_273_p1 = tmp_2_2_2_reg_808_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_273_p1 = tmp_2_2_1_reg_788_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_273_p1 = ap_const_lv32_0;
    } else {
        grp_fu_273_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_278_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_278_ce = ap_const_logic_1;
    } else {
        grp_fu_278_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_278_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_278_p0 = tmp_3_3_2_reg_893.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_278_p0 = tmp_3_3_1_reg_873.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_278_p0 = tmp_3_3_reg_853.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_278_p0 = tmp_2_3_reg_768.read();
    } else {
        grp_fu_278_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_278_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_278_p1 = tmp_2_3_3_reg_833_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_278_p1 = tmp_2_3_2_reg_813_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_278_p1 = tmp_2_3_1_reg_793_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_278_p1 = ap_const_lv32_0;
    } else {
        grp_fu_278_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_283_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_283_ce = ap_const_logic_1;
    } else {
        grp_fu_283_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_283_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_283_p0 = data0_3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_283_p0 = data0_2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_283_p0 = data0_1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_283_p0 = data0_0.read();
        } else {
            grp_fu_283_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_283_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_289_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_289_ce = ap_const_logic_1;
    } else {
        grp_fu_289_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_289_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = data0_7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = data0_6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = data0_5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_289_p0 = data0_4.read();
        } else {
            grp_fu_289_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_289_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_295_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_295_ce = ap_const_logic_1;
    } else {
        grp_fu_295_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_295_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_295_p0 = data0_11.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_295_p0 = data0_10.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_295_p0 = data0_9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_295_p0 = data0_8.read();
        } else {
            grp_fu_295_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_295_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_301_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_301_ce = ap_const_logic_1;
    } else {
        grp_fu_301_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_301_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_301_p0 = data0_15.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_301_p0 = data0_14.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_301_p0 = data0_13.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_301_p0 = data0_12.read();
        } else {
            grp_fu_301_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_301_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_319_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_319_ce = ap_const_logic_1;
    } else {
        grp_fu_319_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_319_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        grp_fu_319_p0 = ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        grp_fu_319_p0 = ap_phi_reg_pp0_iter7_phi_ln56_reg_239.read();
    } else {
        grp_fu_319_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void myFuncAccel4::thread_grp_fu_325_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_325_ce = ap_const_logic_1;
    } else {
        grp_fu_325_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_325_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_325_p0 = tmp_3_3_3_reg_919_pp0_iter6_reg.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_325_p0 = tmp_3_1_3_reg_905_pp0_iter6_reg.read();
        } else {
            grp_fu_325_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_325_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_328_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        grp_fu_328_ce = ap_const_logic_1;
    } else {
        grp_fu_328_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_328_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_328_p0 = tmp_3_3_3_reg_919.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_328_p0 = tmp_3_2_3_reg_912.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_328_p0 = tmp_3_1_3_reg_905.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_328_p0 = tmp_3_0_3_reg_898.read();
        } else {
            grp_fu_328_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_328_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_i_fu_356_p2() {
    i_fu_356_p2 = (!ap_phi_mux_i_0_phi_fu_232_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_i_0_phi_fu_232_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void myFuncAccel4::thread_icmp_ln31_fu_351_p2() {
    icmp_ln31_fu_351_p2 = (!ap_phi_mux_i_0_phi_fu_232_p4.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_232_p4.read() == size.read());
}

void myFuncAccel4::thread_icmp_ln50_1_fu_405_p2() {
    icmp_ln50_1_fu_405_p2 = (!trunc_ln50_1_fu_395_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln50_1_fu_395_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln50_2_fu_371_p2() {
    icmp_ln50_2_fu_371_p2 = (!tmp_4_fu_362_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_362_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln50_3_fu_345_p2() {
    icmp_ln50_3_fu_345_p2 = (!trunc_ln50_fu_341_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln50_fu_341_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln50_4_fu_448_p2() {
    icmp_ln50_4_fu_448_p2 = (!tmp_6_fu_434_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_434_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln50_5_fu_454_p2() {
    icmp_ln50_5_fu_454_p2 = (!trunc_ln50_2_fu_444_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln50_2_fu_444_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln50_6_fu_497_p2() {
    icmp_ln50_6_fu_497_p2 = (!tmp_9_fu_483_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_483_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln50_7_fu_503_p2() {
    icmp_ln50_7_fu_503_p2 = (!trunc_ln50_3_fu_493_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln50_3_fu_493_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln50_8_fu_546_p2() {
    icmp_ln50_8_fu_546_p2 = (!tmp_7_fu_532_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_532_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln50_9_fu_552_p2() {
    icmp_ln50_9_fu_552_p2 = (!trunc_ln50_4_fu_542_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln50_4_fu_542_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln50_fu_399_p2() {
    icmp_ln50_fu_399_p2 = (!tmp_1_fu_385_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_385_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln52_fu_603_p2() {
    icmp_ln52_fu_603_p2 = (!add_ln50_2_fu_597_p2.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(add_ln50_2_fu_597_p2.read() == ap_const_lv3_4);
}

void myFuncAccel4::thread_input_r_0_ack_in() {
    input_r_0_ack_in = input_r_0_state.read()[1];
}

void myFuncAccel4::thread_input_r_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        input_r_0_ack_out = ap_const_logic_1;
    } else {
        input_r_0_ack_out = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_input_r_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_r_0_sel.read())) {
        input_r_0_data_out = input_r_0_payload_B.read();
    } else {
        input_r_0_data_out = input_r_0_payload_A.read();
    }
}

void myFuncAccel4::thread_input_r_0_load_A() {
    input_r_0_load_A = (input_r_0_state_cmp_full.read() & ~input_r_0_sel_wr.read());
}

void myFuncAccel4::thread_input_r_0_load_B() {
    input_r_0_load_B = (input_r_0_sel_wr.read() & input_r_0_state_cmp_full.read());
}

void myFuncAccel4::thread_input_r_0_sel() {
    input_r_0_sel = input_r_0_sel_rd.read();
}

void myFuncAccel4::thread_input_r_0_state_cmp_full() {
    input_r_0_state_cmp_full =  (sc_logic) ((!input_r_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_r_0_state.read() != ap_const_lv2_1))[0];
}

void myFuncAccel4::thread_input_r_0_vld_in() {
    input_r_0_vld_in = input_r_TVALID.read();
}

void myFuncAccel4::thread_input_r_0_vld_out() {
    input_r_0_vld_out = input_r_0_state.read()[0];
}

void myFuncAccel4::thread_input_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_351_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)))) {
        input_r_TDATA_blk_n = input_r_0_state.read()[0];
    } else {
        input_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void myFuncAccel4::thread_input_r_TREADY() {
    input_r_TREADY = input_r_0_state.read()[1];
}

void myFuncAccel4::thread_or_ln50_1_fu_377_p2() {
    or_ln50_1_fu_377_p2 = (icmp_ln50_3_fu_345_p2.read() | icmp_ln50_2_fu_371_p2.read());
}

void myFuncAccel4::thread_or_ln50_2_fu_460_p2() {
    or_ln50_2_fu_460_p2 = (icmp_ln50_5_fu_454_p2.read() | icmp_ln50_4_fu_448_p2.read());
}

void myFuncAccel4::thread_or_ln50_3_fu_509_p2() {
    or_ln50_3_fu_509_p2 = (icmp_ln50_7_fu_503_p2.read() | icmp_ln50_6_fu_497_p2.read());
}

void myFuncAccel4::thread_or_ln50_4_fu_558_p2() {
    or_ln50_4_fu_558_p2 = (icmp_ln50_9_fu_552_p2.read() | icmp_ln50_8_fu_546_p2.read());
}

void myFuncAccel4::thread_or_ln50_fu_411_p2() {
    or_ln50_fu_411_p2 = (icmp_ln50_1_fu_405_p2.read() | icmp_ln50_fu_399_p2.read());
}

void myFuncAccel4::thread_output_r_1_ack_in() {
    output_r_1_ack_in = output_r_1_state.read()[1];
}

void myFuncAccel4::thread_output_r_1_ack_out() {
    output_r_1_ack_out = output_r_TREADY.read();
}

void myFuncAccel4::thread_output_r_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        output_r_1_data_in = reg_332.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op318_write_state35.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0))) {
        output_r_1_data_in = tmp_3_2_3_reg_912_pp0_iter7_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        output_r_1_data_in = grp_fu_319_p1.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op305_write_state33.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op319_write_state35.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0)))) {
        output_r_1_data_in = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op304_write_state33.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0))) {
        output_r_1_data_in = tmp_3_0_3_reg_898_pp0_iter6_reg.read();
    } else {
        output_r_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_output_r_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_r_1_sel.read())) {
        output_r_1_data_out = output_r_1_payload_B.read();
    } else {
        output_r_1_data_out = output_r_1_payload_A.read();
    }
}

void myFuncAccel4::thread_output_r_1_load_A() {
    output_r_1_load_A = (output_r_1_state_cmp_full.read() & ~output_r_1_sel_wr.read());
}

void myFuncAccel4::thread_output_r_1_load_B() {
    output_r_1_load_B = (output_r_1_sel_wr.read() & output_r_1_state_cmp_full.read());
}

void myFuncAccel4::thread_output_r_1_sel() {
    output_r_1_sel = output_r_1_sel_rd.read();
}

void myFuncAccel4::thread_output_r_1_state_cmp_full() {
    output_r_1_state_cmp_full =  (sc_logic) ((!output_r_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_r_1_state.read() != ap_const_lv2_1))[0];
}

void myFuncAccel4::thread_output_r_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op304_write_state33.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op305_write_state33.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op318_write_state35.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op319_write_state35.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        output_r_1_vld_in = ap_const_logic_1;
    } else {
        output_r_1_vld_in = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_output_r_1_vld_out() {
    output_r_1_vld_out = output_r_1_state.read()[0];
}

void myFuncAccel4::thread_output_r_TDATA() {
    output_r_TDATA = output_r_1_data_out.read();
}

void myFuncAccel4::thread_output_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_reg_951_pp0_iter8_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_reg_951_pp0_iter8_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_629_pp0_iter8_reg.read())))) {
        output_r_TDATA_blk_n = output_r_1_state.read()[1];
    } else {
        output_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void myFuncAccel4::thread_output_r_TVALID() {
    output_r_TVALID = output_r_1_state.read()[0];
}

void myFuncAccel4::thread_tmp_1_fu_385_p4() {
    tmp_1_fu_385_p4 = bitcast_ln50_fu_382_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_4_fu_362_p4() {
    tmp_4_fu_362_p4 = bitcast_ln50_1_fu_337_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_6_fu_434_p4() {
    tmp_6_fu_434_p4 = bitcast_ln50_2_fu_431_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_7_fu_532_p4() {
    tmp_7_fu_532_p4 = bitcast_ln50_4_fu_529_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_9_fu_483_p4() {
    tmp_9_fu_483_p4 = bitcast_ln50_3_fu_480_p1.read().range(30, 23);
}

void myFuncAccel4::thread_trunc_ln50_1_fu_395_p1() {
    trunc_ln50_1_fu_395_p1 = bitcast_ln50_fu_382_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln50_2_fu_444_p1() {
    trunc_ln50_2_fu_444_p1 = bitcast_ln50_2_fu_431_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln50_3_fu_493_p1() {
    trunc_ln50_3_fu_493_p1 = bitcast_ln50_3_fu_480_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln50_4_fu_542_p1() {
    trunc_ln50_4_fu_542_p1 = bitcast_ln50_4_fu_529_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln50_fu_341_p1() {
    trunc_ln50_fu_341_p1 = bitcast_ln50_1_fu_337_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_zext_ln48_1_fu_476_p1() {
    zext_ln48_1_fu_476_p1 = esl_zext<2,1>(and_ln50_3_fu_471_p2.read());
}

void myFuncAccel4::thread_zext_ln48_2_fu_525_p1() {
    zext_ln48_2_fu_525_p1 = esl_zext<2,1>(and_ln50_5_fu_520_p2.read());
}

void myFuncAccel4::thread_zext_ln48_fu_427_p1() {
    zext_ln48_fu_427_p1 = esl_zext<2,1>(and_ln50_1_fu_422_p2.read());
}

void myFuncAccel4::thread_zext_ln50_1_fu_591_p1() {
    zext_ln50_1_fu_591_p1 = esl_zext<3,2>(add_ln50_reg_941.read());
}

void myFuncAccel4::thread_zext_ln50_2_fu_594_p1() {
    zext_ln50_2_fu_594_p1 = esl_zext<3,2>(add_ln50_1_reg_946.read());
}

void myFuncAccel4::thread_zext_ln50_fu_575_p1() {
    zext_ln50_fu_575_p1 = esl_zext<2,1>(and_ln50_7_fu_569_p2.read());
}

void myFuncAccel4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_351_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_351_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, output_r_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_r_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void myFuncAccel4::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"size\" :  \"" << size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dim\" :  \"" << dim.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"threshold\" :  \"" << threshold.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_0\" :  \"" << data0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_1\" :  \"" << data0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_2\" :  \"" << data0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_3\" :  \"" << data0_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_4\" :  \"" << data0_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_5\" :  \"" << data0_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_6\" :  \"" << data0_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_7\" :  \"" << data0_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_8\" :  \"" << data0_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_9\" :  \"" << data0_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_10\" :  \"" << data0_10.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_11\" :  \"" << data0_11.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_12\" :  \"" << data0_12.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_13\" :  \"" << data0_13.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_14\" :  \"" << data0_14.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_15\" :  \"" << data0_15.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_TDATA\" :  \"" << input_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_TVALID\" :  \"" << input_r_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_TREADY\" :  \"" << input_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_TDATA\" :  \"" << output_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_TVALID\" :  \"" << output_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_r_TREADY\" :  \"" << output_r_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

