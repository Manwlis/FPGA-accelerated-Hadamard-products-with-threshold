-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myFuncAccel4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    dim : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_11 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_14 : IN STD_LOGIC_VECTOR (31 downto 0);
    data0_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_TVALID : IN STD_LOGIC;
    input_r_TREADY : OUT STD_LOGIC;
    output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC );
end;


architecture behav of myFuncAccel4 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myFuncAccel4,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.974200,HLS_SYN_LAT=433,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=20,HLS_SYN_FF=4951,HLS_SYN_LUT=4890,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_r_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal input_r_0_vld_in : STD_LOGIC;
    signal input_r_0_vld_out : STD_LOGIC;
    signal input_r_0_ack_in : STD_LOGIC;
    signal input_r_0_ack_out : STD_LOGIC;
    signal input_r_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal input_r_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal input_r_0_sel_rd : STD_LOGIC := '0';
    signal input_r_0_sel_wr : STD_LOGIC := '0';
    signal input_r_0_sel : STD_LOGIC;
    signal input_r_0_load_A : STD_LOGIC;
    signal input_r_0_load_B : STD_LOGIC;
    signal input_r_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal input_r_0_state_cmp_full : STD_LOGIC;
    signal output_r_1_data_in : STD_LOGIC_VECTOR (31 downto 0);
    signal output_r_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal output_r_1_vld_in : STD_LOGIC;
    signal output_r_1_vld_out : STD_LOGIC;
    signal output_r_1_ack_in : STD_LOGIC;
    signal output_r_1_ack_out : STD_LOGIC;
    signal output_r_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal output_r_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal output_r_1_sel_rd : STD_LOGIC := '0';
    signal output_r_1_sel_wr : STD_LOGIC := '0';
    signal output_r_1_sel : STD_LOGIC;
    signal output_r_1_load_A : STD_LOGIC;
    signal output_r_1_load_B : STD_LOGIC;
    signal output_r_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal output_r_1_state_cmp_full : STD_LOGIC;
    signal input_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln31_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln31_reg_629 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal output_r_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal icmp_ln31_reg_629_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_951 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal icmp_ln31_reg_629_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_951_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter8 : BOOLEAN;
    signal ap_predicate_op311_write_state34 : BOOLEAN;
    signal ap_predicate_op312_write_state34 : BOOLEAN;
    signal ap_block_state34_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter8 : BOOLEAN;
    signal ap_predicate_op318_write_state35 : BOOLEAN;
    signal ap_predicate_op319_write_state35 : BOOLEAN;
    signal ap_block_state35_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal bitcast_ln50_1_fu_337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_3_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_629_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_629_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_629_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_629_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_629_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_629_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_633 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln50_1_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter8 : BOOLEAN;
    signal ap_predicate_op321_write_state36 : BOOLEAN;
    signal ap_predicate_op322_write_state36 : BOOLEAN;
    signal ap_block_state36_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state33_pp0_stage3_iter7 : BOOLEAN;
    signal ap_predicate_op304_write_state33 : BOOLEAN;
    signal ap_predicate_op305_write_state33 : BOOLEAN;
    signal ap_block_state33_io : BOOLEAN;
    signal ap_block_state37_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state37_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_738 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_748 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_758 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_768 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_1_reg_778 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_2_0_1_reg_778_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_783 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_783_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_788 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_788_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_1_reg_793 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_1_reg_793_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_798 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_798_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_798_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_803_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_803_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_808 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_808_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_808_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_2_reg_813 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_2_reg_813_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_2_reg_813_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_818 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_818_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_818_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_3_reg_818_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_823 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_823_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_823_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_3_reg_823_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_828_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_828_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_3_reg_828_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_833 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_833_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_833_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_3_reg_833_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_838 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_reg_843 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_reg_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_reg_853 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_0_1_reg_858 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_3_1_1_reg_863 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_1_reg_868 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_1_reg_873 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_0_2_reg_878 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_3_1_2_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_2_reg_888 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_2_reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_0_3_reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_3_0_3_reg_898_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_3_reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_3_reg_905_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_3_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_3_reg_912_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_3_reg_912_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_3_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_3_reg_919_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_926 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_8_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_fu_579_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln50_reg_941 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln50_1_fu_585_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln50_1_reg_946 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln52_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_phi_mux_i_0_phi_fu_232_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter3_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter4_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter5_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter6_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter7_phi_ln56_reg_239 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_263_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_278_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_283_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_325_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln50_fu_341_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4_fu_362_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln50_2_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln50_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_385_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln50_1_fu_395_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln50_1_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_1_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln50_2_fu_431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_434_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln50_2_fu_444_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln50_5_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_4_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_2_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_2_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_3_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln50_3_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_483_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln50_3_fu_493_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln50_7_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_6_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_3_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_4_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_5_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln50_4_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_532_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln50_4_fu_542_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln50_9_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_8_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln50_4_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_6_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_7_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln48_1_fu_476_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln48_fu_427_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln48_2_fu_525_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln50_fu_575_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln50_2_fu_594_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln50_1_fu_591_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln50_2_fu_597_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_263_ce : STD_LOGIC;
    signal grp_fu_268_ce : STD_LOGIC;
    signal grp_fu_273_ce : STD_LOGIC;
    signal grp_fu_278_ce : STD_LOGIC;
    signal grp_fu_283_ce : STD_LOGIC;
    signal grp_fu_289_ce : STD_LOGIC;
    signal grp_fu_295_ce : STD_LOGIC;
    signal grp_fu_301_ce : STD_LOGIC;
    signal grp_fu_319_ce : STD_LOGIC;
    signal grp_fu_325_ce : STD_LOGIC;
    signal grp_fu_328_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_block_state38 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_673 : BOOLEAN;

    component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myFuncAccel4_fptrunc_64ns_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myFuncAccel4_fpext_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component myFuncAccel4_fcmp_32ns_32ns_1_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_263_p0,
        din1 => grp_fu_263_p1,
        ce => grp_fu_263_ce,
        dout => grp_fu_263_p2);

    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_268_p0,
        din1 => grp_fu_268_p1,
        ce => grp_fu_268_ce,
        dout => grp_fu_268_p2);

    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_273_p0,
        din1 => grp_fu_273_p1,
        ce => grp_fu_273_ce,
        dout => grp_fu_273_p2);

    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4 : component myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_278_p0,
        din1 => grp_fu_278_p1,
        ce => grp_fu_278_ce,
        dout => grp_fu_278_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_283_p0,
        din1 => input_r_0_data_out,
        ce => grp_fu_283_ce,
        dout => grp_fu_283_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_289_p0,
        din1 => input_r_0_data_out,
        ce => grp_fu_289_ce,
        dout => grp_fu_289_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_295_p0,
        din1 => input_r_0_data_out,
        ce => grp_fu_295_ce,
        dout => grp_fu_295_p2);

    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8 : component myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_301_p0,
        din1 => input_r_0_data_out,
        ce => grp_fu_301_ce,
        dout => grp_fu_301_p2);

    myFuncAccel4_fptrunc_64ns_32_2_1_U9 : component myFuncAccel4_fptrunc_64ns_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_319_p0,
        ce => grp_fu_319_ce,
        dout => grp_fu_319_p1);

    myFuncAccel4_fpext_32ns_64_2_1_U10 : component myFuncAccel4_fpext_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_325_p0,
        ce => grp_fu_325_ce,
        dout => grp_fu_325_p1);

    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U11 : component myFuncAccel4_fcmp_32ns_32ns_1_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_328_p0,
        din1 => threshold,
        ce => grp_fu_328_ce,
        opcode => ap_const_lv5_2,
        dout => grp_fu_328_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    input_r_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                input_r_0_sel_rd <= ap_const_logic_0;
            else
                if (((input_r_0_ack_out = ap_const_logic_1) and (input_r_0_vld_out = ap_const_logic_1))) then 
                                        input_r_0_sel_rd <= not(input_r_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    input_r_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                input_r_0_sel_wr <= ap_const_logic_0;
            else
                if (((input_r_0_ack_in = ap_const_logic_1) and (input_r_0_vld_in = ap_const_logic_1))) then 
                                        input_r_0_sel_wr <= not(input_r_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    input_r_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                input_r_0_state <= ap_const_lv2_0;
            else
                if ((((input_r_0_state = ap_const_lv2_2) and (input_r_0_vld_in = ap_const_logic_0)) or ((input_r_0_state = ap_const_lv2_3) and (input_r_0_vld_in = ap_const_logic_0) and (input_r_0_ack_out = ap_const_logic_1)))) then 
                    input_r_0_state <= ap_const_lv2_2;
                elsif ((((input_r_0_state = ap_const_lv2_1) and (input_r_0_ack_out = ap_const_logic_0)) or ((input_r_0_state = ap_const_lv2_3) and (input_r_0_ack_out = ap_const_logic_0) and (input_r_0_vld_in = ap_const_logic_1)))) then 
                    input_r_0_state <= ap_const_lv2_1;
                elsif (((not(((input_r_0_vld_in = ap_const_logic_0) and (input_r_0_ack_out = ap_const_logic_1))) and not(((input_r_0_ack_out = ap_const_logic_0) and (input_r_0_vld_in = ap_const_logic_1))) and (input_r_0_state = ap_const_lv2_3)) or ((input_r_0_state = ap_const_lv2_1) and (input_r_0_ack_out = ap_const_logic_1)) or ((input_r_0_state = ap_const_lv2_2) and (input_r_0_vld_in = ap_const_logic_1)))) then 
                    input_r_0_state <= ap_const_lv2_3;
                else 
                    input_r_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    output_r_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                output_r_1_sel_rd <= ap_const_logic_0;
            else
                if (((output_r_1_ack_out = ap_const_logic_1) and (output_r_1_vld_out = ap_const_logic_1))) then 
                                        output_r_1_sel_rd <= not(output_r_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    output_r_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                output_r_1_sel_wr <= ap_const_logic_0;
            else
                if (((output_r_1_ack_in = ap_const_logic_1) and (output_r_1_vld_in = ap_const_logic_1))) then 
                                        output_r_1_sel_wr <= not(output_r_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    output_r_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                output_r_1_state <= ap_const_lv2_0;
            else
                if ((((output_r_1_state = ap_const_lv2_2) and (output_r_1_vld_in = ap_const_logic_0)) or ((output_r_1_state = ap_const_lv2_3) and (output_r_1_vld_in = ap_const_logic_0) and (output_r_1_ack_out = ap_const_logic_1)))) then 
                    output_r_1_state <= ap_const_lv2_2;
                elsif ((((output_r_1_state = ap_const_lv2_1) and (output_r_TREADY = ap_const_logic_0)) or ((output_r_1_state = ap_const_lv2_3) and (output_r_TREADY = ap_const_logic_0) and (output_r_1_vld_in = ap_const_logic_1)))) then 
                    output_r_1_state <= ap_const_lv2_1;
                elsif (((not(((output_r_1_vld_in = ap_const_logic_0) and (output_r_1_ack_out = ap_const_logic_1))) and not(((output_r_TREADY = ap_const_logic_0) and (output_r_1_vld_in = ap_const_logic_1))) and (output_r_1_state = ap_const_lv2_3)) or ((output_r_1_state = ap_const_lv2_1) and (output_r_1_ack_out = ap_const_logic_1)) or ((output_r_1_state = ap_const_lv2_2) and (output_r_1_vld_in = ap_const_logic_1)))) then 
                    output_r_1_state <= ap_const_lv2_3;
                else 
                    output_r_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter7_phi_ln56_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_phi_reg_pp0_iter7_phi_ln56_reg_239 <= ap_const_lv64_0;
            elsif (((icmp_ln52_reg_951 = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_phi_reg_pp0_iter7_phi_ln56_reg_239 <= grp_fu_325_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter7_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter6_phi_ln56_reg_239;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_673)) then
                if (((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 <= ap_const_lv64_0;
                elsif (((icmp_ln52_reg_951 = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 <= grp_fu_325_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251;
                end if;
            end if; 
        end if;
    end process;

    i_0_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_228 <= i_reg_633;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_228 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln50_1_reg_946 <= add_ln50_1_fu_585_p2;
                add_ln50_reg_941 <= add_ln50_fu_579_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251;
                ap_phi_reg_pp0_iter1_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter0_phi_ln56_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter1_phi_ln56_1_reg_251;
                ap_phi_reg_pp0_iter2_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter1_phi_ln56_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter2_phi_ln56_1_reg_251;
                ap_phi_reg_pp0_iter3_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter2_phi_ln56_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter3_phi_ln56_1_reg_251;
                ap_phi_reg_pp0_iter4_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter3_phi_ln56_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter4_phi_ln56_1_reg_251;
                ap_phi_reg_pp0_iter5_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter4_phi_ln56_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter5_phi_ln56_1_reg_251;
                ap_phi_reg_pp0_iter6_phi_ln56_reg_239 <= ap_phi_reg_pp0_iter5_phi_ln56_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter7_phi_ln56_1_reg_251 <= ap_phi_reg_pp0_iter6_phi_ln56_1_reg_251;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_633 <= i_fu_356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln31_reg_629 <= icmp_ln31_fu_351_p2;
                icmp_ln31_reg_629_pp0_iter1_reg <= icmp_ln31_reg_629;
                icmp_ln31_reg_629_pp0_iter2_reg <= icmp_ln31_reg_629_pp0_iter1_reg;
                icmp_ln31_reg_629_pp0_iter3_reg <= icmp_ln31_reg_629_pp0_iter2_reg;
                icmp_ln31_reg_629_pp0_iter4_reg <= icmp_ln31_reg_629_pp0_iter3_reg;
                icmp_ln31_reg_629_pp0_iter5_reg <= icmp_ln31_reg_629_pp0_iter4_reg;
                icmp_ln31_reg_629_pp0_iter6_reg <= icmp_ln31_reg_629_pp0_iter5_reg;
                icmp_ln31_reg_629_pp0_iter7_reg <= icmp_ln31_reg_629_pp0_iter6_reg;
                icmp_ln31_reg_629_pp0_iter8_reg <= icmp_ln31_reg_629_pp0_iter7_reg;
                tmp_2_0_1_reg_778_pp0_iter2_reg <= tmp_2_0_1_reg_778;
                tmp_2_1_1_reg_783_pp0_iter2_reg <= tmp_2_1_1_reg_783;
                tmp_2_2_1_reg_788_pp0_iter2_reg <= tmp_2_2_1_reg_788;
                tmp_2_3_1_reg_793_pp0_iter2_reg <= tmp_2_3_1_reg_793;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln52_reg_951 <= icmp_ln52_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln52_reg_951_pp0_iter8_reg <= icmp_ln52_reg_951;
                tmp_2_0_2_reg_798_pp0_iter2_reg <= tmp_2_0_2_reg_798;
                tmp_2_0_2_reg_798_pp0_iter3_reg <= tmp_2_0_2_reg_798_pp0_iter2_reg;
                tmp_2_1_2_reg_803_pp0_iter2_reg <= tmp_2_1_2_reg_803;
                tmp_2_1_2_reg_803_pp0_iter3_reg <= tmp_2_1_2_reg_803_pp0_iter2_reg;
                tmp_2_2_2_reg_808_pp0_iter2_reg <= tmp_2_2_2_reg_808;
                tmp_2_2_2_reg_808_pp0_iter3_reg <= tmp_2_2_2_reg_808_pp0_iter2_reg;
                tmp_2_3_2_reg_813_pp0_iter2_reg <= tmp_2_3_2_reg_813;
                tmp_2_3_2_reg_813_pp0_iter3_reg <= tmp_2_3_2_reg_813_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((input_r_0_load_A = ap_const_logic_1)) then
                input_r_0_payload_A <= input_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((input_r_0_load_B = ap_const_logic_1)) then
                input_r_0_payload_B <= input_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_r_1_load_A = ap_const_logic_1)) then
                output_r_1_payload_A <= output_r_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((output_r_1_load_B = ap_const_logic_1)) then
                output_r_1_payload_B <= output_r_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_332 <= grp_fu_319_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_2_0_1_reg_778 <= grp_fu_283_p2;
                tmp_2_1_1_reg_783 <= grp_fu_289_p2;
                tmp_2_2_1_reg_788 <= grp_fu_295_p2;
                tmp_2_3_1_reg_793 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_2_0_2_reg_798 <= grp_fu_283_p2;
                tmp_2_1_2_reg_803 <= grp_fu_289_p2;
                tmp_2_2_2_reg_808 <= grp_fu_295_p2;
                tmp_2_3_2_reg_813 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_2_0_3_reg_818 <= grp_fu_283_p2;
                tmp_2_1_3_reg_823 <= grp_fu_289_p2;
                tmp_2_2_3_reg_828 <= grp_fu_295_p2;
                tmp_2_3_3_reg_833 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_2_0_3_reg_818_pp0_iter2_reg <= tmp_2_0_3_reg_818;
                tmp_2_0_3_reg_818_pp0_iter3_reg <= tmp_2_0_3_reg_818_pp0_iter2_reg;
                tmp_2_0_3_reg_818_pp0_iter4_reg <= tmp_2_0_3_reg_818_pp0_iter3_reg;
                tmp_2_1_3_reg_823_pp0_iter2_reg <= tmp_2_1_3_reg_823;
                tmp_2_1_3_reg_823_pp0_iter3_reg <= tmp_2_1_3_reg_823_pp0_iter2_reg;
                tmp_2_1_3_reg_823_pp0_iter4_reg <= tmp_2_1_3_reg_823_pp0_iter3_reg;
                tmp_2_2_3_reg_828_pp0_iter2_reg <= tmp_2_2_3_reg_828;
                tmp_2_2_3_reg_828_pp0_iter3_reg <= tmp_2_2_3_reg_828_pp0_iter2_reg;
                tmp_2_2_3_reg_828_pp0_iter4_reg <= tmp_2_2_3_reg_828_pp0_iter3_reg;
                tmp_2_3_3_reg_833_pp0_iter2_reg <= tmp_2_3_3_reg_833;
                tmp_2_3_3_reg_833_pp0_iter3_reg <= tmp_2_3_3_reg_833_pp0_iter2_reg;
                tmp_2_3_3_reg_833_pp0_iter4_reg <= tmp_2_3_3_reg_833_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_2_1_reg_748 <= grp_fu_289_p2;
                tmp_2_2_reg_758 <= grp_fu_295_p2;
                tmp_2_3_reg_768 <= grp_fu_301_p2;
                tmp_2_reg_738 <= grp_fu_283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_3_0_1_reg_858 <= grp_fu_263_p2;
                tmp_3_1_1_reg_863 <= grp_fu_268_p2;
                tmp_3_2_1_reg_868 <= grp_fu_273_p2;
                tmp_3_3_1_reg_873 <= grp_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_3_0_2_reg_878 <= grp_fu_263_p2;
                tmp_3_1_2_reg_883 <= grp_fu_268_p2;
                tmp_3_2_2_reg_888 <= grp_fu_273_p2;
                tmp_3_3_2_reg_893 <= grp_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_3_0_3_reg_898 <= grp_fu_263_p2;
                tmp_3_1_3_reg_905 <= grp_fu_268_p2;
                tmp_3_2_3_reg_912 <= grp_fu_273_p2;
                tmp_3_3_3_reg_919 <= grp_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_3_0_3_reg_898_pp0_iter6_reg <= tmp_3_0_3_reg_898;
                tmp_3_1_3_reg_905_pp0_iter6_reg <= tmp_3_1_3_reg_905;
                tmp_3_2_3_reg_912_pp0_iter6_reg <= tmp_3_2_3_reg_912;
                tmp_3_2_3_reg_912_pp0_iter7_reg <= tmp_3_2_3_reg_912_pp0_iter6_reg;
                tmp_3_3_3_reg_919_pp0_iter6_reg <= tmp_3_3_3_reg_919;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_3_1_reg_843 <= grp_fu_268_p2;
                tmp_3_2_reg_848 <= grp_fu_273_p2;
                tmp_3_3_reg_853 <= grp_fu_278_p2;
                tmp_3_reg_838 <= grp_fu_263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_5_reg_926 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_8_reg_931 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_629_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_s_reg_936 <= grp_fu_328_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, output_r_TREADY, output_r_1_state, ap_enable_reg_pp0_iter0, icmp_ln31_fu_351_p2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_CS_fsm_state38, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln31_fu_351_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln31_fu_351_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state38 => 
                if ((not(((output_r_1_state = ap_const_lv2_1) or ((output_r_1_state = ap_const_lv2_3) and (output_r_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln50_1_fu_585_p2 <= std_logic_vector(unsigned(zext_ln48_2_fu_525_p1) + unsigned(zext_ln50_fu_575_p1));
    add_ln50_2_fu_597_p2 <= std_logic_vector(unsigned(zext_ln50_2_fu_594_p1) + unsigned(zext_ln50_1_fu_591_p1));
    add_ln50_fu_579_p2 <= std_logic_vector(unsigned(zext_ln48_1_fu_476_p1) + unsigned(zext_ln48_fu_427_p1));
    and_ln50_1_fu_422_p2 <= (tmp_5_reg_926 and and_ln50_fu_417_p2);
    and_ln50_2_fu_466_p2 <= (or_ln50_2_fu_460_p2 and or_ln50_1_fu_377_p2);
    and_ln50_3_fu_471_p2 <= (tmp_8_reg_931 and and_ln50_2_fu_466_p2);
    and_ln50_4_fu_515_p2 <= (or_ln50_3_fu_509_p2 and or_ln50_1_fu_377_p2);
    and_ln50_5_fu_520_p2 <= (tmp_s_reg_936 and and_ln50_4_fu_515_p2);
    and_ln50_6_fu_564_p2 <= (or_ln50_4_fu_558_p2 and or_ln50_1_fu_377_p2);
    and_ln50_7_fu_569_p2 <= (grp_fu_328_p2 and and_ln50_6_fu_564_p2);
    and_ln50_fu_417_p2 <= (or_ln50_fu_411_p2 and or_ln50_1_fu_377_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state38 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_fu_351_p2)
    begin
                ap_block_pp0_stage0_00001 <= ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_01001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_fu_351_p2)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_fu_351_p2, ap_enable_reg_pp0_iter8, ap_block_state34_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state34_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_fu_351_p2, ap_enable_reg_pp0_iter8, ap_block_state34_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state34_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_00001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629)
    begin
                ap_block_pp0_stage1_00001 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_01001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629)
    begin
                ap_block_pp0_stage1_01001 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629, ap_enable_reg_pp0_iter8, ap_block_state35_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state35_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629, ap_enable_reg_pp0_iter8, ap_block_state35_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state35_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_00001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629)
    begin
                ap_block_pp0_stage2_00001 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_01001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629)
    begin
                ap_block_pp0_stage2_01001 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629, ap_enable_reg_pp0_iter8, ap_block_state36_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629, ap_enable_reg_pp0_iter8, ap_block_state36_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629)
    begin
                ap_block_pp0_stage3_00001 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_01001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629)
    begin
                ap_block_pp0_stage3_01001 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_state33_io, ap_block_state37_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_const_boolean_1 = ap_block_state37_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state33_io) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(input_r_0_vld_out, ap_enable_reg_pp0_iter0, icmp_ln31_reg_629, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_state33_io, ap_block_state37_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_const_boolean_1 = ap_block_state37_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state33_io) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter0_assign_proc : process(input_r_0_vld_out, icmp_ln31_fu_351_p2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state30_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_io_assign_proc : process(output_r_1_ack_in, ap_predicate_op304_write_state33, ap_predicate_op305_write_state33)
    begin
                ap_block_state33_io <= (((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op305_write_state33 = ap_const_boolean_1)) or ((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op304_write_state33 = ap_const_boolean_1)));
    end process;

        ap_block_state33_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_io_assign_proc : process(output_r_1_ack_in, ap_predicate_op311_write_state34, ap_predicate_op312_write_state34)
    begin
                ap_block_state34_io <= ((output_r_1_ack_in = ap_const_logic_0) or ((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op312_write_state34 = ap_const_boolean_1)) or ((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op311_write_state34 = ap_const_boolean_1)));
    end process;

        ap_block_state34_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state35_io_assign_proc : process(output_r_1_ack_in, ap_predicate_op318_write_state35, ap_predicate_op319_write_state35)
    begin
                ap_block_state35_io <= ((output_r_1_ack_in = ap_const_logic_0) or ((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op319_write_state35 = ap_const_boolean_1)) or ((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op318_write_state35 = ap_const_boolean_1)));
    end process;

        ap_block_state35_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_io_assign_proc : process(output_r_1_ack_in, icmp_ln31_reg_629_pp0_iter8_reg, ap_predicate_op321_write_state36, ap_predicate_op322_write_state36)
    begin
                ap_block_state36_io <= (((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op322_write_state36 = ap_const_boolean_1)) or ((output_r_1_ack_in = ap_const_logic_0) and (ap_predicate_op321_write_state36 = ap_const_boolean_1)) or ((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (output_r_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state36_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state37_io_assign_proc : process(output_r_1_ack_in, icmp_ln31_reg_629_pp0_iter8_reg)
    begin
                ap_block_state37_io <= ((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (output_r_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state37_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_assign_proc : process(output_r_TREADY, output_r_1_state)
    begin
                ap_block_state38 <= ((output_r_1_state = ap_const_lv2_1) or ((output_r_1_state = ap_const_lv2_3) and (output_r_TREADY = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage1_iter0_assign_proc : process(input_r_0_vld_out, icmp_ln31_reg_629)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage2_iter0_assign_proc : process(input_r_0_vld_out, icmp_ln31_reg_629)
    begin
                ap_block_state4_pp0_stage2_iter0 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage3_iter0_assign_proc : process(input_r_0_vld_out, icmp_ln31_reg_629)
    begin
                ap_block_state5_pp0_stage3_iter0 <= ((icmp_ln31_reg_629 = ap_const_lv1_0) and (input_r_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_673_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter7, ap_block_pp0_stage3_11001)
    begin
                ap_condition_673 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln31_fu_351_p2)
    begin
        if ((icmp_ln31_fu_351_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(output_r_TREADY, output_r_1_state, ap_CS_fsm_state38)
    begin
        if ((not(((output_r_1_state = ap_const_lv2_1) or ((output_r_1_state = ap_const_lv2_3) and (output_r_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_232_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln31_reg_629, i_0_reg_228, i_reg_633, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_232_p4 <= i_reg_633;
        else 
            ap_phi_mux_i_0_phi_fu_232_p4 <= i_0_reg_228;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_phi_ln56_1_reg_251 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln56_reg_239 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op304_write_state33_assign_proc : process(icmp_ln31_reg_629_pp0_iter7_reg, icmp_ln52_reg_951)
    begin
                ap_predicate_op304_write_state33 <= ((icmp_ln52_reg_951 = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op305_write_state33_assign_proc : process(icmp_ln31_reg_629_pp0_iter7_reg, icmp_ln52_reg_951)
    begin
                ap_predicate_op305_write_state33 <= ((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op311_write_state34_assign_proc : process(icmp_ln31_reg_629_pp0_iter7_reg, icmp_ln52_reg_951)
    begin
                ap_predicate_op311_write_state34 <= ((icmp_ln52_reg_951 = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op312_write_state34_assign_proc : process(icmp_ln31_reg_629_pp0_iter7_reg, icmp_ln52_reg_951)
    begin
                ap_predicate_op312_write_state34 <= ((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op318_write_state35_assign_proc : process(icmp_ln52_reg_951, icmp_ln31_reg_629_pp0_iter8_reg)
    begin
                ap_predicate_op318_write_state35 <= ((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (icmp_ln52_reg_951 = ap_const_lv1_0));
    end process;


    ap_predicate_op319_write_state35_assign_proc : process(icmp_ln52_reg_951, icmp_ln31_reg_629_pp0_iter8_reg)
    begin
                ap_predicate_op319_write_state35 <= ((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op321_write_state36_assign_proc : process(icmp_ln31_reg_629_pp0_iter8_reg, icmp_ln52_reg_951_pp0_iter8_reg)
    begin
                ap_predicate_op321_write_state36 <= ((icmp_ln52_reg_951_pp0_iter8_reg = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op322_write_state36_assign_proc : process(icmp_ln31_reg_629_pp0_iter8_reg, icmp_ln52_reg_951_pp0_iter8_reg)
    begin
                ap_predicate_op322_write_state36 <= ((icmp_ln52_reg_951_pp0_iter8_reg = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(output_r_TREADY, output_r_1_state, ap_CS_fsm_state38)
    begin
        if ((not(((output_r_1_state = ap_const_lv2_1) or ((output_r_1_state = ap_const_lv2_3) and (output_r_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln50_1_fu_337_p1 <= threshold;
    bitcast_ln50_2_fu_431_p1 <= tmp_3_1_3_reg_905_pp0_iter6_reg;
    bitcast_ln50_3_fu_480_p1 <= tmp_3_2_3_reg_912_pp0_iter6_reg;
    bitcast_ln50_4_fu_529_p1 <= tmp_3_3_3_reg_919_pp0_iter6_reg;
    bitcast_ln50_fu_382_p1 <= tmp_3_0_3_reg_898_pp0_iter6_reg;

    grp_fu_263_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_263_ce <= ap_const_logic_1;
        else 
            grp_fu_263_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_263_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, tmp_2_reg_738, ap_enable_reg_pp0_iter1, tmp_3_reg_838, ap_enable_reg_pp0_iter2, tmp_3_0_1_reg_858, ap_enable_reg_pp0_iter3, tmp_3_0_2_reg_878, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_263_p0 <= tmp_3_0_2_reg_878;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_263_p0 <= tmp_3_0_1_reg_858;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_263_p0 <= tmp_3_reg_838;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_263_p0 <= tmp_2_reg_738;
        else 
            grp_fu_263_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_263_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter1, tmp_2_0_1_reg_778_pp0_iter2_reg, tmp_2_0_2_reg_798_pp0_iter3_reg, tmp_2_0_3_reg_818_pp0_iter4_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_263_p1 <= tmp_2_0_3_reg_818_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_263_p1 <= tmp_2_0_2_reg_798_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_263_p1 <= tmp_2_0_1_reg_778_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_263_p1 <= ap_const_lv32_0;
        else 
            grp_fu_263_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_268_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_268_ce <= ap_const_logic_1;
        else 
            grp_fu_268_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_268_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, tmp_2_1_reg_748, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_3_1_reg_843, ap_enable_reg_pp0_iter3, tmp_3_1_1_reg_863, ap_enable_reg_pp0_iter4, tmp_3_1_2_reg_883)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_268_p0 <= tmp_3_1_2_reg_883;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_268_p0 <= tmp_3_1_1_reg_863;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_268_p0 <= tmp_3_1_reg_843;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_268_p0 <= tmp_2_1_reg_748;
        else 
            grp_fu_268_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_268_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter1, tmp_2_1_1_reg_783_pp0_iter2_reg, tmp_2_1_2_reg_803_pp0_iter3_reg, tmp_2_1_3_reg_823_pp0_iter4_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_268_p1 <= tmp_2_1_3_reg_823_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_268_p1 <= tmp_2_1_2_reg_803_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_268_p1 <= tmp_2_1_1_reg_783_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_268_p1 <= ap_const_lv32_0;
        else 
            grp_fu_268_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_273_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_273_ce <= ap_const_logic_1;
        else 
            grp_fu_273_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_273_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, tmp_2_2_reg_758, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_3_2_reg_848, ap_enable_reg_pp0_iter3, tmp_3_2_1_reg_868, ap_enable_reg_pp0_iter4, tmp_3_2_2_reg_888)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_273_p0 <= tmp_3_2_2_reg_888;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_273_p0 <= tmp_3_2_1_reg_868;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_273_p0 <= tmp_3_2_reg_848;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_273_p0 <= tmp_2_2_reg_758;
        else 
            grp_fu_273_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_273_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter1, tmp_2_2_1_reg_788_pp0_iter2_reg, tmp_2_2_2_reg_808_pp0_iter3_reg, tmp_2_2_3_reg_828_pp0_iter4_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_273_p1 <= tmp_2_2_3_reg_828_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_273_p1 <= tmp_2_2_2_reg_808_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_273_p1 <= tmp_2_2_1_reg_788_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_273_p1 <= ap_const_lv32_0;
        else 
            grp_fu_273_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_278_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_278_ce <= ap_const_logic_1;
        else 
            grp_fu_278_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_278_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, tmp_2_3_reg_768, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_3_3_reg_853, ap_enable_reg_pp0_iter3, tmp_3_3_1_reg_873, ap_enable_reg_pp0_iter4, tmp_3_3_2_reg_893)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_278_p0 <= tmp_3_3_2_reg_893;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_278_p0 <= tmp_3_3_1_reg_873;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_278_p0 <= tmp_3_3_reg_853;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_278_p0 <= tmp_2_3_reg_768;
        else 
            grp_fu_278_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_278_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter1, tmp_2_3_1_reg_793_pp0_iter2_reg, tmp_2_3_2_reg_813_pp0_iter3_reg, tmp_2_3_3_reg_833_pp0_iter4_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_278_p1 <= tmp_2_3_3_reg_833_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_278_p1 <= tmp_2_3_2_reg_813_pp0_iter3_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_278_p1 <= tmp_2_3_1_reg_793_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_278_p1 <= ap_const_lv32_0;
        else 
            grp_fu_278_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_283_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_283_ce <= ap_const_logic_1;
        else 
            grp_fu_283_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_283_p0_assign_proc : process(data0_0, data0_1, data0_2, data0_3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_283_p0 <= data0_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_283_p0 <= data0_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_283_p0 <= data0_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_283_p0 <= data0_0;
            else 
                grp_fu_283_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_283_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_289_ce <= ap_const_logic_1;
        else 
            grp_fu_289_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_289_p0_assign_proc : process(data0_4, data0_5, data0_6, data0_7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_289_p0 <= data0_7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_289_p0 <= data0_6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_289_p0 <= data0_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_289_p0 <= data0_4;
            else 
                grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_295_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_295_ce <= ap_const_logic_1;
        else 
            grp_fu_295_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_295_p0_assign_proc : process(data0_8, data0_9, data0_10, data0_11, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_295_p0 <= data0_11;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_295_p0 <= data0_10;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_295_p0 <= data0_9;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_295_p0 <= data0_8;
            else 
                grp_fu_295_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_295_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_301_ce <= ap_const_logic_1;
        else 
            grp_fu_301_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_301_p0_assign_proc : process(data0_12, data0_13, data0_14, data0_15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_301_p0 <= data0_15;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_301_p0 <= data0_14;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_301_p0 <= data0_13;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_301_p0 <= data0_12;
            else 
                grp_fu_301_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_301_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_319_ce <= ap_const_logic_1;
        else 
            grp_fu_319_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_319_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_phi_reg_pp0_iter7_phi_ln56_reg_239, ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_319_p0 <= ap_phi_reg_pp0_iter8_phi_ln56_1_reg_251;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_319_p0 <= ap_phi_reg_pp0_iter7_phi_ln56_reg_239;
        else 
            grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_325_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_325_ce <= ap_const_logic_1;
        else 
            grp_fu_325_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_325_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_enable_reg_pp0_iter7, tmp_3_1_3_reg_905_pp0_iter6_reg, tmp_3_3_3_reg_919_pp0_iter6_reg)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_325_p0 <= tmp_3_3_3_reg_919_pp0_iter6_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_325_p0 <= tmp_3_1_3_reg_905_pp0_iter6_reg;
            else 
                grp_fu_325_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_325_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_328_ce <= ap_const_logic_1;
        else 
            grp_fu_328_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_328_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, tmp_3_0_3_reg_898, tmp_3_1_3_reg_905, tmp_3_2_3_reg_912, tmp_3_3_3_reg_919, ap_enable_reg_pp0_iter6)
    begin
        if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_328_p0 <= tmp_3_3_3_reg_919;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_328_p0 <= tmp_3_2_3_reg_912;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_328_p0 <= tmp_3_1_3_reg_905;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_328_p0 <= tmp_3_0_3_reg_898;
            else 
                grp_fu_328_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_328_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_356_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_232_p4) + unsigned(ap_const_lv32_1));
    icmp_ln31_fu_351_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_232_p4 = size) else "0";
    icmp_ln50_1_fu_405_p2 <= "1" when (trunc_ln50_1_fu_395_p1 = ap_const_lv23_0) else "0";
    icmp_ln50_2_fu_371_p2 <= "0" when (tmp_4_fu_362_p4 = ap_const_lv8_FF) else "1";
    icmp_ln50_3_fu_345_p2 <= "1" when (trunc_ln50_fu_341_p1 = ap_const_lv23_0) else "0";
    icmp_ln50_4_fu_448_p2 <= "0" when (tmp_6_fu_434_p4 = ap_const_lv8_FF) else "1";
    icmp_ln50_5_fu_454_p2 <= "1" when (trunc_ln50_2_fu_444_p1 = ap_const_lv23_0) else "0";
    icmp_ln50_6_fu_497_p2 <= "0" when (tmp_9_fu_483_p4 = ap_const_lv8_FF) else "1";
    icmp_ln50_7_fu_503_p2 <= "1" when (trunc_ln50_3_fu_493_p1 = ap_const_lv23_0) else "0";
    icmp_ln50_8_fu_546_p2 <= "0" when (tmp_7_fu_532_p4 = ap_const_lv8_FF) else "1";
    icmp_ln50_9_fu_552_p2 <= "1" when (trunc_ln50_4_fu_542_p1 = ap_const_lv23_0) else "0";
    icmp_ln50_fu_399_p2 <= "0" when (tmp_1_fu_385_p4 = ap_const_lv8_FF) else "1";
    icmp_ln52_fu_603_p2 <= "1" when (add_ln50_2_fu_597_p2 = ap_const_lv3_4) else "0";
    input_r_0_ack_in <= input_r_0_state(1);

    input_r_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln31_fu_351_p2, ap_CS_fsm_pp0_stage1, icmp_ln31_reg_629, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_r_0_ack_out <= ap_const_logic_1;
        else 
            input_r_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    input_r_0_data_out_assign_proc : process(input_r_0_payload_A, input_r_0_payload_B, input_r_0_sel)
    begin
        if ((input_r_0_sel = ap_const_logic_1)) then 
            input_r_0_data_out <= input_r_0_payload_B;
        else 
            input_r_0_data_out <= input_r_0_payload_A;
        end if; 
    end process;

    input_r_0_load_A <= (input_r_0_state_cmp_full and not(input_r_0_sel_wr));
    input_r_0_load_B <= (input_r_0_state_cmp_full and input_r_0_sel_wr);
    input_r_0_sel <= input_r_0_sel_rd;
    input_r_0_state_cmp_full <= '0' when (input_r_0_state = ap_const_lv2_1) else '1';
    input_r_0_vld_in <= input_r_TVALID;
    input_r_0_vld_out <= input_r_0_state(0);

    input_r_TDATA_blk_n_assign_proc : process(input_r_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln31_fu_351_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln31_reg_629, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln31_reg_629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln31_fu_351_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            input_r_TDATA_blk_n <= input_r_0_state(0);
        else 
            input_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_r_TREADY <= input_r_0_state(1);
    or_ln50_1_fu_377_p2 <= (icmp_ln50_3_fu_345_p2 or icmp_ln50_2_fu_371_p2);
    or_ln50_2_fu_460_p2 <= (icmp_ln50_5_fu_454_p2 or icmp_ln50_4_fu_448_p2);
    or_ln50_3_fu_509_p2 <= (icmp_ln50_7_fu_503_p2 or icmp_ln50_6_fu_497_p2);
    or_ln50_4_fu_558_p2 <= (icmp_ln50_9_fu_552_p2 or icmp_ln50_8_fu_546_p2);
    or_ln50_fu_411_p2 <= (icmp_ln50_fu_399_p2 or icmp_ln50_1_fu_405_p2);
    output_r_1_ack_in <= output_r_1_state(1);
    output_r_1_ack_out <= output_r_TREADY;

    output_r_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, icmp_ln31_reg_629_pp0_iter8_reg, grp_fu_319_p1, reg_332, ap_predicate_op318_write_state35, ap_predicate_op319_write_state35, ap_predicate_op304_write_state33, ap_predicate_op305_write_state33, tmp_3_0_3_reg_898_pp0_iter6_reg, tmp_3_2_3_reg_912_pp0_iter7_reg, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            output_r_1_data_in <= reg_332;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op318_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output_r_1_data_in <= tmp_3_2_3_reg_912_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output_r_1_data_in <= grp_fu_319_p1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_predicate_op305_write_state33 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op319_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            output_r_1_data_in <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_predicate_op304_write_state33 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            output_r_1_data_in <= tmp_3_0_3_reg_898_pp0_iter6_reg;
        else 
            output_r_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_1_data_out_assign_proc : process(output_r_1_payload_A, output_r_1_payload_B, output_r_1_sel)
    begin
        if ((output_r_1_sel = ap_const_logic_1)) then 
            output_r_1_data_out <= output_r_1_payload_B;
        else 
            output_r_1_data_out <= output_r_1_payload_A;
        end if; 
    end process;

    output_r_1_load_A <= (output_r_1_state_cmp_full and not(output_r_1_sel_wr));
    output_r_1_load_B <= (output_r_1_state_cmp_full and output_r_1_sel_wr);
    output_r_1_sel <= output_r_1_sel_rd;
    output_r_1_state_cmp_full <= '0' when (output_r_1_state = ap_const_lv2_1) else '1';

    output_r_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, icmp_ln31_reg_629_pp0_iter8_reg, ap_block_pp0_stage0_11001, ap_predicate_op318_write_state35, ap_predicate_op319_write_state35, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_predicate_op304_write_state33, ap_predicate_op305_write_state33, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op305_write_state33 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op304_write_state33 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op319_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op318_write_state35 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output_r_1_vld_in <= ap_const_logic_1;
        else 
            output_r_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    output_r_1_vld_out <= output_r_1_state(0);
    output_r_TDATA <= output_r_1_data_out;

    output_r_TDATA_blk_n_assign_proc : process(output_r_1_state, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter7, icmp_ln31_reg_629_pp0_iter7_reg, icmp_ln52_reg_951, ap_enable_reg_pp0_iter8, icmp_ln31_reg_629_pp0_iter8_reg, icmp_ln52_reg_951_pp0_iter8_reg)
    begin
        if ((((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln52_reg_951 = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln52_reg_951_pp0_iter8_reg = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln52_reg_951_pp0_iter8_reg = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((icmp_ln31_reg_629_pp0_iter8_reg = ap_const_lv1_0) and (icmp_ln52_reg_951 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln52_reg_951 = ap_const_lv1_1) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((icmp_ln52_reg_951 = ap_const_lv1_0) and (icmp_ln31_reg_629_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            output_r_TDATA_blk_n <= output_r_1_state(1);
        else 
            output_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_r_TVALID <= output_r_1_state(0);
    tmp_1_fu_385_p4 <= bitcast_ln50_fu_382_p1(30 downto 23);
    tmp_4_fu_362_p4 <= bitcast_ln50_1_fu_337_p1(30 downto 23);
    tmp_6_fu_434_p4 <= bitcast_ln50_2_fu_431_p1(30 downto 23);
    tmp_7_fu_532_p4 <= bitcast_ln50_4_fu_529_p1(30 downto 23);
    tmp_9_fu_483_p4 <= bitcast_ln50_3_fu_480_p1(30 downto 23);
    trunc_ln50_1_fu_395_p1 <= bitcast_ln50_fu_382_p1(23 - 1 downto 0);
    trunc_ln50_2_fu_444_p1 <= bitcast_ln50_2_fu_431_p1(23 - 1 downto 0);
    trunc_ln50_3_fu_493_p1 <= bitcast_ln50_3_fu_480_p1(23 - 1 downto 0);
    trunc_ln50_4_fu_542_p1 <= bitcast_ln50_4_fu_529_p1(23 - 1 downto 0);
    trunc_ln50_fu_341_p1 <= bitcast_ln50_1_fu_337_p1(23 - 1 downto 0);
    zext_ln48_1_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln50_3_fu_471_p2),2));
    zext_ln48_2_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln50_5_fu_520_p2),2));
    zext_ln48_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln50_1_fu_422_p2),2));
    zext_ln50_1_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_reg_941),3));
    zext_ln50_2_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln50_1_reg_946),3));
    zext_ln50_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln50_7_fu_569_p2),2));
end behav;
