// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myFuncAccel4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myFuncAccel4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myFuncAccel4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> myFuncAccel4::ap_ST_fsm_state1 = "1";
const sc_lv<3> myFuncAccel4::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> myFuncAccel4::ap_ST_fsm_state30 = "100";
const sc_lv<32> myFuncAccel4::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myFuncAccel4::ap_const_boolean_1 = true;
const sc_lv<1> myFuncAccel4::ap_const_lv1_0 = "0";
const sc_lv<1> myFuncAccel4::ap_const_lv1_1 = "1";
const sc_lv<2> myFuncAccel4::ap_const_lv2_0 = "00";
const sc_lv<2> myFuncAccel4::ap_const_lv2_2 = "10";
const sc_lv<2> myFuncAccel4::ap_const_lv2_3 = "11";
const sc_lv<2> myFuncAccel4::ap_const_lv2_1 = "1";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1 = "1";
const bool myFuncAccel4::ap_const_boolean_0 = false;
const sc_lv<23> myFuncAccel4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_20 = "100000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_3F = "111111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_40 = "1000000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_5F = "1011111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_60 = "1100000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_7F = "1111111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_17 = "10111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1E = "11110";
const sc_lv<8> myFuncAccel4::ap_const_lv8_FF = "11111111";
const sc_lv<3> myFuncAccel4::ap_const_lv3_4 = "100";
const sc_lv<5> myFuncAccel4::ap_const_lv5_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_2 = "10";

myFuncAccel4::myFuncAccel4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din0(tmp_2_reg_918);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din1(ap_var_for_const0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->ce(grp_fu_248_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_248_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din0(tmp_2_1_reg_923);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din1(ap_var_for_const0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->ce(grp_fu_253_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_253_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din0(tmp_2_2_reg_928);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din1(ap_var_for_const0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->ce(grp_fu_258_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->dout(grp_fu_258_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din0(tmp_2_3_reg_933);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din1(ap_var_for_const0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->ce(grp_fu_263_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->dout(grp_fu_263_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5->din0(tmp_3_reg_946);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5->din1(tmp_2_0_1_reg_951);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5->ce(grp_fu_268_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5->dout(grp_fu_268_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6->din0(tmp_3_1_reg_956);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6->din1(tmp_2_1_1_reg_961);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6->ce(grp_fu_272_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6->dout(grp_fu_272_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7->din0(tmp_3_2_reg_966);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7->din1(tmp_2_2_1_reg_971);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7->ce(grp_fu_276_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7->dout(grp_fu_276_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8->din0(tmp_3_3_reg_976);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8->din1(tmp_2_3_1_reg_981);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8->ce(grp_fu_280_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8->dout(grp_fu_280_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9->din0(tmp_3_0_1_reg_994);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9->din1(tmp_2_0_2_reg_999);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9->ce(grp_fu_284_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9->dout(grp_fu_284_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10->din0(tmp_3_1_1_reg_1004);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10->din1(tmp_2_1_2_reg_1009);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10->ce(grp_fu_288_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10->dout(grp_fu_288_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11->din0(tmp_3_2_1_reg_1014);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11->din1(tmp_2_2_2_reg_1019);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11->ce(grp_fu_292_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11->dout(grp_fu_292_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12->din0(tmp_3_3_1_reg_1024);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12->din1(tmp_2_3_2_reg_1029);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12->ce(grp_fu_296_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12->dout(grp_fu_296_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13->din0(tmp_3_0_2_reg_1042);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13->din1(tmp_2_0_3_reg_1047);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13->ce(grp_fu_300_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13->dout(grp_fu_300_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14->din0(tmp_3_1_2_reg_1052);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14->din1(tmp_2_1_3_reg_1057);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14->ce(grp_fu_304_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14->dout(grp_fu_304_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15->din0(tmp_3_2_2_reg_1062);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15->din1(tmp_2_2_3_reg_1067);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15->ce(grp_fu_308_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15->dout(grp_fu_308_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16->din0(tmp_3_3_2_reg_1072);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16->din1(tmp_2_3_3_reg_1077);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16->ce(grp_fu_312_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16->dout(grp_fu_312_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17->din0(data0_0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17->din1(bitcast_ln56_fu_425_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17->ce(grp_fu_316_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17->dout(grp_fu_316_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18->din0(data0_4);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18->din1(bitcast_ln56_fu_425_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18->ce(grp_fu_320_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18->dout(grp_fu_320_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19->din0(data0_8);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19->din1(bitcast_ln56_fu_425_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19->ce(grp_fu_324_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19->dout(grp_fu_324_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20->din0(data0_12);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20->din1(bitcast_ln56_fu_425_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20->ce(grp_fu_328_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20->dout(grp_fu_328_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21->din0(data0_1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21->din1(bitcast_ln56_1_fu_483_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21->ce(grp_fu_332_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21->dout(grp_fu_332_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22->din0(data0_5);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22->din1(bitcast_ln56_1_fu_483_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22->ce(grp_fu_336_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22->dout(grp_fu_336_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23->din0(data0_9);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23->din1(bitcast_ln56_1_fu_483_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23->ce(grp_fu_340_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23->dout(grp_fu_340_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24->din0(data0_13);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24->din1(bitcast_ln56_1_fu_483_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24->ce(grp_fu_344_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24->dout(grp_fu_344_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25->din0(data0_2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25->din1(bitcast_ln56_2_fu_490_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25->ce(grp_fu_348_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25->dout(grp_fu_348_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26->din0(data0_6);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26->din1(bitcast_ln56_2_fu_490_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26->ce(grp_fu_352_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26->dout(grp_fu_352_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27->din0(data0_10);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27->din1(bitcast_ln56_2_fu_490_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27->ce(grp_fu_356_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27->dout(grp_fu_356_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28->din0(data0_14);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28->din1(bitcast_ln56_2_fu_490_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28->ce(grp_fu_360_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28->dout(grp_fu_360_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29->din0(data0_3);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29->din1(bitcast_ln56_3_fu_497_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29->ce(grp_fu_364_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29->dout(grp_fu_364_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30->din0(data0_7);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30->din1(bitcast_ln56_3_fu_497_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30->ce(grp_fu_368_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30->dout(grp_fu_368_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31->din0(data0_11);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31->din1(bitcast_ln56_3_fu_497_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31->ce(grp_fu_372_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31->dout(grp_fu_372_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32->din0(data0_15);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32->din1(bitcast_ln56_3_fu_497_p1);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32->ce(grp_fu_376_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32->dout(grp_fu_376_p2);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->reset(ap_rst_n_inv);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->din0(tmp_3_0_3_reg_1082);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->ce(grp_fu_380_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->opcode(ap_var_for_const1);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33->dout(grp_fu_380_p2);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->reset(ap_rst_n_inv);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->din0(tmp_3_1_3_reg_1088);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->ce(grp_fu_384_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->opcode(ap_var_for_const1);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34->dout(grp_fu_384_p2);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->reset(ap_rst_n_inv);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->din0(tmp_3_2_3_reg_1094);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->ce(grp_fu_388_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->opcode(ap_var_for_const1);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35->dout(grp_fu_388_p2);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->reset(ap_rst_n_inv);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->din0(tmp_3_3_3_reg_1100);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->ce(grp_fu_392_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->opcode(ap_var_for_const1);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36->dout(grp_fu_392_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln69_1_fu_710_p2);
    sensitive << ( zext_ln67_2_fu_650_p1 );
    sensitive << ( zext_ln69_fu_700_p1 );

    SC_METHOD(thread_add_ln69_2_fu_722_p2);
    sensitive << ( zext_ln69_2_fu_719_p1 );
    sensitive << ( zext_ln69_1_fu_716_p1 );

    SC_METHOD(thread_add_ln69_fu_704_p2);
    sensitive << ( zext_ln67_1_fu_600_p1 );
    sensitive << ( zext_ln67_fu_550_p1 );

    SC_METHOD(thread_and_ln69_1_fu_544_p2);
    sensitive << ( and_ln69_fu_539_p2 );
    sensitive << ( grp_fu_380_p2 );

    SC_METHOD(thread_and_ln69_2_fu_589_p2);
    sensitive << ( or_ln69_1_fu_478_p2 );
    sensitive << ( or_ln69_2_fu_583_p2 );

    SC_METHOD(thread_and_ln69_3_fu_594_p2);
    sensitive << ( and_ln69_2_fu_589_p2 );
    sensitive << ( grp_fu_384_p2 );

    SC_METHOD(thread_and_ln69_4_fu_639_p2);
    sensitive << ( or_ln69_1_fu_478_p2 );
    sensitive << ( or_ln69_3_fu_633_p2 );

    SC_METHOD(thread_and_ln69_5_fu_644_p2);
    sensitive << ( and_ln69_4_fu_639_p2 );
    sensitive << ( grp_fu_388_p2 );

    SC_METHOD(thread_and_ln69_6_fu_689_p2);
    sensitive << ( or_ln69_1_fu_478_p2 );
    sensitive << ( or_ln69_4_fu_683_p2 );

    SC_METHOD(thread_and_ln69_7_fu_694_p2);
    sensitive << ( and_ln69_6_fu_689_p2 );
    sensitive << ( grp_fu_392_p2 );

    SC_METHOD(thread_and_ln69_fu_539_p2);
    sensitive << ( or_ln69_1_fu_478_p2 );
    sensitive << ( or_ln69_fu_533_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);
    sensitive << ( data1_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( data1_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( data1_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_block_state28_io );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( data1_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_block_state28_io );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state28_io);
    sensitive << ( data_out_V_1_ack_in );
    sensitive << ( icmp_ln45_reg_878_pp0_iter25_reg );

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state29_io);
    sensitive << ( data_out_V_1_ack_in );
    sensitive << ( icmp_ln45_reg_878_pp0_iter26_reg );

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( data1_V_0_vld_out );
    sensitive << ( icmp_ln45_fu_410_p2 );

    SC_METHOD(thread_ap_block_state30);
    sensitive << ( data_out_V_TREADY );
    sensitive << ( data_out_V_1_state );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln45_fu_410_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( data_out_V_TREADY );
    sensitive << ( data_out_V_1_state );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( data_out_V_TREADY );
    sensitive << ( data_out_V_1_state );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln56_1_fu_483_p1);
    sensitive << ( p_Result_1_reg_895_pp0_iter4_reg );

    SC_METHOD(thread_bitcast_ln56_2_fu_490_p1);
    sensitive << ( p_Result_s_reg_900_pp0_iter9_reg );

    SC_METHOD(thread_bitcast_ln56_3_fu_497_p1);
    sensitive << ( p_Result_3_reg_905_pp0_iter14_reg );

    SC_METHOD(thread_bitcast_ln56_fu_425_p1);
    sensitive << ( trunc_ln681_fu_421_p1 );

    SC_METHOD(thread_bitcast_ln69_1_fu_396_p1);
    sensitive << ( threshold );

    SC_METHOD(thread_bitcast_ln69_2_fu_554_p1);
    sensitive << ( tmp_3_1_3_reg_1088_pp0_iter24_reg );

    SC_METHOD(thread_bitcast_ln69_3_fu_604_p1);
    sensitive << ( tmp_3_2_3_reg_1094_pp0_iter24_reg );

    SC_METHOD(thread_bitcast_ln69_4_fu_654_p1);
    sensitive << ( tmp_3_3_3_reg_1100_pp0_iter24_reg );

    SC_METHOD(thread_bitcast_ln69_fu_504_p1);
    sensitive << ( tmp_3_0_3_reg_1082_pp0_iter24_reg );

    SC_METHOD(thread_data1_V_0_ack_in);
    sensitive << ( data1_V_0_state );

    SC_METHOD(thread_data1_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data1_V_0_data_out);
    sensitive << ( data1_V_0_payload_A );
    sensitive << ( data1_V_0_payload_B );
    sensitive << ( data1_V_0_sel );

    SC_METHOD(thread_data1_V_0_load_A);
    sensitive << ( data1_V_0_sel_wr );
    sensitive << ( data1_V_0_state_cmp_full );

    SC_METHOD(thread_data1_V_0_load_B);
    sensitive << ( data1_V_0_sel_wr );
    sensitive << ( data1_V_0_state_cmp_full );

    SC_METHOD(thread_data1_V_0_sel);
    sensitive << ( data1_V_0_sel_rd );

    SC_METHOD(thread_data1_V_0_state_cmp_full);
    sensitive << ( data1_V_0_state );

    SC_METHOD(thread_data1_V_0_vld_in);
    sensitive << ( data1_V_TVALID );

    SC_METHOD(thread_data1_V_0_vld_out);
    sensitive << ( data1_V_0_state );

    SC_METHOD(thread_data1_V_TDATA_blk_n);
    sensitive << ( data1_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_fu_410_p2 );

    SC_METHOD(thread_data1_V_TREADY);
    sensitive << ( data1_V_0_state );

    SC_METHOD(thread_data_out_V_1_ack_in);
    sensitive << ( data_out_V_1_state );

    SC_METHOD(thread_data_out_V_1_ack_out);
    sensitive << ( data_out_V_TREADY );

    SC_METHOD(thread_data_out_V_1_data_out);
    sensitive << ( data_out_V_1_payload_A );
    sensitive << ( data_out_V_1_payload_B );
    sensitive << ( data_out_V_1_sel );

    SC_METHOD(thread_data_out_V_1_load_A);
    sensitive << ( data_out_V_1_sel_wr );
    sensitive << ( data_out_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_1_load_B);
    sensitive << ( data_out_V_1_sel_wr );
    sensitive << ( data_out_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_1_sel);
    sensitive << ( data_out_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_1_state_cmp_full);
    sensitive << ( data_out_V_1_state );

    SC_METHOD(thread_data_out_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter25_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_out_V_1_vld_out);
    sensitive << ( data_out_V_1_state );

    SC_METHOD(thread_data_out_V_TDATA);
    sensitive << ( data_out_V_1_data_out );

    SC_METHOD(thread_data_out_V_TDATA_blk_n);
    sensitive << ( data_out_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter25_reg );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter26_reg );

    SC_METHOD(thread_data_out_V_TVALID);
    sensitive << ( data_out_V_1_state );

    SC_METHOD(thread_grp_fu_248_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_253_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_258_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_263_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_268_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_272_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_276_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_280_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_284_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_288_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_292_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_296_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_300_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_304_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_308_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_312_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_316_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_320_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_324_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_328_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_332_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_336_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_340_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_344_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_348_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_352_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_356_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_360_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_364_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_368_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_372_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_376_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_380_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_384_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_388_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_392_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_415_p2);
    sensitive << ( i_1_reg_237 );

    SC_METHOD(thread_icmp_ln45_fu_410_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_1_reg_237 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln69_1_fu_527_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( trunc_ln69_1_fu_517_p1 );

    SC_METHOD(thread_icmp_ln69_2_fu_472_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_463_p4 );

    SC_METHOD(thread_icmp_ln69_3_fu_404_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( trunc_ln69_fu_400_p1 );

    SC_METHOD(thread_icmp_ln69_4_fu_571_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( tmp_6_fu_557_p4 );

    SC_METHOD(thread_icmp_ln69_5_fu_577_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( trunc_ln69_2_fu_567_p1 );

    SC_METHOD(thread_icmp_ln69_6_fu_621_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( tmp_9_fu_607_p4 );

    SC_METHOD(thread_icmp_ln69_7_fu_627_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( trunc_ln69_3_fu_617_p1 );

    SC_METHOD(thread_icmp_ln69_8_fu_671_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( tmp_7_fu_657_p4 );

    SC_METHOD(thread_icmp_ln69_9_fu_677_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( trunc_ln69_4_fu_667_p1 );

    SC_METHOD(thread_icmp_ln69_fu_521_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter24_reg );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( tmp_1_fu_507_p4 );

    SC_METHOD(thread_icmp_ln75_fu_728_p2);
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( icmp_ln45_reg_878_pp0_iter25_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( add_ln69_2_fu_722_p2 );

    SC_METHOD(thread_or_ln69_1_fu_478_p2);
    sensitive << ( icmp_ln69_3_fu_404_p2 );
    sensitive << ( icmp_ln69_2_fu_472_p2 );

    SC_METHOD(thread_or_ln69_2_fu_583_p2);
    sensitive << ( icmp_ln69_5_fu_577_p2 );
    sensitive << ( icmp_ln69_4_fu_571_p2 );

    SC_METHOD(thread_or_ln69_3_fu_633_p2);
    sensitive << ( icmp_ln69_7_fu_627_p2 );
    sensitive << ( icmp_ln69_6_fu_621_p2 );

    SC_METHOD(thread_or_ln69_4_fu_683_p2);
    sensitive << ( icmp_ln69_9_fu_677_p2 );
    sensitive << ( icmp_ln69_8_fu_671_p2 );

    SC_METHOD(thread_or_ln69_fu_533_p2);
    sensitive << ( icmp_ln69_1_fu_527_p2 );
    sensitive << ( icmp_ln69_fu_521_p2 );

    SC_METHOD(thread_p_Result_2_3_fu_762_p5);
    sensitive << ( select_ln76_3_fu_755_p3 );
    sensitive << ( select_ln76_2_fu_748_p3 );
    sensitive << ( select_ln76_1_fu_741_p3 );
    sensitive << ( select_ln76_fu_734_p3 );

    SC_METHOD(thread_select_ln76_1_fu_741_p3);
    sensitive << ( bitcast_ln69_2_reg_1111 );
    sensitive << ( icmp_ln75_fu_728_p2 );

    SC_METHOD(thread_select_ln76_2_fu_748_p3);
    sensitive << ( bitcast_ln69_3_reg_1116 );
    sensitive << ( icmp_ln75_fu_728_p2 );

    SC_METHOD(thread_select_ln76_3_fu_755_p3);
    sensitive << ( bitcast_ln69_4_reg_1121 );
    sensitive << ( icmp_ln75_fu_728_p2 );

    SC_METHOD(thread_select_ln76_fu_734_p3);
    sensitive << ( bitcast_ln69_reg_1106 );
    sensitive << ( icmp_ln75_fu_728_p2 );

    SC_METHOD(thread_tmp_1_fu_507_p4);
    sensitive << ( bitcast_ln69_fu_504_p1 );

    SC_METHOD(thread_tmp_4_fu_463_p4);
    sensitive << ( bitcast_ln69_1_fu_396_p1 );

    SC_METHOD(thread_tmp_6_fu_557_p4);
    sensitive << ( bitcast_ln69_2_fu_554_p1 );

    SC_METHOD(thread_tmp_7_fu_657_p4);
    sensitive << ( bitcast_ln69_4_fu_654_p1 );

    SC_METHOD(thread_tmp_9_fu_607_p4);
    sensitive << ( bitcast_ln69_3_fu_604_p1 );

    SC_METHOD(thread_trunc_ln681_fu_421_p1);
    sensitive << ( data1_V_0_data_out );

    SC_METHOD(thread_trunc_ln69_1_fu_517_p1);
    sensitive << ( bitcast_ln69_fu_504_p1 );

    SC_METHOD(thread_trunc_ln69_2_fu_567_p1);
    sensitive << ( bitcast_ln69_2_fu_554_p1 );

    SC_METHOD(thread_trunc_ln69_3_fu_617_p1);
    sensitive << ( bitcast_ln69_3_fu_604_p1 );

    SC_METHOD(thread_trunc_ln69_4_fu_667_p1);
    sensitive << ( bitcast_ln69_4_fu_654_p1 );

    SC_METHOD(thread_trunc_ln69_fu_400_p1);
    sensitive << ( bitcast_ln69_1_fu_396_p1 );

    SC_METHOD(thread_zext_ln67_1_fu_600_p1);
    sensitive << ( and_ln69_3_fu_594_p2 );

    SC_METHOD(thread_zext_ln67_2_fu_650_p1);
    sensitive << ( and_ln69_5_fu_644_p2 );

    SC_METHOD(thread_zext_ln67_fu_550_p1);
    sensitive << ( and_ln69_1_fu_544_p2 );

    SC_METHOD(thread_zext_ln69_1_fu_716_p1);
    sensitive << ( add_ln69_reg_1126 );

    SC_METHOD(thread_zext_ln69_2_fu_719_p1);
    sensitive << ( add_ln69_1_reg_1131 );

    SC_METHOD(thread_zext_ln69_fu_700_p1);
    sensitive << ( and_ln69_7_fu_694_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_out_V_TREADY );
    sensitive << ( data_out_V_1_state );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln45_fu_410_p2 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "001";
    data1_V_0_sel_rd = SC_LOGIC_0;
    data1_V_0_sel_wr = SC_LOGIC_0;
    data1_V_0_state = "00";
    data_out_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_1_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myFuncAccel4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, size, "(port)size");
    sc_trace(mVcdFile, dim, "(port)dim");
    sc_trace(mVcdFile, threshold, "(port)threshold");
    sc_trace(mVcdFile, data0_0, "(port)data0_0");
    sc_trace(mVcdFile, data0_1, "(port)data0_1");
    sc_trace(mVcdFile, data0_2, "(port)data0_2");
    sc_trace(mVcdFile, data0_3, "(port)data0_3");
    sc_trace(mVcdFile, data0_4, "(port)data0_4");
    sc_trace(mVcdFile, data0_5, "(port)data0_5");
    sc_trace(mVcdFile, data0_6, "(port)data0_6");
    sc_trace(mVcdFile, data0_7, "(port)data0_7");
    sc_trace(mVcdFile, data0_8, "(port)data0_8");
    sc_trace(mVcdFile, data0_9, "(port)data0_9");
    sc_trace(mVcdFile, data0_10, "(port)data0_10");
    sc_trace(mVcdFile, data0_11, "(port)data0_11");
    sc_trace(mVcdFile, data0_12, "(port)data0_12");
    sc_trace(mVcdFile, data0_13, "(port)data0_13");
    sc_trace(mVcdFile, data0_14, "(port)data0_14");
    sc_trace(mVcdFile, data0_15, "(port)data0_15");
    sc_trace(mVcdFile, data1_V_TDATA, "(port)data1_V_TDATA");
    sc_trace(mVcdFile, data1_V_TVALID, "(port)data1_V_TVALID");
    sc_trace(mVcdFile, data1_V_TREADY, "(port)data1_V_TREADY");
    sc_trace(mVcdFile, data_out_V_TDATA, "(port)data_out_V_TDATA");
    sc_trace(mVcdFile, data_out_V_TVALID, "(port)data_out_V_TVALID");
    sc_trace(mVcdFile, data_out_V_TREADY, "(port)data_out_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data1_V_0_data_out, "data1_V_0_data_out");
    sc_trace(mVcdFile, data1_V_0_vld_in, "data1_V_0_vld_in");
    sc_trace(mVcdFile, data1_V_0_vld_out, "data1_V_0_vld_out");
    sc_trace(mVcdFile, data1_V_0_ack_in, "data1_V_0_ack_in");
    sc_trace(mVcdFile, data1_V_0_ack_out, "data1_V_0_ack_out");
    sc_trace(mVcdFile, data1_V_0_payload_A, "data1_V_0_payload_A");
    sc_trace(mVcdFile, data1_V_0_payload_B, "data1_V_0_payload_B");
    sc_trace(mVcdFile, data1_V_0_sel_rd, "data1_V_0_sel_rd");
    sc_trace(mVcdFile, data1_V_0_sel_wr, "data1_V_0_sel_wr");
    sc_trace(mVcdFile, data1_V_0_sel, "data1_V_0_sel");
    sc_trace(mVcdFile, data1_V_0_load_A, "data1_V_0_load_A");
    sc_trace(mVcdFile, data1_V_0_load_B, "data1_V_0_load_B");
    sc_trace(mVcdFile, data1_V_0_state, "data1_V_0_state");
    sc_trace(mVcdFile, data1_V_0_state_cmp_full, "data1_V_0_state_cmp_full");
    sc_trace(mVcdFile, data_out_V_1_data_out, "data_out_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_1_vld_in, "data_out_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_1_vld_out, "data_out_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_1_ack_in, "data_out_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_1_ack_out, "data_out_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_1_payload_A, "data_out_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_1_payload_B, "data_out_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_1_sel_rd, "data_out_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_1_sel_wr, "data_out_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_1_sel, "data_out_V_1_sel");
    sc_trace(mVcdFile, data_out_V_1_load_A, "data_out_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_1_load_B, "data_out_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_1_state, "data_out_V_1_state");
    sc_trace(mVcdFile, data_out_V_1_state_cmp_full, "data_out_V_1_state_cmp_full");
    sc_trace(mVcdFile, data1_V_TDATA_blk_n, "data1_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln45_fu_410_p2, "icmp_ln45_fu_410_p2");
    sc_trace(mVcdFile, data_out_V_TDATA_blk_n, "data_out_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, icmp_ln45_reg_878, "icmp_ln45_reg_878");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter25_reg, "icmp_ln45_reg_878_pp0_iter25_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter26_reg, "icmp_ln45_reg_878_pp0_iter26_reg");
    sc_trace(mVcdFile, i_1_reg_237, "i_1_reg_237");
    sc_trace(mVcdFile, bitcast_ln69_1_fu_396_p1, "bitcast_ln69_1_fu_396_p1");
    sc_trace(mVcdFile, icmp_ln69_3_fu_404_p2, "icmp_ln69_3_fu_404_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter22, "ap_block_state24_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter23, "ap_block_state25_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter24, "ap_block_state26_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter25, "ap_block_state27_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter26, "ap_block_state28_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state28_io, "ap_block_state28_io");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter27, "ap_block_state29_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_state29_io, "ap_block_state29_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter1_reg, "icmp_ln45_reg_878_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter2_reg, "icmp_ln45_reg_878_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter3_reg, "icmp_ln45_reg_878_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter4_reg, "icmp_ln45_reg_878_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter5_reg, "icmp_ln45_reg_878_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter6_reg, "icmp_ln45_reg_878_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter7_reg, "icmp_ln45_reg_878_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter8_reg, "icmp_ln45_reg_878_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter9_reg, "icmp_ln45_reg_878_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter10_reg, "icmp_ln45_reg_878_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter11_reg, "icmp_ln45_reg_878_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter12_reg, "icmp_ln45_reg_878_pp0_iter12_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter13_reg, "icmp_ln45_reg_878_pp0_iter13_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter14_reg, "icmp_ln45_reg_878_pp0_iter14_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter15_reg, "icmp_ln45_reg_878_pp0_iter15_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter16_reg, "icmp_ln45_reg_878_pp0_iter16_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter17_reg, "icmp_ln45_reg_878_pp0_iter17_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter18_reg, "icmp_ln45_reg_878_pp0_iter18_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter19_reg, "icmp_ln45_reg_878_pp0_iter19_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter20_reg, "icmp_ln45_reg_878_pp0_iter20_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter21_reg, "icmp_ln45_reg_878_pp0_iter21_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter22_reg, "icmp_ln45_reg_878_pp0_iter22_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter23_reg, "icmp_ln45_reg_878_pp0_iter23_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_878_pp0_iter24_reg, "icmp_ln45_reg_878_pp0_iter24_reg");
    sc_trace(mVcdFile, i_fu_415_p2, "i_fu_415_p2");
    sc_trace(mVcdFile, bitcast_ln56_fu_425_p1, "bitcast_ln56_fu_425_p1");
    sc_trace(mVcdFile, p_Result_1_reg_895, "p_Result_1_reg_895");
    sc_trace(mVcdFile, p_Result_1_reg_895_pp0_iter1_reg, "p_Result_1_reg_895_pp0_iter1_reg");
    sc_trace(mVcdFile, p_Result_1_reg_895_pp0_iter2_reg, "p_Result_1_reg_895_pp0_iter2_reg");
    sc_trace(mVcdFile, p_Result_1_reg_895_pp0_iter3_reg, "p_Result_1_reg_895_pp0_iter3_reg");
    sc_trace(mVcdFile, p_Result_1_reg_895_pp0_iter4_reg, "p_Result_1_reg_895_pp0_iter4_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900, "p_Result_s_reg_900");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter1_reg, "p_Result_s_reg_900_pp0_iter1_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter2_reg, "p_Result_s_reg_900_pp0_iter2_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter3_reg, "p_Result_s_reg_900_pp0_iter3_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter4_reg, "p_Result_s_reg_900_pp0_iter4_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter5_reg, "p_Result_s_reg_900_pp0_iter5_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter6_reg, "p_Result_s_reg_900_pp0_iter6_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter7_reg, "p_Result_s_reg_900_pp0_iter7_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter8_reg, "p_Result_s_reg_900_pp0_iter8_reg");
    sc_trace(mVcdFile, p_Result_s_reg_900_pp0_iter9_reg, "p_Result_s_reg_900_pp0_iter9_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905, "p_Result_3_reg_905");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter1_reg, "p_Result_3_reg_905_pp0_iter1_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter2_reg, "p_Result_3_reg_905_pp0_iter2_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter3_reg, "p_Result_3_reg_905_pp0_iter3_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter4_reg, "p_Result_3_reg_905_pp0_iter4_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter5_reg, "p_Result_3_reg_905_pp0_iter5_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter6_reg, "p_Result_3_reg_905_pp0_iter6_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter7_reg, "p_Result_3_reg_905_pp0_iter7_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter8_reg, "p_Result_3_reg_905_pp0_iter8_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter9_reg, "p_Result_3_reg_905_pp0_iter9_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter10_reg, "p_Result_3_reg_905_pp0_iter10_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter11_reg, "p_Result_3_reg_905_pp0_iter11_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter12_reg, "p_Result_3_reg_905_pp0_iter12_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter13_reg, "p_Result_3_reg_905_pp0_iter13_reg");
    sc_trace(mVcdFile, p_Result_3_reg_905_pp0_iter14_reg, "p_Result_3_reg_905_pp0_iter14_reg");
    sc_trace(mVcdFile, or_ln69_1_fu_478_p2, "or_ln69_1_fu_478_p2");
    sc_trace(mVcdFile, grp_fu_316_p2, "grp_fu_316_p2");
    sc_trace(mVcdFile, tmp_2_reg_918, "tmp_2_reg_918");
    sc_trace(mVcdFile, grp_fu_320_p2, "grp_fu_320_p2");
    sc_trace(mVcdFile, tmp_2_1_reg_923, "tmp_2_1_reg_923");
    sc_trace(mVcdFile, grp_fu_324_p2, "grp_fu_324_p2");
    sc_trace(mVcdFile, tmp_2_2_reg_928, "tmp_2_2_reg_928");
    sc_trace(mVcdFile, grp_fu_328_p2, "grp_fu_328_p2");
    sc_trace(mVcdFile, tmp_2_3_reg_933, "tmp_2_3_reg_933");
    sc_trace(mVcdFile, bitcast_ln56_1_fu_483_p1, "bitcast_ln56_1_fu_483_p1");
    sc_trace(mVcdFile, grp_fu_248_p2, "grp_fu_248_p2");
    sc_trace(mVcdFile, tmp_3_reg_946, "tmp_3_reg_946");
    sc_trace(mVcdFile, grp_fu_332_p2, "grp_fu_332_p2");
    sc_trace(mVcdFile, tmp_2_0_1_reg_951, "tmp_2_0_1_reg_951");
    sc_trace(mVcdFile, grp_fu_253_p2, "grp_fu_253_p2");
    sc_trace(mVcdFile, tmp_3_1_reg_956, "tmp_3_1_reg_956");
    sc_trace(mVcdFile, grp_fu_336_p2, "grp_fu_336_p2");
    sc_trace(mVcdFile, tmp_2_1_1_reg_961, "tmp_2_1_1_reg_961");
    sc_trace(mVcdFile, grp_fu_258_p2, "grp_fu_258_p2");
    sc_trace(mVcdFile, tmp_3_2_reg_966, "tmp_3_2_reg_966");
    sc_trace(mVcdFile, grp_fu_340_p2, "grp_fu_340_p2");
    sc_trace(mVcdFile, tmp_2_2_1_reg_971, "tmp_2_2_1_reg_971");
    sc_trace(mVcdFile, grp_fu_263_p2, "grp_fu_263_p2");
    sc_trace(mVcdFile, tmp_3_3_reg_976, "tmp_3_3_reg_976");
    sc_trace(mVcdFile, grp_fu_344_p2, "grp_fu_344_p2");
    sc_trace(mVcdFile, tmp_2_3_1_reg_981, "tmp_2_3_1_reg_981");
    sc_trace(mVcdFile, bitcast_ln56_2_fu_490_p1, "bitcast_ln56_2_fu_490_p1");
    sc_trace(mVcdFile, grp_fu_268_p2, "grp_fu_268_p2");
    sc_trace(mVcdFile, tmp_3_0_1_reg_994, "tmp_3_0_1_reg_994");
    sc_trace(mVcdFile, grp_fu_348_p2, "grp_fu_348_p2");
    sc_trace(mVcdFile, tmp_2_0_2_reg_999, "tmp_2_0_2_reg_999");
    sc_trace(mVcdFile, grp_fu_272_p2, "grp_fu_272_p2");
    sc_trace(mVcdFile, tmp_3_1_1_reg_1004, "tmp_3_1_1_reg_1004");
    sc_trace(mVcdFile, grp_fu_352_p2, "grp_fu_352_p2");
    sc_trace(mVcdFile, tmp_2_1_2_reg_1009, "tmp_2_1_2_reg_1009");
    sc_trace(mVcdFile, grp_fu_276_p2, "grp_fu_276_p2");
    sc_trace(mVcdFile, tmp_3_2_1_reg_1014, "tmp_3_2_1_reg_1014");
    sc_trace(mVcdFile, grp_fu_356_p2, "grp_fu_356_p2");
    sc_trace(mVcdFile, tmp_2_2_2_reg_1019, "tmp_2_2_2_reg_1019");
    sc_trace(mVcdFile, grp_fu_280_p2, "grp_fu_280_p2");
    sc_trace(mVcdFile, tmp_3_3_1_reg_1024, "tmp_3_3_1_reg_1024");
    sc_trace(mVcdFile, grp_fu_360_p2, "grp_fu_360_p2");
    sc_trace(mVcdFile, tmp_2_3_2_reg_1029, "tmp_2_3_2_reg_1029");
    sc_trace(mVcdFile, bitcast_ln56_3_fu_497_p1, "bitcast_ln56_3_fu_497_p1");
    sc_trace(mVcdFile, grp_fu_284_p2, "grp_fu_284_p2");
    sc_trace(mVcdFile, tmp_3_0_2_reg_1042, "tmp_3_0_2_reg_1042");
    sc_trace(mVcdFile, grp_fu_364_p2, "grp_fu_364_p2");
    sc_trace(mVcdFile, tmp_2_0_3_reg_1047, "tmp_2_0_3_reg_1047");
    sc_trace(mVcdFile, grp_fu_288_p2, "grp_fu_288_p2");
    sc_trace(mVcdFile, tmp_3_1_2_reg_1052, "tmp_3_1_2_reg_1052");
    sc_trace(mVcdFile, grp_fu_368_p2, "grp_fu_368_p2");
    sc_trace(mVcdFile, tmp_2_1_3_reg_1057, "tmp_2_1_3_reg_1057");
    sc_trace(mVcdFile, grp_fu_292_p2, "grp_fu_292_p2");
    sc_trace(mVcdFile, tmp_3_2_2_reg_1062, "tmp_3_2_2_reg_1062");
    sc_trace(mVcdFile, grp_fu_372_p2, "grp_fu_372_p2");
    sc_trace(mVcdFile, tmp_2_2_3_reg_1067, "tmp_2_2_3_reg_1067");
    sc_trace(mVcdFile, grp_fu_296_p2, "grp_fu_296_p2");
    sc_trace(mVcdFile, tmp_3_3_2_reg_1072, "tmp_3_3_2_reg_1072");
    sc_trace(mVcdFile, grp_fu_376_p2, "grp_fu_376_p2");
    sc_trace(mVcdFile, tmp_2_3_3_reg_1077, "tmp_2_3_3_reg_1077");
    sc_trace(mVcdFile, grp_fu_300_p2, "grp_fu_300_p2");
    sc_trace(mVcdFile, tmp_3_0_3_reg_1082, "tmp_3_0_3_reg_1082");
    sc_trace(mVcdFile, tmp_3_0_3_reg_1082_pp0_iter24_reg, "tmp_3_0_3_reg_1082_pp0_iter24_reg");
    sc_trace(mVcdFile, grp_fu_304_p2, "grp_fu_304_p2");
    sc_trace(mVcdFile, tmp_3_1_3_reg_1088, "tmp_3_1_3_reg_1088");
    sc_trace(mVcdFile, tmp_3_1_3_reg_1088_pp0_iter24_reg, "tmp_3_1_3_reg_1088_pp0_iter24_reg");
    sc_trace(mVcdFile, grp_fu_308_p2, "grp_fu_308_p2");
    sc_trace(mVcdFile, tmp_3_2_3_reg_1094, "tmp_3_2_3_reg_1094");
    sc_trace(mVcdFile, tmp_3_2_3_reg_1094_pp0_iter24_reg, "tmp_3_2_3_reg_1094_pp0_iter24_reg");
    sc_trace(mVcdFile, grp_fu_312_p2, "grp_fu_312_p2");
    sc_trace(mVcdFile, tmp_3_3_3_reg_1100, "tmp_3_3_3_reg_1100");
    sc_trace(mVcdFile, tmp_3_3_3_reg_1100_pp0_iter24_reg, "tmp_3_3_3_reg_1100_pp0_iter24_reg");
    sc_trace(mVcdFile, bitcast_ln69_fu_504_p1, "bitcast_ln69_fu_504_p1");
    sc_trace(mVcdFile, bitcast_ln69_reg_1106, "bitcast_ln69_reg_1106");
    sc_trace(mVcdFile, bitcast_ln69_2_fu_554_p1, "bitcast_ln69_2_fu_554_p1");
    sc_trace(mVcdFile, bitcast_ln69_2_reg_1111, "bitcast_ln69_2_reg_1111");
    sc_trace(mVcdFile, bitcast_ln69_3_fu_604_p1, "bitcast_ln69_3_fu_604_p1");
    sc_trace(mVcdFile, bitcast_ln69_3_reg_1116, "bitcast_ln69_3_reg_1116");
    sc_trace(mVcdFile, bitcast_ln69_4_fu_654_p1, "bitcast_ln69_4_fu_654_p1");
    sc_trace(mVcdFile, bitcast_ln69_4_reg_1121, "bitcast_ln69_4_reg_1121");
    sc_trace(mVcdFile, add_ln69_fu_704_p2, "add_ln69_fu_704_p2");
    sc_trace(mVcdFile, add_ln69_reg_1126, "add_ln69_reg_1126");
    sc_trace(mVcdFile, add_ln69_1_fu_710_p2, "add_ln69_1_fu_710_p2");
    sc_trace(mVcdFile, add_ln69_1_reg_1131, "add_ln69_1_reg_1131");
    sc_trace(mVcdFile, p_Result_2_3_fu_762_p5, "p_Result_2_3_fu_762_p5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln69_fu_400_p1, "trunc_ln69_fu_400_p1");
    sc_trace(mVcdFile, trunc_ln681_fu_421_p1, "trunc_ln681_fu_421_p1");
    sc_trace(mVcdFile, tmp_4_fu_463_p4, "tmp_4_fu_463_p4");
    sc_trace(mVcdFile, icmp_ln69_2_fu_472_p2, "icmp_ln69_2_fu_472_p2");
    sc_trace(mVcdFile, tmp_1_fu_507_p4, "tmp_1_fu_507_p4");
    sc_trace(mVcdFile, trunc_ln69_1_fu_517_p1, "trunc_ln69_1_fu_517_p1");
    sc_trace(mVcdFile, icmp_ln69_1_fu_527_p2, "icmp_ln69_1_fu_527_p2");
    sc_trace(mVcdFile, icmp_ln69_fu_521_p2, "icmp_ln69_fu_521_p2");
    sc_trace(mVcdFile, or_ln69_fu_533_p2, "or_ln69_fu_533_p2");
    sc_trace(mVcdFile, and_ln69_fu_539_p2, "and_ln69_fu_539_p2");
    sc_trace(mVcdFile, grp_fu_380_p2, "grp_fu_380_p2");
    sc_trace(mVcdFile, and_ln69_1_fu_544_p2, "and_ln69_1_fu_544_p2");
    sc_trace(mVcdFile, tmp_6_fu_557_p4, "tmp_6_fu_557_p4");
    sc_trace(mVcdFile, trunc_ln69_2_fu_567_p1, "trunc_ln69_2_fu_567_p1");
    sc_trace(mVcdFile, icmp_ln69_5_fu_577_p2, "icmp_ln69_5_fu_577_p2");
    sc_trace(mVcdFile, icmp_ln69_4_fu_571_p2, "icmp_ln69_4_fu_571_p2");
    sc_trace(mVcdFile, or_ln69_2_fu_583_p2, "or_ln69_2_fu_583_p2");
    sc_trace(mVcdFile, and_ln69_2_fu_589_p2, "and_ln69_2_fu_589_p2");
    sc_trace(mVcdFile, grp_fu_384_p2, "grp_fu_384_p2");
    sc_trace(mVcdFile, and_ln69_3_fu_594_p2, "and_ln69_3_fu_594_p2");
    sc_trace(mVcdFile, tmp_9_fu_607_p4, "tmp_9_fu_607_p4");
    sc_trace(mVcdFile, trunc_ln69_3_fu_617_p1, "trunc_ln69_3_fu_617_p1");
    sc_trace(mVcdFile, icmp_ln69_7_fu_627_p2, "icmp_ln69_7_fu_627_p2");
    sc_trace(mVcdFile, icmp_ln69_6_fu_621_p2, "icmp_ln69_6_fu_621_p2");
    sc_trace(mVcdFile, or_ln69_3_fu_633_p2, "or_ln69_3_fu_633_p2");
    sc_trace(mVcdFile, and_ln69_4_fu_639_p2, "and_ln69_4_fu_639_p2");
    sc_trace(mVcdFile, grp_fu_388_p2, "grp_fu_388_p2");
    sc_trace(mVcdFile, and_ln69_5_fu_644_p2, "and_ln69_5_fu_644_p2");
    sc_trace(mVcdFile, tmp_7_fu_657_p4, "tmp_7_fu_657_p4");
    sc_trace(mVcdFile, trunc_ln69_4_fu_667_p1, "trunc_ln69_4_fu_667_p1");
    sc_trace(mVcdFile, icmp_ln69_9_fu_677_p2, "icmp_ln69_9_fu_677_p2");
    sc_trace(mVcdFile, icmp_ln69_8_fu_671_p2, "icmp_ln69_8_fu_671_p2");
    sc_trace(mVcdFile, or_ln69_4_fu_683_p2, "or_ln69_4_fu_683_p2");
    sc_trace(mVcdFile, and_ln69_6_fu_689_p2, "and_ln69_6_fu_689_p2");
    sc_trace(mVcdFile, grp_fu_392_p2, "grp_fu_392_p2");
    sc_trace(mVcdFile, and_ln69_7_fu_694_p2, "and_ln69_7_fu_694_p2");
    sc_trace(mVcdFile, zext_ln67_1_fu_600_p1, "zext_ln67_1_fu_600_p1");
    sc_trace(mVcdFile, zext_ln67_fu_550_p1, "zext_ln67_fu_550_p1");
    sc_trace(mVcdFile, zext_ln67_2_fu_650_p1, "zext_ln67_2_fu_650_p1");
    sc_trace(mVcdFile, zext_ln69_fu_700_p1, "zext_ln69_fu_700_p1");
    sc_trace(mVcdFile, zext_ln69_2_fu_719_p1, "zext_ln69_2_fu_719_p1");
    sc_trace(mVcdFile, zext_ln69_1_fu_716_p1, "zext_ln69_1_fu_716_p1");
    sc_trace(mVcdFile, add_ln69_2_fu_722_p2, "add_ln69_2_fu_722_p2");
    sc_trace(mVcdFile, icmp_ln75_fu_728_p2, "icmp_ln75_fu_728_p2");
    sc_trace(mVcdFile, select_ln76_3_fu_755_p3, "select_ln76_3_fu_755_p3");
    sc_trace(mVcdFile, select_ln76_2_fu_748_p3, "select_ln76_2_fu_748_p3");
    sc_trace(mVcdFile, select_ln76_1_fu_741_p3, "select_ln76_1_fu_741_p3");
    sc_trace(mVcdFile, select_ln76_fu_734_p3, "select_ln76_fu_734_p3");
    sc_trace(mVcdFile, grp_fu_248_ce, "grp_fu_248_ce");
    sc_trace(mVcdFile, grp_fu_253_ce, "grp_fu_253_ce");
    sc_trace(mVcdFile, grp_fu_258_ce, "grp_fu_258_ce");
    sc_trace(mVcdFile, grp_fu_263_ce, "grp_fu_263_ce");
    sc_trace(mVcdFile, grp_fu_268_ce, "grp_fu_268_ce");
    sc_trace(mVcdFile, grp_fu_272_ce, "grp_fu_272_ce");
    sc_trace(mVcdFile, grp_fu_276_ce, "grp_fu_276_ce");
    sc_trace(mVcdFile, grp_fu_280_ce, "grp_fu_280_ce");
    sc_trace(mVcdFile, grp_fu_284_ce, "grp_fu_284_ce");
    sc_trace(mVcdFile, grp_fu_288_ce, "grp_fu_288_ce");
    sc_trace(mVcdFile, grp_fu_292_ce, "grp_fu_292_ce");
    sc_trace(mVcdFile, grp_fu_296_ce, "grp_fu_296_ce");
    sc_trace(mVcdFile, grp_fu_300_ce, "grp_fu_300_ce");
    sc_trace(mVcdFile, grp_fu_304_ce, "grp_fu_304_ce");
    sc_trace(mVcdFile, grp_fu_308_ce, "grp_fu_308_ce");
    sc_trace(mVcdFile, grp_fu_312_ce, "grp_fu_312_ce");
    sc_trace(mVcdFile, grp_fu_316_ce, "grp_fu_316_ce");
    sc_trace(mVcdFile, grp_fu_320_ce, "grp_fu_320_ce");
    sc_trace(mVcdFile, grp_fu_324_ce, "grp_fu_324_ce");
    sc_trace(mVcdFile, grp_fu_328_ce, "grp_fu_328_ce");
    sc_trace(mVcdFile, grp_fu_332_ce, "grp_fu_332_ce");
    sc_trace(mVcdFile, grp_fu_336_ce, "grp_fu_336_ce");
    sc_trace(mVcdFile, grp_fu_340_ce, "grp_fu_340_ce");
    sc_trace(mVcdFile, grp_fu_344_ce, "grp_fu_344_ce");
    sc_trace(mVcdFile, grp_fu_348_ce, "grp_fu_348_ce");
    sc_trace(mVcdFile, grp_fu_352_ce, "grp_fu_352_ce");
    sc_trace(mVcdFile, grp_fu_356_ce, "grp_fu_356_ce");
    sc_trace(mVcdFile, grp_fu_360_ce, "grp_fu_360_ce");
    sc_trace(mVcdFile, grp_fu_364_ce, "grp_fu_364_ce");
    sc_trace(mVcdFile, grp_fu_368_ce, "grp_fu_368_ce");
    sc_trace(mVcdFile, grp_fu_372_ce, "grp_fu_372_ce");
    sc_trace(mVcdFile, grp_fu_376_ce, "grp_fu_376_ce");
    sc_trace(mVcdFile, grp_fu_380_ce, "grp_fu_380_ce");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, grp_fu_384_ce, "grp_fu_384_ce");
    sc_trace(mVcdFile, grp_fu_388_ce, "grp_fu_388_ce");
    sc_trace(mVcdFile, grp_fu_392_ce, "grp_fu_392_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_block_state30, "ap_block_state30");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("myFuncAccel4.hdltvin.dat");
    mHdltvoutHandle.open("myFuncAccel4.hdltvout.dat");
}

myFuncAccel4::~myFuncAccel4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U5;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U6;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U7;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U8;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U9;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U10;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U11;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U12;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U13;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U14;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U15;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U16;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U17;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U18;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U19;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U20;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U21;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U22;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U23;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U24;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U25;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U26;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U27;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U28;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U29;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U30;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U31;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U32;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U33;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U34;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U35;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U36;
}

void myFuncAccel4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void myFuncAccel4::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void myFuncAccel4::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter27 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data1_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_vld_out.read()))) {
            data1_V_0_sel_rd =  (sc_logic) (~data1_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data1_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_ack_in.read()))) {
            data1_V_0_sel_wr =  (sc_logic) (~data1_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data1_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_2)))) {
            data1_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_1)))) {
            data1_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(data1_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_ack_out.read()))))) {
            data1_V_0_state = ap_const_lv2_3;
        } else {
            data1_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_vld_out.read()))) {
            data_out_V_1_sel_rd =  (sc_logic) (~data_out_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_ack_in.read()))) {
            data_out_V_1_sel_wr =  (sc_logic) (~data_out_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_1_state.read())))) {
            data_out_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_1_state.read())))) {
            data_out_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_ack_out.read()))))) {
            data_out_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_1_reg_237 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_1_reg_237 = i_fu_415_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter24_reg.read()))) {
        add_ln69_1_reg_1131 = add_ln69_1_fu_710_p2.read();
        add_ln69_reg_1126 = add_ln69_fu_704_p2.read();
        bitcast_ln69_2_reg_1111 = bitcast_ln69_2_fu_554_p1.read();
        bitcast_ln69_3_reg_1116 = bitcast_ln69_3_fu_604_p1.read();
        bitcast_ln69_4_reg_1121 = bitcast_ln69_4_fu_654_p1.read();
        bitcast_ln69_reg_1106 = bitcast_ln69_fu_504_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_load_A.read())) {
        data1_V_0_payload_A = data1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_load_B.read())) {
        data1_V_0_payload_B = data1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_load_A.read())) {
        data_out_V_1_payload_A = p_Result_2_3_fu_762_p5.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_load_B.read())) {
        data_out_V_1_payload_B = p_Result_2_3_fu_762_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln45_reg_878 = icmp_ln45_fu_410_p2.read();
        icmp_ln45_reg_878_pp0_iter1_reg = icmp_ln45_reg_878.read();
        p_Result_1_reg_895_pp0_iter1_reg = p_Result_1_reg_895.read();
        p_Result_3_reg_905_pp0_iter1_reg = p_Result_3_reg_905.read();
        p_Result_s_reg_900_pp0_iter1_reg = p_Result_s_reg_900.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln45_reg_878_pp0_iter10_reg = icmp_ln45_reg_878_pp0_iter9_reg.read();
        icmp_ln45_reg_878_pp0_iter11_reg = icmp_ln45_reg_878_pp0_iter10_reg.read();
        icmp_ln45_reg_878_pp0_iter12_reg = icmp_ln45_reg_878_pp0_iter11_reg.read();
        icmp_ln45_reg_878_pp0_iter13_reg = icmp_ln45_reg_878_pp0_iter12_reg.read();
        icmp_ln45_reg_878_pp0_iter14_reg = icmp_ln45_reg_878_pp0_iter13_reg.read();
        icmp_ln45_reg_878_pp0_iter15_reg = icmp_ln45_reg_878_pp0_iter14_reg.read();
        icmp_ln45_reg_878_pp0_iter16_reg = icmp_ln45_reg_878_pp0_iter15_reg.read();
        icmp_ln45_reg_878_pp0_iter17_reg = icmp_ln45_reg_878_pp0_iter16_reg.read();
        icmp_ln45_reg_878_pp0_iter18_reg = icmp_ln45_reg_878_pp0_iter17_reg.read();
        icmp_ln45_reg_878_pp0_iter19_reg = icmp_ln45_reg_878_pp0_iter18_reg.read();
        icmp_ln45_reg_878_pp0_iter20_reg = icmp_ln45_reg_878_pp0_iter19_reg.read();
        icmp_ln45_reg_878_pp0_iter21_reg = icmp_ln45_reg_878_pp0_iter20_reg.read();
        icmp_ln45_reg_878_pp0_iter22_reg = icmp_ln45_reg_878_pp0_iter21_reg.read();
        icmp_ln45_reg_878_pp0_iter23_reg = icmp_ln45_reg_878_pp0_iter22_reg.read();
        icmp_ln45_reg_878_pp0_iter24_reg = icmp_ln45_reg_878_pp0_iter23_reg.read();
        icmp_ln45_reg_878_pp0_iter25_reg = icmp_ln45_reg_878_pp0_iter24_reg.read();
        icmp_ln45_reg_878_pp0_iter26_reg = icmp_ln45_reg_878_pp0_iter25_reg.read();
        icmp_ln45_reg_878_pp0_iter2_reg = icmp_ln45_reg_878_pp0_iter1_reg.read();
        icmp_ln45_reg_878_pp0_iter3_reg = icmp_ln45_reg_878_pp0_iter2_reg.read();
        icmp_ln45_reg_878_pp0_iter4_reg = icmp_ln45_reg_878_pp0_iter3_reg.read();
        icmp_ln45_reg_878_pp0_iter5_reg = icmp_ln45_reg_878_pp0_iter4_reg.read();
        icmp_ln45_reg_878_pp0_iter6_reg = icmp_ln45_reg_878_pp0_iter5_reg.read();
        icmp_ln45_reg_878_pp0_iter7_reg = icmp_ln45_reg_878_pp0_iter6_reg.read();
        icmp_ln45_reg_878_pp0_iter8_reg = icmp_ln45_reg_878_pp0_iter7_reg.read();
        icmp_ln45_reg_878_pp0_iter9_reg = icmp_ln45_reg_878_pp0_iter8_reg.read();
        p_Result_1_reg_895_pp0_iter2_reg = p_Result_1_reg_895_pp0_iter1_reg.read();
        p_Result_1_reg_895_pp0_iter3_reg = p_Result_1_reg_895_pp0_iter2_reg.read();
        p_Result_1_reg_895_pp0_iter4_reg = p_Result_1_reg_895_pp0_iter3_reg.read();
        p_Result_3_reg_905_pp0_iter10_reg = p_Result_3_reg_905_pp0_iter9_reg.read();
        p_Result_3_reg_905_pp0_iter11_reg = p_Result_3_reg_905_pp0_iter10_reg.read();
        p_Result_3_reg_905_pp0_iter12_reg = p_Result_3_reg_905_pp0_iter11_reg.read();
        p_Result_3_reg_905_pp0_iter13_reg = p_Result_3_reg_905_pp0_iter12_reg.read();
        p_Result_3_reg_905_pp0_iter14_reg = p_Result_3_reg_905_pp0_iter13_reg.read();
        p_Result_3_reg_905_pp0_iter2_reg = p_Result_3_reg_905_pp0_iter1_reg.read();
        p_Result_3_reg_905_pp0_iter3_reg = p_Result_3_reg_905_pp0_iter2_reg.read();
        p_Result_3_reg_905_pp0_iter4_reg = p_Result_3_reg_905_pp0_iter3_reg.read();
        p_Result_3_reg_905_pp0_iter5_reg = p_Result_3_reg_905_pp0_iter4_reg.read();
        p_Result_3_reg_905_pp0_iter6_reg = p_Result_3_reg_905_pp0_iter5_reg.read();
        p_Result_3_reg_905_pp0_iter7_reg = p_Result_3_reg_905_pp0_iter6_reg.read();
        p_Result_3_reg_905_pp0_iter8_reg = p_Result_3_reg_905_pp0_iter7_reg.read();
        p_Result_3_reg_905_pp0_iter9_reg = p_Result_3_reg_905_pp0_iter8_reg.read();
        p_Result_s_reg_900_pp0_iter2_reg = p_Result_s_reg_900_pp0_iter1_reg.read();
        p_Result_s_reg_900_pp0_iter3_reg = p_Result_s_reg_900_pp0_iter2_reg.read();
        p_Result_s_reg_900_pp0_iter4_reg = p_Result_s_reg_900_pp0_iter3_reg.read();
        p_Result_s_reg_900_pp0_iter5_reg = p_Result_s_reg_900_pp0_iter4_reg.read();
        p_Result_s_reg_900_pp0_iter6_reg = p_Result_s_reg_900_pp0_iter5_reg.read();
        p_Result_s_reg_900_pp0_iter7_reg = p_Result_s_reg_900_pp0_iter6_reg.read();
        p_Result_s_reg_900_pp0_iter8_reg = p_Result_s_reg_900_pp0_iter7_reg.read();
        p_Result_s_reg_900_pp0_iter9_reg = p_Result_s_reg_900_pp0_iter8_reg.read();
        tmp_3_0_3_reg_1082_pp0_iter24_reg = tmp_3_0_3_reg_1082.read();
        tmp_3_1_3_reg_1088_pp0_iter24_reg = tmp_3_1_3_reg_1088.read();
        tmp_3_2_3_reg_1094_pp0_iter24_reg = tmp_3_2_3_reg_1094.read();
        tmp_3_3_3_reg_1100_pp0_iter24_reg = tmp_3_3_3_reg_1100.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Result_1_reg_895 = data1_V_0_data_out.read().range(63, 32);
        p_Result_3_reg_905 = data1_V_0_data_out.read().range(127, 96);
        p_Result_s_reg_900 = data1_V_0_data_out.read().range(95, 64);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter7_reg.read()))) {
        tmp_2_0_1_reg_951 = grp_fu_332_p2.read();
        tmp_2_1_1_reg_961 = grp_fu_336_p2.read();
        tmp_2_2_1_reg_971 = grp_fu_340_p2.read();
        tmp_2_3_1_reg_981 = grp_fu_344_p2.read();
        tmp_3_1_reg_956 = grp_fu_253_p2.read();
        tmp_3_2_reg_966 = grp_fu_258_p2.read();
        tmp_3_3_reg_976 = grp_fu_263_p2.read();
        tmp_3_reg_946 = grp_fu_248_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter12_reg.read()))) {
        tmp_2_0_2_reg_999 = grp_fu_348_p2.read();
        tmp_2_1_2_reg_1009 = grp_fu_352_p2.read();
        tmp_2_2_2_reg_1019 = grp_fu_356_p2.read();
        tmp_2_3_2_reg_1029 = grp_fu_360_p2.read();
        tmp_3_0_1_reg_994 = grp_fu_268_p2.read();
        tmp_3_1_1_reg_1004 = grp_fu_272_p2.read();
        tmp_3_2_1_reg_1014 = grp_fu_276_p2.read();
        tmp_3_3_1_reg_1024 = grp_fu_280_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter17_reg.read()))) {
        tmp_2_0_3_reg_1047 = grp_fu_364_p2.read();
        tmp_2_1_3_reg_1057 = grp_fu_368_p2.read();
        tmp_2_2_3_reg_1067 = grp_fu_372_p2.read();
        tmp_2_3_3_reg_1077 = grp_fu_376_p2.read();
        tmp_3_0_2_reg_1042 = grp_fu_284_p2.read();
        tmp_3_1_2_reg_1052 = grp_fu_288_p2.read();
        tmp_3_2_2_reg_1062 = grp_fu_292_p2.read();
        tmp_3_3_2_reg_1072 = grp_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter2_reg.read()))) {
        tmp_2_1_reg_923 = grp_fu_320_p2.read();
        tmp_2_2_reg_928 = grp_fu_324_p2.read();
        tmp_2_3_reg_933 = grp_fu_328_p2.read();
        tmp_2_reg_918 = grp_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter22_reg.read()))) {
        tmp_3_0_3_reg_1082 = grp_fu_300_p2.read();
        tmp_3_1_3_reg_1088 = grp_fu_304_p2.read();
        tmp_3_2_3_reg_1094 = grp_fu_308_p2.read();
        tmp_3_3_3_reg_1100 = grp_fu_312_p2.read();
    }
}

void myFuncAccel4::thread_add_ln69_1_fu_710_p2() {
    add_ln69_1_fu_710_p2 = (!zext_ln67_2_fu_650_p1.read().is_01() || !zext_ln69_fu_700_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln67_2_fu_650_p1.read()) + sc_biguint<2>(zext_ln69_fu_700_p1.read()));
}

void myFuncAccel4::thread_add_ln69_2_fu_722_p2() {
    add_ln69_2_fu_722_p2 = (!zext_ln69_2_fu_719_p1.read().is_01() || !zext_ln69_1_fu_716_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln69_2_fu_719_p1.read()) + sc_biguint<3>(zext_ln69_1_fu_716_p1.read()));
}

void myFuncAccel4::thread_add_ln69_fu_704_p2() {
    add_ln69_fu_704_p2 = (!zext_ln67_1_fu_600_p1.read().is_01() || !zext_ln67_fu_550_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln67_1_fu_600_p1.read()) + sc_biguint<2>(zext_ln67_fu_550_p1.read()));
}

void myFuncAccel4::thread_and_ln69_1_fu_544_p2() {
    and_ln69_1_fu_544_p2 = (and_ln69_fu_539_p2.read() & grp_fu_380_p2.read());
}

void myFuncAccel4::thread_and_ln69_2_fu_589_p2() {
    and_ln69_2_fu_589_p2 = (or_ln69_2_fu_583_p2.read() & or_ln69_1_fu_478_p2.read());
}

void myFuncAccel4::thread_and_ln69_3_fu_594_p2() {
    and_ln69_3_fu_594_p2 = (and_ln69_2_fu_589_p2.read() & grp_fu_384_p2.read());
}

void myFuncAccel4::thread_and_ln69_4_fu_639_p2() {
    and_ln69_4_fu_639_p2 = (or_ln69_3_fu_633_p2.read() & or_ln69_1_fu_478_p2.read());
}

void myFuncAccel4::thread_and_ln69_5_fu_644_p2() {
    and_ln69_5_fu_644_p2 = (and_ln69_4_fu_639_p2.read() & grp_fu_388_p2.read());
}

void myFuncAccel4::thread_and_ln69_6_fu_689_p2() {
    and_ln69_6_fu_689_p2 = (or_ln69_4_fu_683_p2.read() & or_ln69_1_fu_478_p2.read());
}

void myFuncAccel4::thread_and_ln69_7_fu_694_p2() {
    and_ln69_7_fu_694_p2 = (and_ln69_6_fu_689_p2.read() & grp_fu_392_p2.read());
}

void myFuncAccel4::thread_and_ln69_fu_539_p2() {
    and_ln69_fu_539_p2 = (or_ln69_fu_533_p2.read() & or_ln69_1_fu_478_p2.read());
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void myFuncAccel4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myFuncAccel4::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[2];
}

void myFuncAccel4::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state28_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state28_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read())));
}

void myFuncAccel4::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state24_pp0_stage0_iter22() {
    ap_block_state24_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state25_pp0_stage0_iter23() {
    ap_block_state25_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state26_pp0_stage0_iter24() {
    ap_block_state26_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state27_pp0_stage0_iter25() {
    ap_block_state27_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state28_io() {
    ap_block_state28_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter25_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state28_pp0_stage0_iter26() {
    ap_block_state28_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state29_io() {
    ap_block_state29_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter26_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state29_pp0_stage0_iter27() {
    ap_block_state29_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data1_V_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state30() {
    ap_block_state30 = (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read())));
}

void myFuncAccel4::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_410_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myFuncAccel4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void myFuncAccel4::thread_bitcast_ln56_1_fu_483_p1() {
    bitcast_ln56_1_fu_483_p1 = p_Result_1_reg_895_pp0_iter4_reg.read();
}

void myFuncAccel4::thread_bitcast_ln56_2_fu_490_p1() {
    bitcast_ln56_2_fu_490_p1 = p_Result_s_reg_900_pp0_iter9_reg.read();
}

void myFuncAccel4::thread_bitcast_ln56_3_fu_497_p1() {
    bitcast_ln56_3_fu_497_p1 = p_Result_3_reg_905_pp0_iter14_reg.read();
}

void myFuncAccel4::thread_bitcast_ln56_fu_425_p1() {
    bitcast_ln56_fu_425_p1 = trunc_ln681_fu_421_p1.read();
}

void myFuncAccel4::thread_bitcast_ln69_1_fu_396_p1() {
    bitcast_ln69_1_fu_396_p1 = threshold.read();
}

void myFuncAccel4::thread_bitcast_ln69_2_fu_554_p1() {
    bitcast_ln69_2_fu_554_p1 = tmp_3_1_3_reg_1088_pp0_iter24_reg.read();
}

void myFuncAccel4::thread_bitcast_ln69_3_fu_604_p1() {
    bitcast_ln69_3_fu_604_p1 = tmp_3_2_3_reg_1094_pp0_iter24_reg.read();
}

void myFuncAccel4::thread_bitcast_ln69_4_fu_654_p1() {
    bitcast_ln69_4_fu_654_p1 = tmp_3_3_3_reg_1100_pp0_iter24_reg.read();
}

void myFuncAccel4::thread_bitcast_ln69_fu_504_p1() {
    bitcast_ln69_fu_504_p1 = tmp_3_0_3_reg_1082_pp0_iter24_reg.read();
}

void myFuncAccel4::thread_data1_V_0_ack_in() {
    data1_V_0_ack_in = data1_V_0_state.read()[1];
}

void myFuncAccel4::thread_data1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data1_V_0_ack_out = ap_const_logic_1;
    } else {
        data1_V_0_ack_out = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_data1_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data1_V_0_sel.read())) {
        data1_V_0_data_out = data1_V_0_payload_B.read();
    } else {
        data1_V_0_data_out = data1_V_0_payload_A.read();
    }
}

void myFuncAccel4::thread_data1_V_0_load_A() {
    data1_V_0_load_A = (data1_V_0_state_cmp_full.read() & ~data1_V_0_sel_wr.read());
}

void myFuncAccel4::thread_data1_V_0_load_B() {
    data1_V_0_load_B = (data1_V_0_sel_wr.read() & data1_V_0_state_cmp_full.read());
}

void myFuncAccel4::thread_data1_V_0_sel() {
    data1_V_0_sel = data1_V_0_sel_rd.read();
}

void myFuncAccel4::thread_data1_V_0_state_cmp_full() {
    data1_V_0_state_cmp_full =  (sc_logic) ((!data1_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data1_V_0_state.read() != ap_const_lv2_1))[0];
}

void myFuncAccel4::thread_data1_V_0_vld_in() {
    data1_V_0_vld_in = data1_V_TVALID.read();
}

void myFuncAccel4::thread_data1_V_0_vld_out() {
    data1_V_0_vld_out = data1_V_0_state.read()[0];
}

void myFuncAccel4::thread_data1_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_410_p2.read()))) {
        data1_V_TDATA_blk_n = data1_V_0_state.read()[0];
    } else {
        data1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void myFuncAccel4::thread_data1_V_TREADY() {
    data1_V_TREADY = data1_V_0_state.read()[1];
}

void myFuncAccel4::thread_data_out_V_1_ack_in() {
    data_out_V_1_ack_in = data_out_V_1_state.read()[1];
}

void myFuncAccel4::thread_data_out_V_1_ack_out() {
    data_out_V_1_ack_out = data_out_V_TREADY.read();
}

void myFuncAccel4::thread_data_out_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_1_sel.read())) {
        data_out_V_1_data_out = data_out_V_1_payload_B.read();
    } else {
        data_out_V_1_data_out = data_out_V_1_payload_A.read();
    }
}

void myFuncAccel4::thread_data_out_V_1_load_A() {
    data_out_V_1_load_A = (data_out_V_1_state_cmp_full.read() & ~data_out_V_1_sel_wr.read());
}

void myFuncAccel4::thread_data_out_V_1_load_B() {
    data_out_V_1_load_B = (data_out_V_1_sel_wr.read() & data_out_V_1_state_cmp_full.read());
}

void myFuncAccel4::thread_data_out_V_1_sel() {
    data_out_V_1_sel = data_out_V_1_sel_rd.read();
}

void myFuncAccel4::thread_data_out_V_1_state_cmp_full() {
    data_out_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_1_state.read() != ap_const_lv2_1))[0];
}

void myFuncAccel4::thread_data_out_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter25_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_out_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_1_vld_in = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_data_out_V_1_vld_out() {
    data_out_V_1_vld_out = data_out_V_1_state.read()[0];
}

void myFuncAccel4::thread_data_out_V_TDATA() {
    data_out_V_TDATA = data_out_V_1_data_out.read();
}

void myFuncAccel4::thread_data_out_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter26.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter25_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_878_pp0_iter26_reg.read())))) {
        data_out_V_TDATA_blk_n = data_out_V_1_state.read()[1];
    } else {
        data_out_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void myFuncAccel4::thread_data_out_V_TVALID() {
    data_out_V_TVALID = data_out_V_1_state.read()[0];
}

void myFuncAccel4::thread_grp_fu_248_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_248_ce = ap_const_logic_1;
    } else {
        grp_fu_248_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_253_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_253_ce = ap_const_logic_1;
    } else {
        grp_fu_253_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_258_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_258_ce = ap_const_logic_1;
    } else {
        grp_fu_258_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_263_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_263_ce = ap_const_logic_1;
    } else {
        grp_fu_263_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_268_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_268_ce = ap_const_logic_1;
    } else {
        grp_fu_268_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_272_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_272_ce = ap_const_logic_1;
    } else {
        grp_fu_272_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_276_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_276_ce = ap_const_logic_1;
    } else {
        grp_fu_276_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_280_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_280_ce = ap_const_logic_1;
    } else {
        grp_fu_280_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_284_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_284_ce = ap_const_logic_1;
    } else {
        grp_fu_284_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_288_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_288_ce = ap_const_logic_1;
    } else {
        grp_fu_288_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_292_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_292_ce = ap_const_logic_1;
    } else {
        grp_fu_292_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_296_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_296_ce = ap_const_logic_1;
    } else {
        grp_fu_296_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_300_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_300_ce = ap_const_logic_1;
    } else {
        grp_fu_300_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_304_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_304_ce = ap_const_logic_1;
    } else {
        grp_fu_304_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_308_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_308_ce = ap_const_logic_1;
    } else {
        grp_fu_308_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_312_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_312_ce = ap_const_logic_1;
    } else {
        grp_fu_312_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_316_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_316_ce = ap_const_logic_1;
    } else {
        grp_fu_316_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_320_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_320_ce = ap_const_logic_1;
    } else {
        grp_fu_320_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_324_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_324_ce = ap_const_logic_1;
    } else {
        grp_fu_324_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_328_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_328_ce = ap_const_logic_1;
    } else {
        grp_fu_328_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_332_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_332_ce = ap_const_logic_1;
    } else {
        grp_fu_332_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_336_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_336_ce = ap_const_logic_1;
    } else {
        grp_fu_336_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_340_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_340_ce = ap_const_logic_1;
    } else {
        grp_fu_340_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_344_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_344_ce = ap_const_logic_1;
    } else {
        grp_fu_344_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_348_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_348_ce = ap_const_logic_1;
    } else {
        grp_fu_348_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_352_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_352_ce = ap_const_logic_1;
    } else {
        grp_fu_352_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_356_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_356_ce = ap_const_logic_1;
    } else {
        grp_fu_356_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_360_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_360_ce = ap_const_logic_1;
    } else {
        grp_fu_360_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_364_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_364_ce = ap_const_logic_1;
    } else {
        grp_fu_364_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_368_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_368_ce = ap_const_logic_1;
    } else {
        grp_fu_368_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_372_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_372_ce = ap_const_logic_1;
    } else {
        grp_fu_372_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_376_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_376_ce = ap_const_logic_1;
    } else {
        grp_fu_376_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_380_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_380_ce = ap_const_logic_1;
    } else {
        grp_fu_380_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_384_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_384_ce = ap_const_logic_1;
    } else {
        grp_fu_384_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_388_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_388_ce = ap_const_logic_1;
    } else {
        grp_fu_388_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_392_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_392_ce = ap_const_logic_1;
    } else {
        grp_fu_392_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_i_fu_415_p2() {
    i_fu_415_p2 = (!i_1_reg_237.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_reg_237.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void myFuncAccel4::thread_icmp_ln45_fu_410_p2() {
    icmp_ln45_fu_410_p2 = (!i_1_reg_237.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_237.read() == size.read());
}

void myFuncAccel4::thread_icmp_ln69_1_fu_527_p2() {
    icmp_ln69_1_fu_527_p2 = (!trunc_ln69_1_fu_517_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln69_1_fu_517_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln69_2_fu_472_p2() {
    icmp_ln69_2_fu_472_p2 = (!tmp_4_fu_463_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_463_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln69_3_fu_404_p2() {
    icmp_ln69_3_fu_404_p2 = (!trunc_ln69_fu_400_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln69_fu_400_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln69_4_fu_571_p2() {
    icmp_ln69_4_fu_571_p2 = (!tmp_6_fu_557_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_557_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln69_5_fu_577_p2() {
    icmp_ln69_5_fu_577_p2 = (!trunc_ln69_2_fu_567_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln69_2_fu_567_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln69_6_fu_621_p2() {
    icmp_ln69_6_fu_621_p2 = (!tmp_9_fu_607_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_607_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln69_7_fu_627_p2() {
    icmp_ln69_7_fu_627_p2 = (!trunc_ln69_3_fu_617_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln69_3_fu_617_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln69_8_fu_671_p2() {
    icmp_ln69_8_fu_671_p2 = (!tmp_7_fu_657_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_657_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln69_9_fu_677_p2() {
    icmp_ln69_9_fu_677_p2 = (!trunc_ln69_4_fu_667_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln69_4_fu_667_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln69_fu_521_p2() {
    icmp_ln69_fu_521_p2 = (!tmp_1_fu_507_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_507_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln75_fu_728_p2() {
    icmp_ln75_fu_728_p2 = (!add_ln69_2_fu_722_p2.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(add_ln69_2_fu_722_p2.read() == ap_const_lv3_4);
}

void myFuncAccel4::thread_or_ln69_1_fu_478_p2() {
    or_ln69_1_fu_478_p2 = (icmp_ln69_3_fu_404_p2.read() | icmp_ln69_2_fu_472_p2.read());
}

void myFuncAccel4::thread_or_ln69_2_fu_583_p2() {
    or_ln69_2_fu_583_p2 = (icmp_ln69_5_fu_577_p2.read() | icmp_ln69_4_fu_571_p2.read());
}

void myFuncAccel4::thread_or_ln69_3_fu_633_p2() {
    or_ln69_3_fu_633_p2 = (icmp_ln69_7_fu_627_p2.read() | icmp_ln69_6_fu_621_p2.read());
}

void myFuncAccel4::thread_or_ln69_4_fu_683_p2() {
    or_ln69_4_fu_683_p2 = (icmp_ln69_9_fu_677_p2.read() | icmp_ln69_8_fu_671_p2.read());
}

void myFuncAccel4::thread_or_ln69_fu_533_p2() {
    or_ln69_fu_533_p2 = (icmp_ln69_1_fu_527_p2.read() | icmp_ln69_fu_521_p2.read());
}

void myFuncAccel4::thread_p_Result_2_3_fu_762_p5() {
    p_Result_2_3_fu_762_p5 = esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(select_ln76_3_fu_755_p3.read(), select_ln76_2_fu_748_p3.read()), select_ln76_1_fu_741_p3.read()), select_ln76_fu_734_p3.read());
}

void myFuncAccel4::thread_select_ln76_1_fu_741_p3() {
    select_ln76_1_fu_741_p3 = (!icmp_ln75_fu_728_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln75_fu_728_p2.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln69_2_reg_1111.read());
}

void myFuncAccel4::thread_select_ln76_2_fu_748_p3() {
    select_ln76_2_fu_748_p3 = (!icmp_ln75_fu_728_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln75_fu_728_p2.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln69_3_reg_1116.read());
}

void myFuncAccel4::thread_select_ln76_3_fu_755_p3() {
    select_ln76_3_fu_755_p3 = (!icmp_ln75_fu_728_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln75_fu_728_p2.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln69_4_reg_1121.read());
}

void myFuncAccel4::thread_select_ln76_fu_734_p3() {
    select_ln76_fu_734_p3 = (!icmp_ln75_fu_728_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln75_fu_728_p2.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln69_reg_1106.read());
}

void myFuncAccel4::thread_tmp_1_fu_507_p4() {
    tmp_1_fu_507_p4 = bitcast_ln69_fu_504_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_4_fu_463_p4() {
    tmp_4_fu_463_p4 = bitcast_ln69_1_fu_396_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_6_fu_557_p4() {
    tmp_6_fu_557_p4 = bitcast_ln69_2_fu_554_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_7_fu_657_p4() {
    tmp_7_fu_657_p4 = bitcast_ln69_4_fu_654_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_9_fu_607_p4() {
    tmp_9_fu_607_p4 = bitcast_ln69_3_fu_604_p1.read().range(30, 23);
}

void myFuncAccel4::thread_trunc_ln681_fu_421_p1() {
    trunc_ln681_fu_421_p1 = data1_V_0_data_out.read().range(32-1, 0);
}

void myFuncAccel4::thread_trunc_ln69_1_fu_517_p1() {
    trunc_ln69_1_fu_517_p1 = bitcast_ln69_fu_504_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln69_2_fu_567_p1() {
    trunc_ln69_2_fu_567_p1 = bitcast_ln69_2_fu_554_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln69_3_fu_617_p1() {
    trunc_ln69_3_fu_617_p1 = bitcast_ln69_3_fu_604_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln69_4_fu_667_p1() {
    trunc_ln69_4_fu_667_p1 = bitcast_ln69_4_fu_654_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln69_fu_400_p1() {
    trunc_ln69_fu_400_p1 = bitcast_ln69_1_fu_396_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_zext_ln67_1_fu_600_p1() {
    zext_ln67_1_fu_600_p1 = esl_zext<2,1>(and_ln69_3_fu_594_p2.read());
}

void myFuncAccel4::thread_zext_ln67_2_fu_650_p1() {
    zext_ln67_2_fu_650_p1 = esl_zext<2,1>(and_ln69_5_fu_644_p2.read());
}

void myFuncAccel4::thread_zext_ln67_fu_550_p1() {
    zext_ln67_fu_550_p1 = esl_zext<2,1>(and_ln69_1_fu_544_p2.read());
}

void myFuncAccel4::thread_zext_ln69_1_fu_716_p1() {
    zext_ln69_1_fu_716_p1 = esl_zext<3,2>(add_ln69_reg_1126.read());
}

void myFuncAccel4::thread_zext_ln69_2_fu_719_p1() {
    zext_ln69_2_fu_719_p1 = esl_zext<3,2>(add_ln69_1_reg_1131.read());
}

void myFuncAccel4::thread_zext_ln69_fu_700_p1() {
    zext_ln69_fu_700_p1 = esl_zext<2,1>(and_ln69_7_fu_694_p2.read());
}

void myFuncAccel4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter26.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_410_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter27.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter26.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln45_fu_410_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void myFuncAccel4::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"size\" :  \"" << size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dim\" :  \"" << dim.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"threshold\" :  \"" << threshold.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_0\" :  \"" << data0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_1\" :  \"" << data0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_2\" :  \"" << data0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_3\" :  \"" << data0_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_4\" :  \"" << data0_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_5\" :  \"" << data0_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_6\" :  \"" << data0_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_7\" :  \"" << data0_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_8\" :  \"" << data0_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_9\" :  \"" << data0_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_10\" :  \"" << data0_10.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_11\" :  \"" << data0_11.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_12\" :  \"" << data0_12.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_13\" :  \"" << data0_13.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_14\" :  \"" << data0_14.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_15\" :  \"" << data0_15.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data1_V_TDATA\" :  \"" << data1_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data1_V_TVALID\" :  \"" << data1_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data1_V_TREADY\" :  \"" << data1_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_TDATA\" :  \"" << data_out_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_V_TVALID\" :  \"" << data_out_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_out_V_TREADY\" :  \"" << data_out_V_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

