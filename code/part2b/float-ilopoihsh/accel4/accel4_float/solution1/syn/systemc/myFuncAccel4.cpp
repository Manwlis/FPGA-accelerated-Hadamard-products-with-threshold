// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myFuncAccel4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myFuncAccel4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myFuncAccel4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> myFuncAccel4::ap_ST_fsm_state1 = "1";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<6> myFuncAccel4::ap_ST_fsm_state36 = "100000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myFuncAccel4::ap_const_boolean_1 = true;
const sc_lv<1> myFuncAccel4::ap_const_lv1_0 = "0";
const sc_lv<1> myFuncAccel4::ap_const_lv1_1 = "1";
const sc_lv<2> myFuncAccel4::ap_const_lv2_0 = "00";
const sc_lv<2> myFuncAccel4::ap_const_lv2_2 = "10";
const sc_lv<2> myFuncAccel4::ap_const_lv2_3 = "11";
const sc_lv<2> myFuncAccel4::ap_const_lv2_1 = "1";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1 = "1";
const bool myFuncAccel4::ap_const_boolean_0 = false;
const sc_lv<32> myFuncAccel4::ap_const_lv32_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_3 = "11";
const sc_lv<32> myFuncAccel4::ap_const_lv32_4 = "100";
const sc_lv<23> myFuncAccel4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> myFuncAccel4::ap_const_lv32_17 = "10111";
const sc_lv<32> myFuncAccel4::ap_const_lv32_1E = "11110";
const sc_lv<8> myFuncAccel4::ap_const_lv8_FF = "11111111";
const sc_lv<3> myFuncAccel4::ap_const_lv3_4 = "100";
const sc_lv<5> myFuncAccel4::ap_const_lv5_2 = "10";
const sc_lv<32> myFuncAccel4::ap_const_lv32_5 = "101";

myFuncAccel4::myFuncAccel4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din0(grp_fu_240_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->din1(grp_fu_240_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->ce(grp_fu_240_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_240_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din0(grp_fu_245_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->din1(grp_fu_245_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->ce(grp_fu_245_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_245_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din0(grp_fu_250_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->din1(grp_fu_250_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->ce(grp_fu_250_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3->dout(grp_fu_250_p2);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4 = new myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4");
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->clk(ap_clk);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->reset(ap_rst_n_inv);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din0(grp_fu_255_p0);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->din1(grp_fu_255_p1);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->ce(grp_fu_255_ce);
    myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4->dout(grp_fu_255_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->din0(grp_fu_260_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->din1(my_input1_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->ce(grp_fu_260_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5->dout(grp_fu_260_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->din0(grp_fu_265_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->din1(my_input1_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->ce(grp_fu_265_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6->dout(grp_fu_265_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->din0(grp_fu_270_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->din1(my_input1_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->ce(grp_fu_270_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7->dout(grp_fu_270_p2);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8 = new myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8");
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->clk(ap_clk);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->reset(ap_rst_n_inv);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->din0(grp_fu_275_p0);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->din1(my_input1_0_data_out);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->ce(grp_fu_275_ce);
    myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8->dout(grp_fu_275_p2);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9 = new myFuncAccel4_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9");
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->clk(ap_clk);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->reset(ap_rst_n_inv);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->din0(grp_fu_280_p0);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->din1(threshold);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->ce(grp_fu_280_ce);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->opcode(ap_var_for_const0);
    myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9->dout(grp_fu_280_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln53_1_fu_532_p2);
    sensitive << ( zext_ln51_2_fu_472_p1 );
    sensitive << ( zext_ln53_fu_522_p1 );

    SC_METHOD(thread_add_ln53_2_fu_544_p2);
    sensitive << ( zext_ln53_2_fu_541_p1 );
    sensitive << ( zext_ln53_1_fu_538_p1 );

    SC_METHOD(thread_add_ln53_fu_526_p2);
    sensitive << ( zext_ln51_1_fu_423_p1 );
    sensitive << ( zext_ln51_fu_374_p1 );

    SC_METHOD(thread_and_ln53_1_fu_369_p2);
    sensitive << ( tmp_5_reg_902 );
    sensitive << ( and_ln53_fu_364_p2 );

    SC_METHOD(thread_and_ln53_2_fu_413_p2);
    sensitive << ( or_ln53_1_fu_324_p2 );
    sensitive << ( or_ln53_2_fu_407_p2 );

    SC_METHOD(thread_and_ln53_3_fu_418_p2);
    sensitive << ( tmp_8_reg_907 );
    sensitive << ( and_ln53_2_fu_413_p2 );

    SC_METHOD(thread_and_ln53_4_fu_462_p2);
    sensitive << ( or_ln53_1_fu_324_p2 );
    sensitive << ( or_ln53_3_fu_456_p2 );

    SC_METHOD(thread_and_ln53_5_fu_467_p2);
    sensitive << ( tmp_s_reg_912 );
    sensitive << ( and_ln53_4_fu_462_p2 );

    SC_METHOD(thread_and_ln53_6_fu_511_p2);
    sensitive << ( or_ln53_1_fu_324_p2 );
    sensitive << ( or_ln53_4_fu_505_p2 );

    SC_METHOD(thread_and_ln53_7_fu_516_p2);
    sensitive << ( grp_fu_280_p2 );
    sensitive << ( and_ln53_6_fu_511_p2 );

    SC_METHOD(thread_and_ln53_fu_364_p2);
    sensitive << ( or_ln53_1_fu_324_p2 );
    sensitive << ( or_ln53_fu_358_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state34_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state34_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_00001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state31_io );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_state31_io );
    sensitive << ( ap_block_state35_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_00001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_state32_io );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_state32_io );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_00001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_pp0_stage3_01001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_state33_io );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_state33_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state16_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state17_pp0_stage3_iter3);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter4);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state23_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state24_pp0_stage2_iter5);

    SC_METHOD(thread_ap_block_state25_pp0_stage3_iter5);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state27_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state28_pp0_stage2_iter6);

    SC_METHOD(thread_ap_block_state29_pp0_stage3_iter6);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( icmp_ln34_fu_298_p2 );

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state31_io);
    sensitive << ( my_output_1_ack_in );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state31_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state32_io);
    sensitive << ( my_output_1_ack_in );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state32_pp0_stage2_iter7);

    SC_METHOD(thread_ap_block_state33_io);
    sensitive << ( my_output_1_ack_in );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state33_pp0_stage3_iter7);

    SC_METHOD(thread_ap_block_state34_io);
    sensitive << ( my_output_1_ack_in );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state35_io);
    sensitive << ( my_output_1_ack_in );
    sensitive << ( icmp_ln34_reg_685_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state35_pp0_stage1_iter8);

    SC_METHOD(thread_ap_block_state36);
    sensitive << ( my_output_TREADY );
    sensitive << ( my_output_1_state );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);
    sensitive << ( my_input1_0_vld_out );
    sensitive << ( icmp_ln34_reg_685 );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage3_iter1);

    SC_METHOD(thread_ap_condition_629);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_ap_condition_634);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_ap_condition_639);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage3_01001 );

    SC_METHOD(thread_ap_condition_644);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln34_fu_298_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( my_output_TREADY );
    sensitive << ( my_output_1_state );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_233_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( i_1_reg_229 );
    sensitive << ( i_reg_689 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( my_output_TREADY );
    sensitive << ( my_output_1_state );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln53_1_fu_284_p1);
    sensitive << ( threshold );

    SC_METHOD(thread_bitcast_ln53_2_fu_378_p1);
    sensitive << ( tmp_3_1_3_reg_881_pp0_iter6_reg );

    SC_METHOD(thread_bitcast_ln53_3_fu_427_p1);
    sensitive << ( tmp_3_2_3_reg_888_pp0_iter6_reg );

    SC_METHOD(thread_bitcast_ln53_4_fu_476_p1);
    sensitive << ( tmp_3_3_3_reg_895_pp0_iter6_reg );

    SC_METHOD(thread_bitcast_ln53_fu_329_p1);
    sensitive << ( tmp_3_0_3_reg_874_pp0_iter6_reg );

    SC_METHOD(thread_grp_fu_240_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_240_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_reg_734 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_814 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_0_1_reg_834 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_0_2_reg_854 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_240_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_0_1_reg_754_pp0_iter2_reg );
    sensitive << ( tmp_2_0_2_reg_774_pp0_iter3_reg );
    sensitive << ( tmp_2_0_3_reg_794_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_245_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_245_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_1_reg_739 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_1_reg_819 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_1_1_reg_839 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_1_2_reg_859 );

    SC_METHOD(thread_grp_fu_245_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_1_1_reg_759_pp0_iter2_reg );
    sensitive << ( tmp_2_1_2_reg_779_pp0_iter3_reg );
    sensitive << ( tmp_2_1_3_reg_799_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_250_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_250_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_2_reg_744 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_2_reg_824 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_2_1_reg_844 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_2_2_reg_864 );

    SC_METHOD(thread_grp_fu_250_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_2_1_reg_764_pp0_iter2_reg );
    sensitive << ( tmp_2_2_2_reg_784_pp0_iter3_reg );
    sensitive << ( tmp_2_2_3_reg_804_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_255_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_255_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_2_3_reg_749 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_3_reg_829 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_3_1_reg_849 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_3_3_2_reg_869 );

    SC_METHOD(thread_grp_fu_255_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_3_1_reg_769_pp0_iter2_reg );
    sensitive << ( tmp_2_3_2_reg_789_pp0_iter3_reg );
    sensitive << ( tmp_2_3_3_reg_809_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_grp_fu_260_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_260_p0);
    sensitive << ( data0_0 );
    sensitive << ( data0_1 );
    sensitive << ( data0_2 );
    sensitive << ( data0_3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_265_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_265_p0);
    sensitive << ( data0_4 );
    sensitive << ( data0_5 );
    sensitive << ( data0_6 );
    sensitive << ( data0_7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_270_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_270_p0);
    sensitive << ( data0_8 );
    sensitive << ( data0_9 );
    sensitive << ( data0_10 );
    sensitive << ( data0_11 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_275_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_275_p0);
    sensitive << ( data0_12 );
    sensitive << ( data0_13 );
    sensitive << ( data0_14 );
    sensitive << ( data0_15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_grp_fu_280_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_280_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_3_0_3_reg_874 );
    sensitive << ( tmp_3_1_3_reg_881 );
    sensitive << ( tmp_3_2_3_reg_888 );
    sensitive << ( tmp_3_3_3_reg_895 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_i_fu_303_p2);
    sensitive << ( ap_phi_mux_i_1_phi_fu_233_p4 );

    SC_METHOD(thread_icmp_ln34_fu_298_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_1_phi_fu_233_p4 );

    SC_METHOD(thread_icmp_ln53_1_fu_352_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( trunc_ln53_1_fu_342_p1 );

    SC_METHOD(thread_icmp_ln53_2_fu_318_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_fu_309_p4 );

    SC_METHOD(thread_icmp_ln53_3_fu_292_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( trunc_ln53_fu_288_p1 );

    SC_METHOD(thread_icmp_ln53_4_fu_395_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( tmp_6_fu_381_p4 );

    SC_METHOD(thread_icmp_ln53_5_fu_401_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( trunc_ln53_2_fu_391_p1 );

    SC_METHOD(thread_icmp_ln53_6_fu_444_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( tmp_9_fu_430_p4 );

    SC_METHOD(thread_icmp_ln53_7_fu_450_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( trunc_ln53_3_fu_440_p1 );

    SC_METHOD(thread_icmp_ln53_8_fu_493_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( tmp_7_fu_479_p4 );

    SC_METHOD(thread_icmp_ln53_9_fu_499_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( trunc_ln53_4_fu_489_p1 );

    SC_METHOD(thread_icmp_ln53_fu_346_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter6_reg );
    sensitive << ( tmp_1_fu_332_p4 );

    SC_METHOD(thread_icmp_ln57_fu_550_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( add_ln53_2_fu_544_p2 );

    SC_METHOD(thread_my_input1_0_ack_in);
    sensitive << ( my_input1_0_state );

    SC_METHOD(thread_my_input1_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_my_input1_0_data_out);
    sensitive << ( my_input1_0_payload_A );
    sensitive << ( my_input1_0_payload_B );
    sensitive << ( my_input1_0_sel );

    SC_METHOD(thread_my_input1_0_load_A);
    sensitive << ( my_input1_0_sel_wr );
    sensitive << ( my_input1_0_state_cmp_full );

    SC_METHOD(thread_my_input1_0_load_B);
    sensitive << ( my_input1_0_sel_wr );
    sensitive << ( my_input1_0_state_cmp_full );

    SC_METHOD(thread_my_input1_0_sel);
    sensitive << ( my_input1_0_sel_rd );

    SC_METHOD(thread_my_input1_0_state_cmp_full);
    sensitive << ( my_input1_0_state );

    SC_METHOD(thread_my_input1_0_vld_in);
    sensitive << ( my_input1_TVALID );

    SC_METHOD(thread_my_input1_0_vld_out);
    sensitive << ( my_input1_0_state );

    SC_METHOD(thread_my_input1_TDATA_blk_n);
    sensitive << ( my_input1_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln34_fu_298_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln34_reg_685 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_my_input1_TREADY);
    sensitive << ( my_input1_0_state );

    SC_METHOD(thread_my_output_1_ack_in);
    sensitive << ( my_output_1_state );

    SC_METHOD(thread_my_output_1_ack_out);
    sensitive << ( my_output_TREADY );

    SC_METHOD(thread_my_output_1_data_in);
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );
    sensitive << ( p_tmp_3_0_3_fu_556_p3 );
    sensitive << ( p_tmp_3_1_3_reg_932 );
    sensitive << ( p_tmp_3_2_3_reg_937 );
    sensitive << ( p_tmp_3_3_3_reg_942 );
    sensitive << ( ap_condition_629 );
    sensitive << ( ap_condition_634 );
    sensitive << ( ap_condition_639 );
    sensitive << ( ap_condition_644 );

    SC_METHOD(thread_my_output_1_data_out);
    sensitive << ( my_output_1_payload_A );
    sensitive << ( my_output_1_payload_B );
    sensitive << ( my_output_1_sel );

    SC_METHOD(thread_my_output_1_load_A);
    sensitive << ( my_output_1_sel_wr );
    sensitive << ( my_output_1_state_cmp_full );

    SC_METHOD(thread_my_output_1_load_B);
    sensitive << ( my_output_1_sel_wr );
    sensitive << ( my_output_1_state_cmp_full );

    SC_METHOD(thread_my_output_1_sel);
    sensitive << ( my_output_1_sel_rd );

    SC_METHOD(thread_my_output_1_state_cmp_full);
    sensitive << ( my_output_1_state );

    SC_METHOD(thread_my_output_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_my_output_1_vld_out);
    sensitive << ( my_output_1_state );

    SC_METHOD(thread_my_output_TDATA);
    sensitive << ( my_output_1_data_out );

    SC_METHOD(thread_my_output_TDATA_blk_n);
    sensitive << ( my_output_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln34_reg_685_pp0_iter8_reg );

    SC_METHOD(thread_my_output_TVALID);
    sensitive << ( my_output_1_state );

    SC_METHOD(thread_or_ln53_1_fu_324_p2);
    sensitive << ( icmp_ln53_3_fu_292_p2 );
    sensitive << ( icmp_ln53_2_fu_318_p2 );

    SC_METHOD(thread_or_ln53_2_fu_407_p2);
    sensitive << ( icmp_ln53_5_fu_401_p2 );
    sensitive << ( icmp_ln53_4_fu_395_p2 );

    SC_METHOD(thread_or_ln53_3_fu_456_p2);
    sensitive << ( icmp_ln53_7_fu_450_p2 );
    sensitive << ( icmp_ln53_6_fu_444_p2 );

    SC_METHOD(thread_or_ln53_4_fu_505_p2);
    sensitive << ( icmp_ln53_9_fu_499_p2 );
    sensitive << ( icmp_ln53_8_fu_493_p2 );

    SC_METHOD(thread_or_ln53_fu_358_p2);
    sensitive << ( icmp_ln53_1_fu_352_p2 );
    sensitive << ( icmp_ln53_fu_346_p2 );

    SC_METHOD(thread_p_tmp_3_0_3_fu_556_p3);
    sensitive << ( tmp_3_0_3_reg_874_pp0_iter6_reg );
    sensitive << ( icmp_ln57_fu_550_p2 );

    SC_METHOD(thread_p_tmp_3_1_3_fu_564_p3);
    sensitive << ( tmp_3_1_3_reg_881_pp0_iter6_reg );
    sensitive << ( icmp_ln57_fu_550_p2 );

    SC_METHOD(thread_p_tmp_3_2_3_fu_571_p3);
    sensitive << ( tmp_3_2_3_reg_888_pp0_iter6_reg );
    sensitive << ( icmp_ln57_fu_550_p2 );

    SC_METHOD(thread_p_tmp_3_3_3_fu_578_p3);
    sensitive << ( tmp_3_3_3_reg_895_pp0_iter6_reg );
    sensitive << ( icmp_ln57_fu_550_p2 );

    SC_METHOD(thread_tmp_1_fu_332_p4);
    sensitive << ( bitcast_ln53_fu_329_p1 );

    SC_METHOD(thread_tmp_4_fu_309_p4);
    sensitive << ( bitcast_ln53_1_fu_284_p1 );

    SC_METHOD(thread_tmp_6_fu_381_p4);
    sensitive << ( bitcast_ln53_2_fu_378_p1 );

    SC_METHOD(thread_tmp_7_fu_479_p4);
    sensitive << ( bitcast_ln53_4_fu_476_p1 );

    SC_METHOD(thread_tmp_9_fu_430_p4);
    sensitive << ( bitcast_ln53_3_fu_427_p1 );

    SC_METHOD(thread_trunc_ln53_1_fu_342_p1);
    sensitive << ( bitcast_ln53_fu_329_p1 );

    SC_METHOD(thread_trunc_ln53_2_fu_391_p1);
    sensitive << ( bitcast_ln53_2_fu_378_p1 );

    SC_METHOD(thread_trunc_ln53_3_fu_440_p1);
    sensitive << ( bitcast_ln53_3_fu_427_p1 );

    SC_METHOD(thread_trunc_ln53_4_fu_489_p1);
    sensitive << ( bitcast_ln53_4_fu_476_p1 );

    SC_METHOD(thread_trunc_ln53_fu_288_p1);
    sensitive << ( bitcast_ln53_1_fu_284_p1 );

    SC_METHOD(thread_zext_ln51_1_fu_423_p1);
    sensitive << ( and_ln53_3_fu_418_p2 );

    SC_METHOD(thread_zext_ln51_2_fu_472_p1);
    sensitive << ( and_ln53_5_fu_467_p2 );

    SC_METHOD(thread_zext_ln51_fu_374_p1);
    sensitive << ( and_ln53_1_fu_369_p2 );

    SC_METHOD(thread_zext_ln53_1_fu_538_p1);
    sensitive << ( add_ln53_reg_917 );

    SC_METHOD(thread_zext_ln53_2_fu_541_p1);
    sensitive << ( add_ln53_1_reg_922 );

    SC_METHOD(thread_zext_ln53_fu_522_p1);
    sensitive << ( and_ln53_7_fu_516_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( my_output_TREADY );
    sensitive << ( my_output_1_state );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln34_fu_298_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    my_input1_0_sel_rd = SC_LOGIC_0;
    my_input1_0_sel_wr = SC_LOGIC_0;
    my_input1_0_state = "00";
    my_output_1_sel_rd = SC_LOGIC_0;
    my_output_1_sel_wr = SC_LOGIC_0;
    my_output_1_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myFuncAccel4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, size, "(port)size");
    sc_trace(mVcdFile, dim, "(port)dim");
    sc_trace(mVcdFile, threshold, "(port)threshold");
    sc_trace(mVcdFile, data0_0, "(port)data0_0");
    sc_trace(mVcdFile, data0_1, "(port)data0_1");
    sc_trace(mVcdFile, data0_2, "(port)data0_2");
    sc_trace(mVcdFile, data0_3, "(port)data0_3");
    sc_trace(mVcdFile, data0_4, "(port)data0_4");
    sc_trace(mVcdFile, data0_5, "(port)data0_5");
    sc_trace(mVcdFile, data0_6, "(port)data0_6");
    sc_trace(mVcdFile, data0_7, "(port)data0_7");
    sc_trace(mVcdFile, data0_8, "(port)data0_8");
    sc_trace(mVcdFile, data0_9, "(port)data0_9");
    sc_trace(mVcdFile, data0_10, "(port)data0_10");
    sc_trace(mVcdFile, data0_11, "(port)data0_11");
    sc_trace(mVcdFile, data0_12, "(port)data0_12");
    sc_trace(mVcdFile, data0_13, "(port)data0_13");
    sc_trace(mVcdFile, data0_14, "(port)data0_14");
    sc_trace(mVcdFile, data0_15, "(port)data0_15");
    sc_trace(mVcdFile, my_input1_TDATA, "(port)my_input1_TDATA");
    sc_trace(mVcdFile, my_input1_TVALID, "(port)my_input1_TVALID");
    sc_trace(mVcdFile, my_input1_TREADY, "(port)my_input1_TREADY");
    sc_trace(mVcdFile, my_output_TDATA, "(port)my_output_TDATA");
    sc_trace(mVcdFile, my_output_TVALID, "(port)my_output_TVALID");
    sc_trace(mVcdFile, my_output_TREADY, "(port)my_output_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, my_input1_0_data_out, "my_input1_0_data_out");
    sc_trace(mVcdFile, my_input1_0_vld_in, "my_input1_0_vld_in");
    sc_trace(mVcdFile, my_input1_0_vld_out, "my_input1_0_vld_out");
    sc_trace(mVcdFile, my_input1_0_ack_in, "my_input1_0_ack_in");
    sc_trace(mVcdFile, my_input1_0_ack_out, "my_input1_0_ack_out");
    sc_trace(mVcdFile, my_input1_0_payload_A, "my_input1_0_payload_A");
    sc_trace(mVcdFile, my_input1_0_payload_B, "my_input1_0_payload_B");
    sc_trace(mVcdFile, my_input1_0_sel_rd, "my_input1_0_sel_rd");
    sc_trace(mVcdFile, my_input1_0_sel_wr, "my_input1_0_sel_wr");
    sc_trace(mVcdFile, my_input1_0_sel, "my_input1_0_sel");
    sc_trace(mVcdFile, my_input1_0_load_A, "my_input1_0_load_A");
    sc_trace(mVcdFile, my_input1_0_load_B, "my_input1_0_load_B");
    sc_trace(mVcdFile, my_input1_0_state, "my_input1_0_state");
    sc_trace(mVcdFile, my_input1_0_state_cmp_full, "my_input1_0_state_cmp_full");
    sc_trace(mVcdFile, my_output_1_data_in, "my_output_1_data_in");
    sc_trace(mVcdFile, my_output_1_data_out, "my_output_1_data_out");
    sc_trace(mVcdFile, my_output_1_vld_in, "my_output_1_vld_in");
    sc_trace(mVcdFile, my_output_1_vld_out, "my_output_1_vld_out");
    sc_trace(mVcdFile, my_output_1_ack_in, "my_output_1_ack_in");
    sc_trace(mVcdFile, my_output_1_ack_out, "my_output_1_ack_out");
    sc_trace(mVcdFile, my_output_1_payload_A, "my_output_1_payload_A");
    sc_trace(mVcdFile, my_output_1_payload_B, "my_output_1_payload_B");
    sc_trace(mVcdFile, my_output_1_sel_rd, "my_output_1_sel_rd");
    sc_trace(mVcdFile, my_output_1_sel_wr, "my_output_1_sel_wr");
    sc_trace(mVcdFile, my_output_1_sel, "my_output_1_sel");
    sc_trace(mVcdFile, my_output_1_load_A, "my_output_1_load_A");
    sc_trace(mVcdFile, my_output_1_load_B, "my_output_1_load_B");
    sc_trace(mVcdFile, my_output_1_state, "my_output_1_state");
    sc_trace(mVcdFile, my_output_1_state_cmp_full, "my_output_1_state_cmp_full");
    sc_trace(mVcdFile, my_input1_TDATA_blk_n, "my_input1_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln34_fu_298_p2, "icmp_ln34_fu_298_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln34_reg_685, "icmp_ln34_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, my_output_TDATA_blk_n, "my_output_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter7_reg, "icmp_ln34_reg_685_pp0_iter7_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter8_reg, "icmp_ln34_reg_685_pp0_iter8_reg");
    sc_trace(mVcdFile, i_1_reg_229, "i_1_reg_229");
    sc_trace(mVcdFile, bitcast_ln53_1_fu_284_p1, "bitcast_ln53_1_fu_284_p1");
    sc_trace(mVcdFile, icmp_ln53_3_fu_292_p2, "icmp_ln53_3_fu_292_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter2, "ap_block_state10_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter3, "ap_block_state14_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter4, "ap_block_state18_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter5, "ap_block_state22_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter6, "ap_block_state26_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter7, "ap_block_state30_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter8, "ap_block_state34_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state34_io, "ap_block_state34_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter1_reg, "icmp_ln34_reg_685_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter2_reg, "icmp_ln34_reg_685_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter3_reg, "icmp_ln34_reg_685_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter4_reg, "icmp_ln34_reg_685_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter5_reg, "icmp_ln34_reg_685_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln34_reg_685_pp0_iter6_reg, "icmp_ln34_reg_685_pp0_iter6_reg");
    sc_trace(mVcdFile, i_fu_303_p2, "i_fu_303_p2");
    sc_trace(mVcdFile, i_reg_689, "i_reg_689");
    sc_trace(mVcdFile, or_ln53_1_fu_324_p2, "or_ln53_1_fu_324_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter2, "ap_block_state11_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter3, "ap_block_state15_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter4, "ap_block_state19_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage1_iter5, "ap_block_state23_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage1_iter6, "ap_block_state27_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage1_iter7, "ap_block_state31_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state31_io, "ap_block_state31_io");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage1_iter8, "ap_block_state35_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_state35_io, "ap_block_state35_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage2_iter1, "ap_block_state8_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter2, "ap_block_state12_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage2_iter3, "ap_block_state16_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter4, "ap_block_state20_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage2_iter5, "ap_block_state24_pp0_stage2_iter5");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage2_iter6, "ap_block_state28_pp0_stage2_iter6");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage2_iter7, "ap_block_state32_pp0_stage2_iter7");
    sc_trace(mVcdFile, ap_block_state32_io, "ap_block_state32_io");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage3_iter1, "ap_block_state9_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter2, "ap_block_state13_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage3_iter3, "ap_block_state17_pp0_stage3_iter3");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter4, "ap_block_state21_pp0_stage3_iter4");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage3_iter5, "ap_block_state25_pp0_stage3_iter5");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage3_iter6, "ap_block_state29_pp0_stage3_iter6");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage3_iter7, "ap_block_state33_pp0_stage3_iter7");
    sc_trace(mVcdFile, ap_block_state33_io, "ap_block_state33_io");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, grp_fu_260_p2, "grp_fu_260_p2");
    sc_trace(mVcdFile, tmp_2_reg_734, "tmp_2_reg_734");
    sc_trace(mVcdFile, grp_fu_265_p2, "grp_fu_265_p2");
    sc_trace(mVcdFile, tmp_2_1_reg_739, "tmp_2_1_reg_739");
    sc_trace(mVcdFile, grp_fu_270_p2, "grp_fu_270_p2");
    sc_trace(mVcdFile, tmp_2_2_reg_744, "tmp_2_2_reg_744");
    sc_trace(mVcdFile, grp_fu_275_p2, "grp_fu_275_p2");
    sc_trace(mVcdFile, tmp_2_3_reg_749, "tmp_2_3_reg_749");
    sc_trace(mVcdFile, tmp_2_0_1_reg_754, "tmp_2_0_1_reg_754");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_2_0_1_reg_754_pp0_iter2_reg, "tmp_2_0_1_reg_754_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_1_1_reg_759, "tmp_2_1_1_reg_759");
    sc_trace(mVcdFile, tmp_2_1_1_reg_759_pp0_iter2_reg, "tmp_2_1_1_reg_759_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_2_1_reg_764, "tmp_2_2_1_reg_764");
    sc_trace(mVcdFile, tmp_2_2_1_reg_764_pp0_iter2_reg, "tmp_2_2_1_reg_764_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_3_1_reg_769, "tmp_2_3_1_reg_769");
    sc_trace(mVcdFile, tmp_2_3_1_reg_769_pp0_iter2_reg, "tmp_2_3_1_reg_769_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_0_2_reg_774, "tmp_2_0_2_reg_774");
    sc_trace(mVcdFile, tmp_2_0_2_reg_774_pp0_iter2_reg, "tmp_2_0_2_reg_774_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_0_2_reg_774_pp0_iter3_reg, "tmp_2_0_2_reg_774_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_2_reg_779, "tmp_2_1_2_reg_779");
    sc_trace(mVcdFile, tmp_2_1_2_reg_779_pp0_iter2_reg, "tmp_2_1_2_reg_779_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_1_2_reg_779_pp0_iter3_reg, "tmp_2_1_2_reg_779_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_2_reg_784, "tmp_2_2_2_reg_784");
    sc_trace(mVcdFile, tmp_2_2_2_reg_784_pp0_iter2_reg, "tmp_2_2_2_reg_784_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_2_2_reg_784_pp0_iter3_reg, "tmp_2_2_2_reg_784_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_2_reg_789, "tmp_2_3_2_reg_789");
    sc_trace(mVcdFile, tmp_2_3_2_reg_789_pp0_iter2_reg, "tmp_2_3_2_reg_789_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_3_2_reg_789_pp0_iter3_reg, "tmp_2_3_2_reg_789_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_794, "tmp_2_0_3_reg_794");
    sc_trace(mVcdFile, tmp_2_0_3_reg_794_pp0_iter2_reg, "tmp_2_0_3_reg_794_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_794_pp0_iter3_reg, "tmp_2_0_3_reg_794_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_0_3_reg_794_pp0_iter4_reg, "tmp_2_0_3_reg_794_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_799, "tmp_2_1_3_reg_799");
    sc_trace(mVcdFile, tmp_2_1_3_reg_799_pp0_iter2_reg, "tmp_2_1_3_reg_799_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_799_pp0_iter3_reg, "tmp_2_1_3_reg_799_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_1_3_reg_799_pp0_iter4_reg, "tmp_2_1_3_reg_799_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_804, "tmp_2_2_3_reg_804");
    sc_trace(mVcdFile, tmp_2_2_3_reg_804_pp0_iter2_reg, "tmp_2_2_3_reg_804_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_804_pp0_iter3_reg, "tmp_2_2_3_reg_804_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_2_3_reg_804_pp0_iter4_reg, "tmp_2_2_3_reg_804_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_809, "tmp_2_3_3_reg_809");
    sc_trace(mVcdFile, tmp_2_3_3_reg_809_pp0_iter2_reg, "tmp_2_3_3_reg_809_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_809_pp0_iter3_reg, "tmp_2_3_3_reg_809_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_3_3_reg_809_pp0_iter4_reg, "tmp_2_3_3_reg_809_pp0_iter4_reg");
    sc_trace(mVcdFile, grp_fu_240_p2, "grp_fu_240_p2");
    sc_trace(mVcdFile, tmp_3_reg_814, "tmp_3_reg_814");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_245_p2, "grp_fu_245_p2");
    sc_trace(mVcdFile, tmp_3_1_reg_819, "tmp_3_1_reg_819");
    sc_trace(mVcdFile, grp_fu_250_p2, "grp_fu_250_p2");
    sc_trace(mVcdFile, tmp_3_2_reg_824, "tmp_3_2_reg_824");
    sc_trace(mVcdFile, grp_fu_255_p2, "grp_fu_255_p2");
    sc_trace(mVcdFile, tmp_3_3_reg_829, "tmp_3_3_reg_829");
    sc_trace(mVcdFile, tmp_3_0_1_reg_834, "tmp_3_0_1_reg_834");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_3_1_1_reg_839, "tmp_3_1_1_reg_839");
    sc_trace(mVcdFile, tmp_3_2_1_reg_844, "tmp_3_2_1_reg_844");
    sc_trace(mVcdFile, tmp_3_3_1_reg_849, "tmp_3_3_1_reg_849");
    sc_trace(mVcdFile, tmp_3_0_2_reg_854, "tmp_3_0_2_reg_854");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, tmp_3_1_2_reg_859, "tmp_3_1_2_reg_859");
    sc_trace(mVcdFile, tmp_3_2_2_reg_864, "tmp_3_2_2_reg_864");
    sc_trace(mVcdFile, tmp_3_3_2_reg_869, "tmp_3_3_2_reg_869");
    sc_trace(mVcdFile, tmp_3_0_3_reg_874, "tmp_3_0_3_reg_874");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, tmp_3_0_3_reg_874_pp0_iter6_reg, "tmp_3_0_3_reg_874_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_1_3_reg_881, "tmp_3_1_3_reg_881");
    sc_trace(mVcdFile, tmp_3_1_3_reg_881_pp0_iter6_reg, "tmp_3_1_3_reg_881_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_2_3_reg_888, "tmp_3_2_3_reg_888");
    sc_trace(mVcdFile, tmp_3_2_3_reg_888_pp0_iter6_reg, "tmp_3_2_3_reg_888_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_3_3_reg_895, "tmp_3_3_3_reg_895");
    sc_trace(mVcdFile, tmp_3_3_3_reg_895_pp0_iter6_reg, "tmp_3_3_3_reg_895_pp0_iter6_reg");
    sc_trace(mVcdFile, grp_fu_280_p2, "grp_fu_280_p2");
    sc_trace(mVcdFile, tmp_5_reg_902, "tmp_5_reg_902");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, tmp_8_reg_907, "tmp_8_reg_907");
    sc_trace(mVcdFile, tmp_s_reg_912, "tmp_s_reg_912");
    sc_trace(mVcdFile, add_ln53_fu_526_p2, "add_ln53_fu_526_p2");
    sc_trace(mVcdFile, add_ln53_reg_917, "add_ln53_reg_917");
    sc_trace(mVcdFile, add_ln53_1_fu_532_p2, "add_ln53_1_fu_532_p2");
    sc_trace(mVcdFile, add_ln53_1_reg_922, "add_ln53_1_reg_922");
    sc_trace(mVcdFile, p_tmp_3_0_3_fu_556_p3, "p_tmp_3_0_3_fu_556_p3");
    sc_trace(mVcdFile, p_tmp_3_1_3_fu_564_p3, "p_tmp_3_1_3_fu_564_p3");
    sc_trace(mVcdFile, p_tmp_3_1_3_reg_932, "p_tmp_3_1_3_reg_932");
    sc_trace(mVcdFile, p_tmp_3_2_3_fu_571_p3, "p_tmp_3_2_3_fu_571_p3");
    sc_trace(mVcdFile, p_tmp_3_2_3_reg_937, "p_tmp_3_2_3_reg_937");
    sc_trace(mVcdFile, p_tmp_3_3_3_fu_578_p3, "p_tmp_3_3_3_fu_578_p3");
    sc_trace(mVcdFile, p_tmp_3_3_3_reg_942, "p_tmp_3_3_3_reg_942");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_233_p4, "ap_phi_mux_i_1_phi_fu_233_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_01001, "ap_block_pp0_stage3_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_240_p0, "grp_fu_240_p0");
    sc_trace(mVcdFile, grp_fu_240_p1, "grp_fu_240_p1");
    sc_trace(mVcdFile, grp_fu_245_p0, "grp_fu_245_p0");
    sc_trace(mVcdFile, grp_fu_245_p1, "grp_fu_245_p1");
    sc_trace(mVcdFile, grp_fu_250_p0, "grp_fu_250_p0");
    sc_trace(mVcdFile, grp_fu_250_p1, "grp_fu_250_p1");
    sc_trace(mVcdFile, grp_fu_255_p0, "grp_fu_255_p0");
    sc_trace(mVcdFile, grp_fu_255_p1, "grp_fu_255_p1");
    sc_trace(mVcdFile, grp_fu_260_p0, "grp_fu_260_p0");
    sc_trace(mVcdFile, grp_fu_265_p0, "grp_fu_265_p0");
    sc_trace(mVcdFile, grp_fu_270_p0, "grp_fu_270_p0");
    sc_trace(mVcdFile, grp_fu_275_p0, "grp_fu_275_p0");
    sc_trace(mVcdFile, grp_fu_280_p0, "grp_fu_280_p0");
    sc_trace(mVcdFile, trunc_ln53_fu_288_p1, "trunc_ln53_fu_288_p1");
    sc_trace(mVcdFile, tmp_4_fu_309_p4, "tmp_4_fu_309_p4");
    sc_trace(mVcdFile, icmp_ln53_2_fu_318_p2, "icmp_ln53_2_fu_318_p2");
    sc_trace(mVcdFile, bitcast_ln53_fu_329_p1, "bitcast_ln53_fu_329_p1");
    sc_trace(mVcdFile, tmp_1_fu_332_p4, "tmp_1_fu_332_p4");
    sc_trace(mVcdFile, trunc_ln53_1_fu_342_p1, "trunc_ln53_1_fu_342_p1");
    sc_trace(mVcdFile, icmp_ln53_1_fu_352_p2, "icmp_ln53_1_fu_352_p2");
    sc_trace(mVcdFile, icmp_ln53_fu_346_p2, "icmp_ln53_fu_346_p2");
    sc_trace(mVcdFile, or_ln53_fu_358_p2, "or_ln53_fu_358_p2");
    sc_trace(mVcdFile, and_ln53_fu_364_p2, "and_ln53_fu_364_p2");
    sc_trace(mVcdFile, and_ln53_1_fu_369_p2, "and_ln53_1_fu_369_p2");
    sc_trace(mVcdFile, bitcast_ln53_2_fu_378_p1, "bitcast_ln53_2_fu_378_p1");
    sc_trace(mVcdFile, tmp_6_fu_381_p4, "tmp_6_fu_381_p4");
    sc_trace(mVcdFile, trunc_ln53_2_fu_391_p1, "trunc_ln53_2_fu_391_p1");
    sc_trace(mVcdFile, icmp_ln53_5_fu_401_p2, "icmp_ln53_5_fu_401_p2");
    sc_trace(mVcdFile, icmp_ln53_4_fu_395_p2, "icmp_ln53_4_fu_395_p2");
    sc_trace(mVcdFile, or_ln53_2_fu_407_p2, "or_ln53_2_fu_407_p2");
    sc_trace(mVcdFile, and_ln53_2_fu_413_p2, "and_ln53_2_fu_413_p2");
    sc_trace(mVcdFile, and_ln53_3_fu_418_p2, "and_ln53_3_fu_418_p2");
    sc_trace(mVcdFile, bitcast_ln53_3_fu_427_p1, "bitcast_ln53_3_fu_427_p1");
    sc_trace(mVcdFile, tmp_9_fu_430_p4, "tmp_9_fu_430_p4");
    sc_trace(mVcdFile, trunc_ln53_3_fu_440_p1, "trunc_ln53_3_fu_440_p1");
    sc_trace(mVcdFile, icmp_ln53_7_fu_450_p2, "icmp_ln53_7_fu_450_p2");
    sc_trace(mVcdFile, icmp_ln53_6_fu_444_p2, "icmp_ln53_6_fu_444_p2");
    sc_trace(mVcdFile, or_ln53_3_fu_456_p2, "or_ln53_3_fu_456_p2");
    sc_trace(mVcdFile, and_ln53_4_fu_462_p2, "and_ln53_4_fu_462_p2");
    sc_trace(mVcdFile, and_ln53_5_fu_467_p2, "and_ln53_5_fu_467_p2");
    sc_trace(mVcdFile, bitcast_ln53_4_fu_476_p1, "bitcast_ln53_4_fu_476_p1");
    sc_trace(mVcdFile, tmp_7_fu_479_p4, "tmp_7_fu_479_p4");
    sc_trace(mVcdFile, trunc_ln53_4_fu_489_p1, "trunc_ln53_4_fu_489_p1");
    sc_trace(mVcdFile, icmp_ln53_9_fu_499_p2, "icmp_ln53_9_fu_499_p2");
    sc_trace(mVcdFile, icmp_ln53_8_fu_493_p2, "icmp_ln53_8_fu_493_p2");
    sc_trace(mVcdFile, or_ln53_4_fu_505_p2, "or_ln53_4_fu_505_p2");
    sc_trace(mVcdFile, and_ln53_6_fu_511_p2, "and_ln53_6_fu_511_p2");
    sc_trace(mVcdFile, and_ln53_7_fu_516_p2, "and_ln53_7_fu_516_p2");
    sc_trace(mVcdFile, zext_ln51_1_fu_423_p1, "zext_ln51_1_fu_423_p1");
    sc_trace(mVcdFile, zext_ln51_fu_374_p1, "zext_ln51_fu_374_p1");
    sc_trace(mVcdFile, zext_ln51_2_fu_472_p1, "zext_ln51_2_fu_472_p1");
    sc_trace(mVcdFile, zext_ln53_fu_522_p1, "zext_ln53_fu_522_p1");
    sc_trace(mVcdFile, zext_ln53_2_fu_541_p1, "zext_ln53_2_fu_541_p1");
    sc_trace(mVcdFile, zext_ln53_1_fu_538_p1, "zext_ln53_1_fu_538_p1");
    sc_trace(mVcdFile, add_ln53_2_fu_544_p2, "add_ln53_2_fu_544_p2");
    sc_trace(mVcdFile, icmp_ln57_fu_550_p2, "icmp_ln57_fu_550_p2");
    sc_trace(mVcdFile, grp_fu_240_ce, "grp_fu_240_ce");
    sc_trace(mVcdFile, grp_fu_245_ce, "grp_fu_245_ce");
    sc_trace(mVcdFile, grp_fu_250_ce, "grp_fu_250_ce");
    sc_trace(mVcdFile, grp_fu_255_ce, "grp_fu_255_ce");
    sc_trace(mVcdFile, grp_fu_260_ce, "grp_fu_260_ce");
    sc_trace(mVcdFile, grp_fu_265_ce, "grp_fu_265_ce");
    sc_trace(mVcdFile, grp_fu_270_ce, "grp_fu_270_ce");
    sc_trace(mVcdFile, grp_fu_275_ce, "grp_fu_275_ce");
    sc_trace(mVcdFile, grp_fu_280_ce, "grp_fu_280_ce");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_00001, "ap_block_pp0_stage1_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_00001, "ap_block_pp0_stage2_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_00001, "ap_block_pp0_stage3_00001");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_block_state36, "ap_block_state36");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_629, "ap_condition_629");
    sc_trace(mVcdFile, ap_condition_634, "ap_condition_634");
    sc_trace(mVcdFile, ap_condition_639, "ap_condition_639");
    sc_trace(mVcdFile, ap_condition_644, "ap_condition_644");
#endif

    }
    mHdltvinHandle.open("myFuncAccel4.hdltvin.dat");
    mHdltvoutHandle.open("myFuncAccel4.hdltvout.dat");
}

myFuncAccel4::~myFuncAccel4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U2;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U3;
    delete myFuncAccel4_fadd_32ns_32ns_32_5_full_dsp_1_U4;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U5;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U6;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U7;
    delete myFuncAccel4_fmul_32ns_32ns_32_4_max_dsp_1_U8;
    delete myFuncAccel4_fcmp_32ns_32ns_1_2_1_U9;
}

void myFuncAccel4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void myFuncAccel4::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_1_reg_229 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_1_reg_229 = i_reg_689.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        my_input1_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_vld_out.read()))) {
            my_input1_0_sel_rd =  (sc_logic) (~my_input1_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        my_input1_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_ack_in.read()))) {
            my_input1_0_sel_wr =  (sc_logic) (~my_input1_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        my_input1_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_ack_out.read()) && 
              esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_in.read()) && 
              esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_2)))) {
            my_input1_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_1)))) {
            my_input1_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(my_input1_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_ack_out.read()))))) {
            my_input1_0_state = ap_const_lv2_3;
        } else {
            my_input1_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        my_output_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_vld_out.read()))) {
            my_output_1_sel_rd =  (sc_logic) (~my_output_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        my_output_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_ack_in.read()))) {
            my_output_1_sel_wr =  (sc_logic) (~my_output_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        my_output_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, my_output_1_state.read())))) {
            my_output_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, my_output_1_state.read())))) {
            my_output_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, my_output_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, my_output_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_ack_out.read()))))) {
            my_output_1_state = ap_const_lv2_3;
        } else {
            my_output_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter6_reg.read()))) {
        add_ln53_1_reg_922 = add_ln53_1_fu_532_p2.read();
        add_ln53_reg_917 = add_ln53_fu_526_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_689 = i_fu_303_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln34_reg_685 = icmp_ln34_fu_298_p2.read();
        icmp_ln34_reg_685_pp0_iter1_reg = icmp_ln34_reg_685.read();
        icmp_ln34_reg_685_pp0_iter2_reg = icmp_ln34_reg_685_pp0_iter1_reg.read();
        icmp_ln34_reg_685_pp0_iter3_reg = icmp_ln34_reg_685_pp0_iter2_reg.read();
        icmp_ln34_reg_685_pp0_iter4_reg = icmp_ln34_reg_685_pp0_iter3_reg.read();
        icmp_ln34_reg_685_pp0_iter5_reg = icmp_ln34_reg_685_pp0_iter4_reg.read();
        icmp_ln34_reg_685_pp0_iter6_reg = icmp_ln34_reg_685_pp0_iter5_reg.read();
        icmp_ln34_reg_685_pp0_iter7_reg = icmp_ln34_reg_685_pp0_iter6_reg.read();
        icmp_ln34_reg_685_pp0_iter8_reg = icmp_ln34_reg_685_pp0_iter7_reg.read();
        tmp_2_0_1_reg_754_pp0_iter2_reg = tmp_2_0_1_reg_754.read();
        tmp_2_1_1_reg_759_pp0_iter2_reg = tmp_2_1_1_reg_759.read();
        tmp_2_2_1_reg_764_pp0_iter2_reg = tmp_2_2_1_reg_764.read();
        tmp_2_3_1_reg_769_pp0_iter2_reg = tmp_2_3_1_reg_769.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_load_A.read())) {
        my_input1_0_payload_A = my_input1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_load_B.read())) {
        my_input1_0_payload_B = my_input1_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_load_A.read())) {
        my_output_1_payload_A = my_output_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_load_B.read())) {
        my_output_1_payload_B = my_output_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        p_tmp_3_1_3_reg_932 = p_tmp_3_1_3_fu_564_p3.read();
        p_tmp_3_2_3_reg_937 = p_tmp_3_2_3_fu_571_p3.read();
        p_tmp_3_3_3_reg_942 = p_tmp_3_3_3_fu_578_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        tmp_2_0_1_reg_754 = grp_fu_260_p2.read();
        tmp_2_1_1_reg_759 = grp_fu_265_p2.read();
        tmp_2_2_1_reg_764 = grp_fu_270_p2.read();
        tmp_2_3_1_reg_769 = grp_fu_275_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter1_reg.read()))) {
        tmp_2_0_2_reg_774 = grp_fu_260_p2.read();
        tmp_2_1_2_reg_779 = grp_fu_265_p2.read();
        tmp_2_2_2_reg_784 = grp_fu_270_p2.read();
        tmp_2_3_2_reg_789 = grp_fu_275_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_2_0_2_reg_774_pp0_iter2_reg = tmp_2_0_2_reg_774.read();
        tmp_2_0_2_reg_774_pp0_iter3_reg = tmp_2_0_2_reg_774_pp0_iter2_reg.read();
        tmp_2_1_2_reg_779_pp0_iter2_reg = tmp_2_1_2_reg_779.read();
        tmp_2_1_2_reg_779_pp0_iter3_reg = tmp_2_1_2_reg_779_pp0_iter2_reg.read();
        tmp_2_2_2_reg_784_pp0_iter2_reg = tmp_2_2_2_reg_784.read();
        tmp_2_2_2_reg_784_pp0_iter3_reg = tmp_2_2_2_reg_784_pp0_iter2_reg.read();
        tmp_2_3_2_reg_789_pp0_iter2_reg = tmp_2_3_2_reg_789.read();
        tmp_2_3_2_reg_789_pp0_iter3_reg = tmp_2_3_2_reg_789_pp0_iter2_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter1_reg.read()))) {
        tmp_2_0_3_reg_794 = grp_fu_260_p2.read();
        tmp_2_1_3_reg_799 = grp_fu_265_p2.read();
        tmp_2_2_3_reg_804 = grp_fu_270_p2.read();
        tmp_2_3_3_reg_809 = grp_fu_275_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_2_0_3_reg_794_pp0_iter2_reg = tmp_2_0_3_reg_794.read();
        tmp_2_0_3_reg_794_pp0_iter3_reg = tmp_2_0_3_reg_794_pp0_iter2_reg.read();
        tmp_2_0_3_reg_794_pp0_iter4_reg = tmp_2_0_3_reg_794_pp0_iter3_reg.read();
        tmp_2_1_3_reg_799_pp0_iter2_reg = tmp_2_1_3_reg_799.read();
        tmp_2_1_3_reg_799_pp0_iter3_reg = tmp_2_1_3_reg_799_pp0_iter2_reg.read();
        tmp_2_1_3_reg_799_pp0_iter4_reg = tmp_2_1_3_reg_799_pp0_iter3_reg.read();
        tmp_2_2_3_reg_804_pp0_iter2_reg = tmp_2_2_3_reg_804.read();
        tmp_2_2_3_reg_804_pp0_iter3_reg = tmp_2_2_3_reg_804_pp0_iter2_reg.read();
        tmp_2_2_3_reg_804_pp0_iter4_reg = tmp_2_2_3_reg_804_pp0_iter3_reg.read();
        tmp_2_3_3_reg_809_pp0_iter2_reg = tmp_2_3_3_reg_809.read();
        tmp_2_3_3_reg_809_pp0_iter3_reg = tmp_2_3_3_reg_809_pp0_iter2_reg.read();
        tmp_2_3_3_reg_809_pp0_iter4_reg = tmp_2_3_3_reg_809_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_2_1_reg_739 = grp_fu_265_p2.read();
        tmp_2_2_reg_744 = grp_fu_270_p2.read();
        tmp_2_3_reg_749 = grp_fu_275_p2.read();
        tmp_2_reg_734 = grp_fu_260_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter3_reg.read()))) {
        tmp_3_0_1_reg_834 = grp_fu_240_p2.read();
        tmp_3_1_1_reg_839 = grp_fu_245_p2.read();
        tmp_3_2_1_reg_844 = grp_fu_250_p2.read();
        tmp_3_3_1_reg_849 = grp_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter4_reg.read()))) {
        tmp_3_0_2_reg_854 = grp_fu_240_p2.read();
        tmp_3_1_2_reg_859 = grp_fu_245_p2.read();
        tmp_3_2_2_reg_864 = grp_fu_250_p2.read();
        tmp_3_3_2_reg_869 = grp_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter5_reg.read()))) {
        tmp_3_0_3_reg_874 = grp_fu_240_p2.read();
        tmp_3_1_3_reg_881 = grp_fu_245_p2.read();
        tmp_3_2_3_reg_888 = grp_fu_250_p2.read();
        tmp_3_3_3_reg_895 = grp_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_3_0_3_reg_874_pp0_iter6_reg = tmp_3_0_3_reg_874.read();
        tmp_3_1_3_reg_881_pp0_iter6_reg = tmp_3_1_3_reg_881.read();
        tmp_3_2_3_reg_888_pp0_iter6_reg = tmp_3_2_3_reg_888.read();
        tmp_3_3_3_reg_895_pp0_iter6_reg = tmp_3_3_3_reg_895.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        tmp_3_1_reg_819 = grp_fu_245_p2.read();
        tmp_3_2_reg_824 = grp_fu_250_p2.read();
        tmp_3_3_reg_829 = grp_fu_255_p2.read();
        tmp_3_reg_814 = grp_fu_240_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter6_reg.read()))) {
        tmp_5_reg_902 = grp_fu_280_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter6_reg.read()))) {
        tmp_8_reg_907 = grp_fu_280_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter6_reg.read()))) {
        tmp_s_reg_912 = grp_fu_280_p2.read();
    }
}

void myFuncAccel4::thread_add_ln53_1_fu_532_p2() {
    add_ln53_1_fu_532_p2 = (!zext_ln51_2_fu_472_p1.read().is_01() || !zext_ln53_fu_522_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln51_2_fu_472_p1.read()) + sc_biguint<2>(zext_ln53_fu_522_p1.read()));
}

void myFuncAccel4::thread_add_ln53_2_fu_544_p2() {
    add_ln53_2_fu_544_p2 = (!zext_ln53_2_fu_541_p1.read().is_01() || !zext_ln53_1_fu_538_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln53_2_fu_541_p1.read()) + sc_biguint<3>(zext_ln53_1_fu_538_p1.read()));
}

void myFuncAccel4::thread_add_ln53_fu_526_p2() {
    add_ln53_fu_526_p2 = (!zext_ln51_1_fu_423_p1.read().is_01() || !zext_ln51_fu_374_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln51_1_fu_423_p1.read()) + sc_biguint<2>(zext_ln51_fu_374_p1.read()));
}

void myFuncAccel4::thread_and_ln53_1_fu_369_p2() {
    and_ln53_1_fu_369_p2 = (and_ln53_fu_364_p2.read() & tmp_5_reg_902.read());
}

void myFuncAccel4::thread_and_ln53_2_fu_413_p2() {
    and_ln53_2_fu_413_p2 = (or_ln53_2_fu_407_p2.read() & or_ln53_1_fu_324_p2.read());
}

void myFuncAccel4::thread_and_ln53_3_fu_418_p2() {
    and_ln53_3_fu_418_p2 = (and_ln53_2_fu_413_p2.read() & tmp_8_reg_907.read());
}

void myFuncAccel4::thread_and_ln53_4_fu_462_p2() {
    and_ln53_4_fu_462_p2 = (or_ln53_3_fu_456_p2.read() & or_ln53_1_fu_324_p2.read());
}

void myFuncAccel4::thread_and_ln53_5_fu_467_p2() {
    and_ln53_5_fu_467_p2 = (and_ln53_4_fu_462_p2.read() & tmp_s_reg_912.read());
}

void myFuncAccel4::thread_and_ln53_6_fu_511_p2() {
    and_ln53_6_fu_511_p2 = (or_ln53_4_fu_505_p2.read() & or_ln53_1_fu_324_p2.read());
}

void myFuncAccel4::thread_and_ln53_7_fu_516_p2() {
    and_ln53_7_fu_516_p2 = (and_ln53_6_fu_511_p2.read() & grp_fu_280_p2.read());
}

void myFuncAccel4::thread_and_ln53_fu_364_p2() {
    and_ln53_fu_364_p2 = (or_ln53_fu_358_p2.read() & or_ln53_1_fu_324_p2.read());
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void myFuncAccel4::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void myFuncAccel4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myFuncAccel4::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[5];
}

void myFuncAccel4::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state34_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state34_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage1_00001() {
    ap_block_pp0_stage1_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state31_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state31_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state35_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage2_00001() {
    ap_block_pp0_stage2_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state32_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state32_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_pp0_stage3_00001() {
    ap_block_pp0_stage3_00001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_01001() {
    ap_block_pp0_stage3_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state33_io.read())));
}

void myFuncAccel4::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state33_io.read())));
}

void myFuncAccel4::thread_ap_block_state10_pp0_stage0_iter2() {
    ap_block_state10_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state11_pp0_stage1_iter2() {
    ap_block_state11_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state12_pp0_stage2_iter2() {
    ap_block_state12_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state13_pp0_stage3_iter2() {
    ap_block_state13_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state14_pp0_stage0_iter3() {
    ap_block_state14_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state15_pp0_stage1_iter3() {
    ap_block_state15_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state16_pp0_stage2_iter3() {
    ap_block_state16_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state17_pp0_stage3_iter3() {
    ap_block_state17_pp0_stage3_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state18_pp0_stage0_iter4() {
    ap_block_state18_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state19_pp0_stage1_iter4() {
    ap_block_state19_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state20_pp0_stage2_iter4() {
    ap_block_state20_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state21_pp0_stage3_iter4() {
    ap_block_state21_pp0_stage3_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state22_pp0_stage0_iter5() {
    ap_block_state22_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state23_pp0_stage1_iter5() {
    ap_block_state23_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state24_pp0_stage2_iter5() {
    ap_block_state24_pp0_stage2_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state25_pp0_stage3_iter5() {
    ap_block_state25_pp0_stage3_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state26_pp0_stage0_iter6() {
    ap_block_state26_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state27_pp0_stage1_iter6() {
    ap_block_state27_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state28_pp0_stage2_iter6() {
    ap_block_state28_pp0_stage2_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state29_pp0_stage3_iter6() {
    ap_block_state29_pp0_stage3_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state30_pp0_stage0_iter7() {
    ap_block_state30_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state31_io() {
    ap_block_state31_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state31_pp0_stage1_iter7() {
    ap_block_state31_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state32_io() {
    ap_block_state32_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state32_pp0_stage2_iter7() {
    ap_block_state32_pp0_stage2_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state33_io() {
    ap_block_state33_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state33_pp0_stage3_iter7() {
    ap_block_state33_pp0_stage3_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state34_io() {
    ap_block_state34_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state34_pp0_stage0_iter8() {
    ap_block_state34_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state35_io() {
    ap_block_state35_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_output_1_ack_in.read()));
}

void myFuncAccel4::thread_ap_block_state35_pp0_stage1_iter8() {
    ap_block_state35_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state36() {
    ap_block_state36 = (esl_seteq<1,2,2>(ap_const_lv2_1, my_output_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read())));
}

void myFuncAccel4::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && esl_seteq<1,1,1>(ap_const_logic_0, my_input1_0_vld_out.read()));
}

void myFuncAccel4::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state8_pp0_stage2_iter1() {
    ap_block_state8_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_block_state9_pp0_stage3_iter1() {
    ap_block_state9_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myFuncAccel4::thread_ap_condition_629() {
    ap_condition_629 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0));
}

void myFuncAccel4::thread_ap_condition_634() {
    ap_condition_634 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0));
}

void myFuncAccel4::thread_ap_condition_639() {
    ap_condition_639 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0));
}

void myFuncAccel4::thread_ap_condition_644() {
    ap_condition_644 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void myFuncAccel4::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_298_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, my_output_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myFuncAccel4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_phi_mux_i_1_phi_fu_233_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_i_1_phi_fu_233_p4 = i_reg_689.read();
    } else {
        ap_phi_mux_i_1_phi_fu_233_p4 = i_1_reg_229.read();
    }
}

void myFuncAccel4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, my_output_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void myFuncAccel4::thread_bitcast_ln53_1_fu_284_p1() {
    bitcast_ln53_1_fu_284_p1 = threshold.read();
}

void myFuncAccel4::thread_bitcast_ln53_2_fu_378_p1() {
    bitcast_ln53_2_fu_378_p1 = tmp_3_1_3_reg_881_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_bitcast_ln53_3_fu_427_p1() {
    bitcast_ln53_3_fu_427_p1 = tmp_3_2_3_reg_888_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_bitcast_ln53_4_fu_476_p1() {
    bitcast_ln53_4_fu_476_p1 = tmp_3_3_3_reg_895_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_bitcast_ln53_fu_329_p1() {
    bitcast_ln53_fu_329_p1 = tmp_3_0_3_reg_874_pp0_iter6_reg.read();
}

void myFuncAccel4::thread_grp_fu_240_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_240_ce = ap_const_logic_1;
    } else {
        grp_fu_240_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_240_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_240_p0 = tmp_3_0_2_reg_854.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_240_p0 = tmp_3_0_1_reg_834.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_240_p0 = tmp_3_reg_814.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_240_p0 = tmp_2_reg_734.read();
    } else {
        grp_fu_240_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_240_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_240_p1 = tmp_2_0_3_reg_794_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_240_p1 = tmp_2_0_2_reg_774_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_240_p1 = tmp_2_0_1_reg_754_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_240_p1 = ap_const_lv32_0;
    } else {
        grp_fu_240_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_245_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_245_ce = ap_const_logic_1;
    } else {
        grp_fu_245_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_245_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_245_p0 = tmp_3_1_2_reg_859.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_245_p0 = tmp_3_1_1_reg_839.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_245_p0 = tmp_3_1_reg_819.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_245_p0 = tmp_2_1_reg_739.read();
    } else {
        grp_fu_245_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_245_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_245_p1 = tmp_2_1_3_reg_799_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_245_p1 = tmp_2_1_2_reg_779_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_245_p1 = tmp_2_1_1_reg_759_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_245_p1 = ap_const_lv32_0;
    } else {
        grp_fu_245_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_250_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_250_ce = ap_const_logic_1;
    } else {
        grp_fu_250_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_250_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_250_p0 = tmp_3_2_2_reg_864.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_250_p0 = tmp_3_2_1_reg_844.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_250_p0 = tmp_3_2_reg_824.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_250_p0 = tmp_2_2_reg_744.read();
    } else {
        grp_fu_250_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_250_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_250_p1 = tmp_2_2_3_reg_804_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_250_p1 = tmp_2_2_2_reg_784_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_250_p1 = tmp_2_2_1_reg_764_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_250_p1 = ap_const_lv32_0;
    } else {
        grp_fu_250_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_255_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_255_ce = ap_const_logic_1;
    } else {
        grp_fu_255_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_255_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_255_p0 = tmp_3_3_2_reg_869.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_255_p0 = tmp_3_3_1_reg_849.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_255_p0 = tmp_3_3_reg_829.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_255_p0 = tmp_2_3_reg_749.read();
    } else {
        grp_fu_255_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_255_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fu_255_p1 = tmp_2_3_3_reg_809_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        grp_fu_255_p1 = tmp_2_3_2_reg_789_pp0_iter3_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_255_p1 = tmp_2_3_1_reg_769_pp0_iter2_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        grp_fu_255_p1 = ap_const_lv32_0;
    } else {
        grp_fu_255_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_260_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_260_ce = ap_const_logic_1;
    } else {
        grp_fu_260_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_260_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_260_p0 = data0_3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_260_p0 = data0_2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_260_p0 = data0_1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_260_p0 = data0_0.read();
        } else {
            grp_fu_260_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_260_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_265_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_265_ce = ap_const_logic_1;
    } else {
        grp_fu_265_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_265_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_265_p0 = data0_7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_265_p0 = data0_6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_265_p0 = data0_5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_265_p0 = data0_4.read();
        } else {
            grp_fu_265_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_265_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_270_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_270_ce = ap_const_logic_1;
    } else {
        grp_fu_270_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_270_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_270_p0 = data0_11.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_270_p0 = data0_10.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_270_p0 = data0_9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_270_p0 = data0_8.read();
        } else {
            grp_fu_270_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_270_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_275_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_275_ce = ap_const_logic_1;
    } else {
        grp_fu_275_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_275_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_275_p0 = data0_15.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_275_p0 = data0_14.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_275_p0 = data0_13.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_275_p0 = data0_12.read();
        } else {
            grp_fu_275_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_275_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_grp_fu_280_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_280_ce = ap_const_logic_1;
    } else {
        grp_fu_280_ce = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_grp_fu_280_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            grp_fu_280_p0 = tmp_3_3_3_reg_895.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            grp_fu_280_p0 = tmp_3_2_3_reg_888.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_280_p0 = tmp_3_1_3_reg_881.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_280_p0 = tmp_3_0_3_reg_874.read();
        } else {
            grp_fu_280_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fu_280_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_i_fu_303_p2() {
    i_fu_303_p2 = (!ap_phi_mux_i_1_phi_fu_233_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_i_1_phi_fu_233_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void myFuncAccel4::thread_icmp_ln34_fu_298_p2() {
    icmp_ln34_fu_298_p2 = (!ap_phi_mux_i_1_phi_fu_233_p4.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_1_phi_fu_233_p4.read() == size.read());
}

void myFuncAccel4::thread_icmp_ln53_1_fu_352_p2() {
    icmp_ln53_1_fu_352_p2 = (!trunc_ln53_1_fu_342_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln53_1_fu_342_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln53_2_fu_318_p2() {
    icmp_ln53_2_fu_318_p2 = (!tmp_4_fu_309_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_309_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln53_3_fu_292_p2() {
    icmp_ln53_3_fu_292_p2 = (!trunc_ln53_fu_288_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln53_fu_288_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln53_4_fu_395_p2() {
    icmp_ln53_4_fu_395_p2 = (!tmp_6_fu_381_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_381_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln53_5_fu_401_p2() {
    icmp_ln53_5_fu_401_p2 = (!trunc_ln53_2_fu_391_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln53_2_fu_391_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln53_6_fu_444_p2() {
    icmp_ln53_6_fu_444_p2 = (!tmp_9_fu_430_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_430_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln53_7_fu_450_p2() {
    icmp_ln53_7_fu_450_p2 = (!trunc_ln53_3_fu_440_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln53_3_fu_440_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln53_8_fu_493_p2() {
    icmp_ln53_8_fu_493_p2 = (!tmp_7_fu_479_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_479_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln53_9_fu_499_p2() {
    icmp_ln53_9_fu_499_p2 = (!trunc_ln53_4_fu_489_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln53_4_fu_489_p1.read() == ap_const_lv23_0);
}

void myFuncAccel4::thread_icmp_ln53_fu_346_p2() {
    icmp_ln53_fu_346_p2 = (!tmp_1_fu_332_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_332_p4.read() != ap_const_lv8_FF);
}

void myFuncAccel4::thread_icmp_ln57_fu_550_p2() {
    icmp_ln57_fu_550_p2 = (!add_ln53_2_fu_544_p2.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(add_ln53_2_fu_544_p2.read() == ap_const_lv3_4);
}

void myFuncAccel4::thread_my_input1_0_ack_in() {
    my_input1_0_ack_in = my_input1_0_state.read()[1];
}

void myFuncAccel4::thread_my_input1_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        my_input1_0_ack_out = ap_const_logic_1;
    } else {
        my_input1_0_ack_out = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_my_input1_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, my_input1_0_sel.read())) {
        my_input1_0_data_out = my_input1_0_payload_B.read();
    } else {
        my_input1_0_data_out = my_input1_0_payload_A.read();
    }
}

void myFuncAccel4::thread_my_input1_0_load_A() {
    my_input1_0_load_A = (my_input1_0_state_cmp_full.read() & ~my_input1_0_sel_wr.read());
}

void myFuncAccel4::thread_my_input1_0_load_B() {
    my_input1_0_load_B = (my_input1_0_sel_wr.read() & my_input1_0_state_cmp_full.read());
}

void myFuncAccel4::thread_my_input1_0_sel() {
    my_input1_0_sel = my_input1_0_sel_rd.read();
}

void myFuncAccel4::thread_my_input1_0_state_cmp_full() {
    my_input1_0_state_cmp_full =  (sc_logic) ((!my_input1_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(my_input1_0_state.read() != ap_const_lv2_1))[0];
}

void myFuncAccel4::thread_my_input1_0_vld_in() {
    my_input1_0_vld_in = my_input1_TVALID.read();
}

void myFuncAccel4::thread_my_input1_0_vld_out() {
    my_input1_0_vld_out = my_input1_0_state.read()[0];
}

void myFuncAccel4::thread_my_input1_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_298_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)))) {
        my_input1_TDATA_blk_n = my_input1_0_state.read()[0];
    } else {
        my_input1_TDATA_blk_n = ap_const_logic_1;
    }
}

void myFuncAccel4::thread_my_input1_TREADY() {
    my_input1_TREADY = my_input1_0_state.read()[1];
}

void myFuncAccel4::thread_my_output_1_ack_in() {
    my_output_1_ack_in = my_output_1_state.read()[1];
}

void myFuncAccel4::thread_my_output_1_ack_out() {
    my_output_1_ack_out = my_output_TREADY.read();
}

void myFuncAccel4::thread_my_output_1_data_in() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read())) {
        if (esl_seteq<1,1,1>(ap_condition_644.read(), ap_const_boolean_1)) {
            my_output_1_data_in = p_tmp_3_3_3_reg_942.read();
        } else if (esl_seteq<1,1,1>(ap_condition_639.read(), ap_const_boolean_1)) {
            my_output_1_data_in = p_tmp_3_2_3_reg_937.read();
        } else if (esl_seteq<1,1,1>(ap_condition_634.read(), ap_const_boolean_1)) {
            my_output_1_data_in = p_tmp_3_1_3_reg_932.read();
        } else if (esl_seteq<1,1,1>(ap_condition_629.read(), ap_const_boolean_1)) {
            my_output_1_data_in = p_tmp_3_0_3_fu_556_p3.read();
        } else {
            my_output_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        my_output_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myFuncAccel4::thread_my_output_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, my_output_1_sel.read())) {
        my_output_1_data_out = my_output_1_payload_B.read();
    } else {
        my_output_1_data_out = my_output_1_payload_A.read();
    }
}

void myFuncAccel4::thread_my_output_1_load_A() {
    my_output_1_load_A = (my_output_1_state_cmp_full.read() & ~my_output_1_sel_wr.read());
}

void myFuncAccel4::thread_my_output_1_load_B() {
    my_output_1_load_B = (my_output_1_sel_wr.read() & my_output_1_state_cmp_full.read());
}

void myFuncAccel4::thread_my_output_1_sel() {
    my_output_1_sel = my_output_1_sel_rd.read();
}

void myFuncAccel4::thread_my_output_1_state_cmp_full() {
    my_output_1_state_cmp_full =  (sc_logic) ((!my_output_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(my_output_1_state.read() != ap_const_lv2_1))[0];
}

void myFuncAccel4::thread_my_output_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        my_output_1_vld_in = ap_const_logic_1;
    } else {
        my_output_1_vld_in = ap_const_logic_0;
    }
}

void myFuncAccel4::thread_my_output_1_vld_out() {
    my_output_1_vld_out = my_output_1_state.read()[0];
}

void myFuncAccel4::thread_my_output_TDATA() {
    my_output_TDATA = my_output_1_data_out.read();
}

void myFuncAccel4::thread_my_output_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter7_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_reg_685_pp0_iter8_reg.read())))) {
        my_output_TDATA_blk_n = my_output_1_state.read()[1];
    } else {
        my_output_TDATA_blk_n = ap_const_logic_1;
    }
}

void myFuncAccel4::thread_my_output_TVALID() {
    my_output_TVALID = my_output_1_state.read()[0];
}

void myFuncAccel4::thread_or_ln53_1_fu_324_p2() {
    or_ln53_1_fu_324_p2 = (icmp_ln53_3_fu_292_p2.read() | icmp_ln53_2_fu_318_p2.read());
}

void myFuncAccel4::thread_or_ln53_2_fu_407_p2() {
    or_ln53_2_fu_407_p2 = (icmp_ln53_5_fu_401_p2.read() | icmp_ln53_4_fu_395_p2.read());
}

void myFuncAccel4::thread_or_ln53_3_fu_456_p2() {
    or_ln53_3_fu_456_p2 = (icmp_ln53_7_fu_450_p2.read() | icmp_ln53_6_fu_444_p2.read());
}

void myFuncAccel4::thread_or_ln53_4_fu_505_p2() {
    or_ln53_4_fu_505_p2 = (icmp_ln53_9_fu_499_p2.read() | icmp_ln53_8_fu_493_p2.read());
}

void myFuncAccel4::thread_or_ln53_fu_358_p2() {
    or_ln53_fu_358_p2 = (icmp_ln53_1_fu_352_p2.read() | icmp_ln53_fu_346_p2.read());
}

void myFuncAccel4::thread_p_tmp_3_0_3_fu_556_p3() {
    p_tmp_3_0_3_fu_556_p3 = (!icmp_ln57_fu_550_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_fu_550_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_0_3_reg_874_pp0_iter6_reg.read());
}

void myFuncAccel4::thread_p_tmp_3_1_3_fu_564_p3() {
    p_tmp_3_1_3_fu_564_p3 = (!icmp_ln57_fu_550_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_fu_550_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_1_3_reg_881_pp0_iter6_reg.read());
}

void myFuncAccel4::thread_p_tmp_3_2_3_fu_571_p3() {
    p_tmp_3_2_3_fu_571_p3 = (!icmp_ln57_fu_550_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_fu_550_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_2_3_reg_888_pp0_iter6_reg.read());
}

void myFuncAccel4::thread_p_tmp_3_3_3_fu_578_p3() {
    p_tmp_3_3_3_fu_578_p3 = (!icmp_ln57_fu_550_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_fu_550_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_3_3_3_reg_895_pp0_iter6_reg.read());
}

void myFuncAccel4::thread_tmp_1_fu_332_p4() {
    tmp_1_fu_332_p4 = bitcast_ln53_fu_329_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_4_fu_309_p4() {
    tmp_4_fu_309_p4 = bitcast_ln53_1_fu_284_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_6_fu_381_p4() {
    tmp_6_fu_381_p4 = bitcast_ln53_2_fu_378_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_7_fu_479_p4() {
    tmp_7_fu_479_p4 = bitcast_ln53_4_fu_476_p1.read().range(30, 23);
}

void myFuncAccel4::thread_tmp_9_fu_430_p4() {
    tmp_9_fu_430_p4 = bitcast_ln53_3_fu_427_p1.read().range(30, 23);
}

void myFuncAccel4::thread_trunc_ln53_1_fu_342_p1() {
    trunc_ln53_1_fu_342_p1 = bitcast_ln53_fu_329_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln53_2_fu_391_p1() {
    trunc_ln53_2_fu_391_p1 = bitcast_ln53_2_fu_378_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln53_3_fu_440_p1() {
    trunc_ln53_3_fu_440_p1 = bitcast_ln53_3_fu_427_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln53_4_fu_489_p1() {
    trunc_ln53_4_fu_489_p1 = bitcast_ln53_4_fu_476_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_trunc_ln53_fu_288_p1() {
    trunc_ln53_fu_288_p1 = bitcast_ln53_1_fu_284_p1.read().range(23-1, 0);
}

void myFuncAccel4::thread_zext_ln51_1_fu_423_p1() {
    zext_ln51_1_fu_423_p1 = esl_zext<2,1>(and_ln53_3_fu_418_p2.read());
}

void myFuncAccel4::thread_zext_ln51_2_fu_472_p1() {
    zext_ln51_2_fu_472_p1 = esl_zext<2,1>(and_ln53_5_fu_467_p2.read());
}

void myFuncAccel4::thread_zext_ln51_fu_374_p1() {
    zext_ln51_fu_374_p1 = esl_zext<2,1>(and_ln53_1_fu_369_p2.read());
}

void myFuncAccel4::thread_zext_ln53_1_fu_538_p1() {
    zext_ln53_1_fu_538_p1 = esl_zext<3,2>(add_ln53_reg_917.read());
}

void myFuncAccel4::thread_zext_ln53_2_fu_541_p1() {
    zext_ln53_2_fu_541_p1 = esl_zext<3,2>(add_ln53_1_reg_922.read());
}

void myFuncAccel4::thread_zext_ln53_fu_522_p1() {
    zext_ln53_fu_522_p1 = esl_zext<2,1>(and_ln53_7_fu_516_p2.read());
}

void myFuncAccel4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_298_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_298_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, my_output_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, my_output_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, my_output_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void myFuncAccel4::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"size\" :  \"" << size.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dim\" :  \"" << dim.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"threshold\" :  \"" << threshold.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_0\" :  \"" << data0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_1\" :  \"" << data0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_2\" :  \"" << data0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_3\" :  \"" << data0_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_4\" :  \"" << data0_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_5\" :  \"" << data0_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_6\" :  \"" << data0_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_7\" :  \"" << data0_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_8\" :  \"" << data0_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_9\" :  \"" << data0_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_10\" :  \"" << data0_10.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_11\" :  \"" << data0_11.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_12\" :  \"" << data0_12.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_13\" :  \"" << data0_13.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_14\" :  \"" << data0_14.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data0_15\" :  \"" << data0_15.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"my_input1_TDATA\" :  \"" << my_input1_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"my_input1_TVALID\" :  \"" << my_input1_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"my_input1_TREADY\" :  \"" << my_input1_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"my_output_TDATA\" :  \"" << my_output_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"my_output_TVALID\" :  \"" << my_output_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"my_output_TREADY\" :  \"" << my_output_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

